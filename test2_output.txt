Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/6441b50eee32418eb03434ee9dc26e05-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/6441b50eee32418eb03434ee9dc26e05-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3355.83 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.976871
Cbc0038I Solution found of 3471.84
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 24 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 3460.23
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03377 (1) obj. 3460.23 iterations 12
Cbc0038I Pass   2: suminf.    0.04904 (1) obj. 3454.99 iterations 6
Cbc0038I Pass   3: suminf.    0.99245 (3) obj. 3460.23 iterations 5
Cbc0038I Pass   4: suminf.    0.42417 (3) obj. 3460.23 iterations 7
Cbc0038I Pass   5: suminf.    0.94801 (3) obj. 3460.23 iterations 6
Cbc0038I Pass   6: suminf.    0.57322 (3) obj. 3460.23 iterations 9
Cbc0038I Pass   7: suminf.    0.38944 (2) obj. 3460.23 iterations 4
Cbc0038I Pass   8: suminf.    0.40331 (2) obj. 3412.34 iterations 15
Cbc0038I Pass   9: suminf.    0.40331 (2) obj. 3412.34 iterations 0
Cbc0038I Pass  10: suminf.    0.44588 (2) obj. 3460.23 iterations 14
Cbc0038I Pass  11: suminf.    0.44588 (2) obj. 3460.23 iterations 0
Cbc0038I Pass  12: suminf.    0.68433 (3) obj. 3460.23 iterations 13
Cbc0038I Pass  13: suminf.    0.44607 (2) obj. 3460.23 iterations 10
Cbc0038I Pass  14: suminf.    0.63726 (3) obj. 3423.71 iterations 12
Cbc0038I Pass  15: suminf.    0.48364 (1) obj. 3450.29 iterations 6
Cbc0038I Pass  16: suminf.    0.96759 (3) obj. 3460.23 iterations 10
Cbc0038I Pass  17: suminf.    0.48953 (2) obj. 3460.23 iterations 3
Cbc0038I Pass  18: suminf.    0.72679 (4) obj. 3460.23 iterations 6
Cbc0038I Pass  19: suminf.    0.53822 (3) obj. 3460.23 iterations 5
Cbc0038I Pass  20: suminf.    1.21144 (3) obj. 3460.23 iterations 7
Cbc0038I Pass  21: suminf.    0.49251 (3) obj. 3460.23 iterations 3
Cbc0038I Pass  22: suminf.    0.76037 (3) obj. 3460.23 iterations 8
Cbc0038I Pass  23: suminf.    1.27955 (3) obj. 3360.39 iterations 7
Cbc0038I Pass  24: suminf.    0.71825 (3) obj. 3460.23 iterations 8
Cbc0038I Pass  25: suminf.    0.51636 (3) obj. 3460.23 iterations 5
Cbc0038I Pass  26: suminf.    0.85132 (3) obj. 3460.23 iterations 6
Cbc0038I Pass  27: suminf.    0.54127 (3) obj. 3460.23 iterations 11
Cbc0038I Pass  28: suminf.    0.38534 (3) obj. 3460.23 iterations 3
Cbc0038I Pass  29: suminf.    0.80576 (3) obj. 3460.23 iterations 9
Cbc0038I Pass  30: suminf.    0.44913 (3) obj. 3460.23 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 17 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 3471.84 - took 0.01 seconds
Cbc0012I Integer solution of 3471.8354 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0031I 7 added rows had average density of 21.714286
Cbc0013I At root node, 7 cuts changed objective from 3355.8264 to 3442.5955 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 29 row cuts average 24.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 32 row cuts average 35.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 84 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3471.8354 best solution, best possible 3442.5955 (0.05 seconds)
Cbc0001I Search completed - best objective 3471.83536099995, took 252 iterations and 4 nodes (0.07 seconds)
Cbc0032I Strong branching done 54 times (275 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 48 variables fixed on reduced cost
Cuts at root node changed objective from 3355.83 to 3442.6
Probing was tried 20 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 31 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 31 times and created 48 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Clique was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 31 times and created 82 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 31 times and created 184 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                3471.83536100
Enumerated nodes:               4
Total iterations:               252
Time (CPU seconds):             0.06
Time (Wallclock seconds):       0.07

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

initial land use distribution [2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 0, 1, 1, 2, 2, 0, 2, 0, 0, 1, 0]
Optimized Land Use with benefits restriction: [1, 0, 0, 2, 1, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2, 1, 2, 2, 2, 0, 1, 1, 2, 2, 1]
Initial total costs: 6803.291491468944
Optimized total costs: 3471.8353609999026
Initial total benefit1/ES1: 98.78025348910357
Optimized total benefit1/ES1: 99.2296730993424
Initial total Benefit2/ES2: 119.48678415654376
Optimized total benefit2/ES2: 123.28426328662206
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/e2e148d578484cef889ae4c05eb6f7d5-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/e2e148d578484cef889ae4c05eb6f7d5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1710.04 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.290654
Cbc0038I Pass   1: suminf.    0.13958 (1) obj. 1760.84 iterations 6
Cbc0038I Solution found of 2166.12
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from 2166.12 to 1971.56 (0.01 seconds)
Cbc0038I Round again with cutoff of 1945.41
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.13958 (1) obj. 1760.84 iterations 0
Cbc0038I Pass   3: suminf.    0.46858 (1) obj. 1945.41 iterations 4
Cbc0038I Pass   4: suminf.    0.46869 (3) obj. 1945.41 iterations 11
Cbc0038I Solution found of 1930.45
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 19 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 1886.37
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 3
Cbc0038I Pass   5: suminf.    0.13958 (1) obj. 1760.84 iterations 0
Cbc0038I Pass   6: suminf.    0.40608 (1) obj. 1886.37 iterations 4
Cbc0038I Pass   7: suminf.    0.75505 (3) obj. 1886.37 iterations 10
Cbc0038I Pass   8: suminf.    0.75505 (3) obj. 1886.37 iterations 1
Cbc0038I Pass   9: suminf.    1.54113 (4) obj. 1886.37 iterations 4
Cbc0038I Pass  10: suminf.    0.82807 (2) obj. 1886.37 iterations 2
Cbc0038I Pass  11: suminf.    0.08017 (3) obj. 1886.37 iterations 6
Cbc0038I Pass  12: suminf.    0.69300 (3) obj. 1886.37 iterations 8
Cbc0038I Pass  13: suminf.    0.32949 (3) obj. 1886.37 iterations 15
Cbc0038I Pass  14: suminf.    0.10049 (3) obj. 1886.37 iterations 6
Cbc0038I Pass  15: suminf.    0.20702 (3) obj. 1886.37 iterations 5
Cbc0038I Pass  16: suminf.    0.88811 (4) obj. 1886.37 iterations 8
Cbc0038I Pass  17: suminf.    0.70903 (3) obj. 1886.37 iterations 4
Cbc0038I Pass  18: suminf.    0.82070 (3) obj. 1886.37 iterations 5
Cbc0038I Pass  19: suminf.    0.82070 (3) obj. 1886.37 iterations 0
Cbc0038I Pass  20: suminf.    0.60635 (3) obj. 1886.37 iterations 3
Cbc0038I Pass  21: suminf.    0.46864 (3) obj. 1886.37 iterations 4
Cbc0038I Pass  22: suminf.    0.86578 (3) obj. 1886.37 iterations 6
Cbc0038I Pass  23: suminf.    1.15078 (4) obj. 1886.37 iterations 5
Cbc0038I Pass  24: suminf.    0.49873 (1) obj. 1862.57 iterations 8
Cbc0038I Pass  25: suminf.    0.44822 (1) obj. 1886.37 iterations 6
Cbc0038I Pass  26: suminf.    0.76411 (2) obj. 1886.37 iterations 5
Cbc0038I Pass  27: suminf.    0.40608 (1) obj. 1886.37 iterations 3
Cbc0038I Pass  28: suminf.    0.13958 (1) obj. 1760.84 iterations 5
Cbc0038I Pass  29: suminf.    1.09648 (4) obj. 1886.37 iterations 10
Cbc0038I Pass  30: suminf.    0.21012 (1) obj. 1842.23 iterations 6
Cbc0038I Pass  31: suminf.    0.30384 (1) obj. 1886.37 iterations 7
Cbc0038I Pass  32: suminf.    0.72436 (3) obj. 1886.37 iterations 10
Cbc0038I Pass  33: suminf.    0.58189 (3) obj. 1886.37 iterations 3
Cbc0038I Pass  34: suminf.    1.24714 (3) obj. 1886.37 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 11 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 8 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 1930.45 to 1848.01 (0.02 seconds)
Cbc0038I Round again with cutoff of 1806.62
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 4
Cbc0038I Pass  34: suminf.    0.15865 (1) obj. 1755.52 iterations 3
Cbc0038I Pass  35: suminf.    0.29282 (1) obj. 1806.62 iterations 5
Cbc0038I Pass  36: suminf.    0.42323 (3) obj. 1742.48 iterations 10
Cbc0038I Pass  37: suminf.    0.39793 (2) obj. 1806.62 iterations 12
Cbc0038I Pass  38: suminf.    0.39793 (2) obj. 1806.62 iterations 0
Cbc0038I Pass  39: suminf.    0.31563 (3) obj. 1714.06 iterations 8
Cbc0038I Pass  40: suminf.    0.39793 (2) obj. 1806.62 iterations 6
Cbc0038I Pass  41: suminf.    0.39793 (2) obj. 1806.62 iterations 1
Cbc0038I Pass  42: suminf.    0.31563 (3) obj. 1714.06 iterations 8
Cbc0038I Pass  43: suminf.    0.15865 (1) obj. 1755.52 iterations 3
Cbc0038I Pass  44: suminf.    0.29282 (1) obj. 1806.62 iterations 5
Cbc0038I Pass  45: suminf.    0.46014 (3) obj. 1806.62 iterations 6
Cbc0038I Pass  46: suminf.    0.45321 (2) obj. 1795.22 iterations 9
Cbc0038I Pass  47: suminf.    0.20923 (3) obj. 1806.62 iterations 4
Cbc0038I Pass  48: suminf.    0.29621 (3) obj. 1806.62 iterations 6
Cbc0038I Pass  49: suminf.    0.69028 (3) obj. 1806.62 iterations 6
Cbc0038I Pass  50: suminf.    0.84437 (4) obj. 1806.62 iterations 12
Cbc0038I Pass  51: suminf.    0.78851 (4) obj. 1806.62 iterations 3
Cbc0038I Pass  52: suminf.    1.02175 (3) obj. 1806.62 iterations 8
Cbc0038I Pass  53: suminf.    0.15865 (1) obj. 1755.52 iterations 8
Cbc0038I Pass  54: suminf.    0.29282 (1) obj. 1806.62 iterations 6
Cbc0038I Pass  55: suminf.    0.23473 (4) obj. 1806.62 iterations 7
Cbc0038I Pass  56: suminf.    0.11814 (3) obj. 1806.62 iterations 4
Cbc0038I Pass  57: suminf.    0.19956 (3) obj. 1806.62 iterations 1
Cbc0038I Pass  58: suminf.    0.19076 (3) obj. 1806.62 iterations 2
Cbc0038I Pass  59: suminf.    0.40683 (2) obj. 1806.62 iterations 4
Cbc0038I Pass  60: suminf.    0.39793 (2) obj. 1806.62 iterations 2
Cbc0038I Pass  61: suminf.    0.31563 (3) obj. 1714.06 iterations 9
Cbc0038I Pass  62: suminf.    0.15865 (1) obj. 1755.52 iterations 3
Cbc0038I Pass  63: suminf.    0.29282 (1) obj. 1806.62 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 1848.01 - took 0.02 seconds
Cbc0012I Integer solution of 1848.0105 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of 1793.7594 found by DiveCoefficient after 75 iterations and 0 nodes (0.04 seconds)
Cbc0031I 9 added rows had average density of 17.333333
Cbc0013I At root node, 9 cuts changed objective from 1710.0421 to 1793.7594 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 35 row cuts average 30.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 83 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective 1793.75944718805, took 75 iterations and 0 nodes (0.04 seconds)
Cbc0032I Strong branching done 2 times (4 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 29 variables fixed on reduced cost
Cuts at root node changed objective from 1710.04 to 1793.76
Probing was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 10 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 10 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 10 times and created 35 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 10 times and created 83 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1793.75944719
Enumerated nodes:               0
Total iterations:               75
Time (CPU seconds):             0.04
Time (Wallclock seconds):       0.04

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

initial land use distribution [2, 1, 2, 0, 2, 0, 2, 0, 0, 1, 2, 0, 2, 1, 2, 1, 2, 1, 0, 1, 2, 0, 0, 2, 1]
Optimized Land Use with benefits restriction: [0, 0, 2, 2, 2, 0, 1, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 1, 1]
Initial total costs: 4875.653431789433
Optimized total costs: 1793.7594471879665
Initial total benefit1/ES1: 60.84273763472996
Optimized total benefit1/ES1: 61.169373639884384
Initial total Benefit2/ES2: 95.26177135500421
Optimized total benefit2/ES2: 96.94618324982575
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/c066e19b0db24b2db720c1125bc6258b-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/c066e19b0db24b2db720c1125bc6258b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2263.6 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.7881
Cbc0038I Pass   1: suminf.    0.28671 (1) obj. 2374.01 iterations 4
Cbc0038I Solution found of 2649.14
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 22 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from 2649.14 to 2494.16 (0.01 seconds)
Cbc0038I Round again with cutoff of 2471.1
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.28671 (1) obj. 2374.01 iterations 0
Cbc0038I Pass   3: suminf.    0.46454 (2) obj. 2471.1 iterations 4
Cbc0038I Pass   4: suminf.    0.46259 (3) obj. 2278.18 iterations 4
Cbc0038I Pass   5: suminf.    0.62644 (4) obj. 2471.1 iterations 6
Cbc0038I Pass   6: suminf.    0.62644 (4) obj. 2471.1 iterations 1
Cbc0038I Pass   7: suminf.    1.21342 (3) obj. 2471.1 iterations 4
Cbc0038I Pass   8: suminf.    0.52587 (3) obj. 2471.1 iterations 3
Cbc0038I Pass   9: suminf.    0.50942 (3) obj. 2471.1 iterations 1
Cbc0038I Pass  10: suminf.    0.46259 (3) obj. 2278.18 iterations 3
Cbc0038I Pass  11: suminf.    0.28671 (1) obj. 2374.01 iterations 2
Cbc0038I Pass  12: suminf.    0.46454 (2) obj. 2471.1 iterations 4
Cbc0038I Pass  13: suminf.    0.46259 (3) obj. 2278.18 iterations 4
Cbc0038I Pass  14: suminf.    0.56820 (3) obj. 2471.1 iterations 11
Cbc0038I Pass  15: suminf.    0.24751 (2) obj. 2471.1 iterations 4
Cbc0038I Pass  16: suminf.    0.32334 (3) obj. 2471.1 iterations 6
Cbc0038I Pass  17: suminf.    0.96148 (3) obj. 2471.1 iterations 5
Cbc0038I Pass  18: suminf.    1.53185 (4) obj. 2471.1 iterations 12
Cbc0038I Pass  19: suminf.    0.49551 (3) obj. 2471.1 iterations 3
Cbc0038I Pass  20: suminf.    0.73246 (3) obj. 2471.1 iterations 2
Cbc0038I Pass  21: suminf.    0.90241 (4) obj. 2471.1 iterations 6
Cbc0038I Pass  22: suminf.    0.27976 (1) obj. 2459.19 iterations 4
Cbc0038I Pass  23: suminf.    0.30835 (1) obj. 2471.1 iterations 1
Cbc0038I Pass  24: suminf.    0.96302 (3) obj. 2471.1 iterations 8
Cbc0038I Pass  25: suminf.    0.41097 (4) obj. 2471.1 iterations 7
Cbc0038I Pass  26: suminf.    0.89581 (3) obj. 2471.1 iterations 5
Cbc0038I Pass  27: suminf.    0.49528 (1) obj. 2471.1 iterations 2
Cbc0038I Pass  28: suminf.    0.23869 (1) obj. 2364.17 iterations 1
Cbc0038I Pass  29: suminf.    0.96667 (4) obj. 2471.1 iterations 11
Cbc0038I Pass  30: suminf.    0.45433 (3) obj. 2471.1 iterations 5
Cbc0038I Pass  31: suminf.    0.44693 (2) obj. 2471.1 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 12 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 2494.16 to 2438.8 (0.02 seconds)
Cbc0038I Round again with cutoff of 2403.76
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.28671 (1) obj. 2374.01 iterations 0
Cbc0038I Pass  32: suminf.    0.63872 (2) obj. 2403.76 iterations 4
Cbc0038I Pass  33: suminf.    0.46259 (3) obj. 2278.18 iterations 4
Cbc0038I Pass  34: suminf.    0.65322 (4) obj. 2403.76 iterations 6
Cbc0038I Pass  35: suminf.    0.25442 (2) obj. 2403.76 iterations 4
Cbc0038I Pass  36: suminf.    0.34913 (3) obj. 2403.76 iterations 3
Cbc0038I Pass  37: suminf.    0.54996 (4) obj. 2403.76 iterations 11
Cbc0038I Pass  38: suminf.    1.43401 (5) obj. 2403.76 iterations 11
Cbc0038I Pass  39: suminf.    0.83784 (3) obj. 2403.76 iterations 2
Cbc0038I Pass  40: suminf.    0.64957 (3) obj. 2403.76 iterations 3
Cbc0038I Pass  41: suminf.    0.63872 (2) obj. 2403.76 iterations 7
Cbc0038I Pass  42: suminf.    0.63872 (2) obj. 2403.76 iterations 1
Cbc0038I Pass  43: suminf.    0.46259 (3) obj. 2278.18 iterations 4
Cbc0038I Pass  44: suminf.    0.28671 (1) obj. 2374.01 iterations 2
Cbc0038I Pass  45: suminf.    1.43470 (4) obj. 2403.76 iterations 3
Cbc0038I Pass  46: suminf.    1.43470 (4) obj. 2403.76 iterations 0
Cbc0038I Pass  47: suminf.    0.80604 (3) obj. 2403.76 iterations 5
Cbc0038I Pass  48: suminf.    0.73507 (3) obj. 2403.76 iterations 1
Cbc0038I Pass  49: suminf.    0.82637 (3) obj. 2403.76 iterations 1
Cbc0038I Pass  50: suminf.    1.41748 (4) obj. 2403.76 iterations 4
Cbc0038I Pass  51: suminf.    1.41748 (4) obj. 2403.76 iterations 0
Cbc0038I Pass  52: suminf.    1.25251 (3) obj. 2403.76 iterations 3
Cbc0038I Pass  53: suminf.    0.33581 (1) obj. 2400.1 iterations 4
Cbc0038I Pass  54: suminf.    0.65712 (2) obj. 2403.76 iterations 3
Cbc0038I Pass  55: suminf.    0.56503 (3) obj. 2303.59 iterations 4
Cbc0038I Pass  56: suminf.    0.61201 (4) obj. 2403.76 iterations 6
Cbc0038I Pass  57: suminf.    0.55696 (3) obj. 2403.76 iterations 1
Cbc0038I Pass  58: suminf.    1.25251 (3) obj. 2403.76 iterations 3
Cbc0038I Pass  59: suminf.    0.33581 (1) obj. 2400.1 iterations 4
Cbc0038I Pass  60: suminf.    0.65712 (2) obj. 2403.76 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2438.8 - took 0.02 seconds
Cbc0012I Integer solution of 2438.8046 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 1 rows 2 columns
Cbc0031I 7 added rows had average density of 23.428571
Cbc0013I At root node, 7 cuts changed objective from 2263.602 to 2395.8397 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 28 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 103 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2438.8046 best solution, best possible 2395.8397 (0.04 seconds)
Cbc0001I Search completed - best objective 2438.80461013174, took 320 iterations and 8 nodes (0.07 seconds)
Cbc0032I Strong branching done 110 times (445 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 50 variables fixed on reduced cost
Cuts at root node changed objective from 2263.6 to 2395.84
Probing was tried 38 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 35 times and created 82 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 35 times and created 160 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 35 times and created 295 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2438.80461013
Enumerated nodes:               8
Total iterations:               320
Time (CPU seconds):             0.07
Time (Wallclock seconds):       0.07

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

initial land use distribution [0, 1, 1, 1, 0, 2, 2, 1, 2, 0, 0, 1, 0, 2, 2, 0, 2, 1, 1, 1, 1, 1, 2, 1, 1]
Optimized Land Use with benefits restriction: [1, 0, 1, 0, 1, 1, 0, 2, 1, 1, 2, 0, 1, 2, 0, 2, 0, 1, 0, 0, 2, 2, 0, 0, 0]
Initial total costs: 6358.283304081462
Optimized total costs: 2438.804610131773
Initial total benefit1/ES1: 85.52151752713867
Optimized total benefit1/ES1: 88.6135240436607
Initial total Benefit2/ES2: 60.01583385190938
Optimized total benefit2/ES2: 61.347701646011366
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/0bccc71c28d646e5adc3eeee83b58ef9-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/0bccc71c28d646e5adc3eeee83b58ef9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1712.26 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.528007
Cbc0038I Pass   1: suminf.    0.21232 (1) obj. 1823 iterations 9
Cbc0038I Solution found of 2208.82
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2159.17
Cbc0038I Pass   2: suminf.    0.21232 (1) obj. 1823 iterations 0
Cbc0038I Pass   3: suminf.    0.10138 (1) obj. 2159.17 iterations 4
Cbc0038I Pass   4: suminf.    0.12048 (3) obj. 2159.17 iterations 16
Cbc0038I Pass   5: suminf.    0.03599 (3) obj. 2159.17 iterations 11
Cbc0038I Pass   6: suminf.    0.46359 (2) obj. 2159.17 iterations 5
Cbc0038I Pass   7: suminf.    1.08920 (4) obj. 2159.17 iterations 9
Cbc0038I Pass   8: suminf.    0.12080 (1) obj. 2116.47 iterations 7
Cbc0038I Pass   9: suminf.    0.23415 (1) obj. 2159.17 iterations 4
Cbc0038I Pass  10: suminf.    1.21705 (4) obj. 2159.17 iterations 10
Cbc0038I Pass  11: suminf.    1.17942 (4) obj. 2159.17 iterations 5
Cbc0038I Pass  12: suminf.    1.05761 (3) obj. 2159.17 iterations 5
Cbc0038I Pass  13: suminf.    0.91016 (4) obj. 2159.17 iterations 4
Cbc0038I Pass  14: suminf.    0.35087 (3) obj. 2159.17 iterations 6
Cbc0038I Pass  15: suminf.    0.01874 (1) obj. 2103.15 iterations 11
Cbc0038I Pass  16: suminf.    0.16744 (1) obj. 2159.17 iterations 4
Cbc0038I Pass  17: suminf.    0.75121 (3) obj. 2159.17 iterations 12
Cbc0038I Pass  18: suminf.    0.52756 (2) obj. 2159.17 iterations 4
Cbc0038I Pass  19: suminf.    0.63860 (2) obj. 2147.67 iterations 7
Cbc0038I Pass  20: suminf.    0.43082 (3) obj. 2159.17 iterations 6
Cbc0038I Pass  21: suminf.    0.71861 (3) obj. 2159.17 iterations 6
Cbc0038I Pass  22: suminf.    0.36927 (3) obj. 2159.17 iterations 8
Cbc0038I Pass  23: suminf.    0.73446 (4) obj. 2159.17 iterations 5
Cbc0038I Pass  24: suminf.    0.36927 (3) obj. 2159.17 iterations 9
Cbc0038I Pass  25: suminf.    1.27389 (4) obj. 2159.17 iterations 9
Cbc0038I Pass  26: suminf.    0.31814 (3) obj. 2159.17 iterations 13
Cbc0038I Pass  27: suminf.    1.03442 (3) obj. 2159.17 iterations 3
Cbc0038I Pass  28: suminf.    0.12088 (1) obj. 2069.52 iterations 7
Cbc0038I Pass  29: suminf.    0.35886 (1) obj. 2159.17 iterations 5
Cbc0038I Pass  30: suminf.    0.77093 (4) obj. 2159.17 iterations 12
Cbc0038I Pass  31: suminf.    0.08745 (1) obj. 2159.17 iterations 7
Cbc0038I Rounding solution of 2192.11 is better than previous of 2208.82

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 10 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 8 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 2192.11 to 1872.1 (0.02 seconds)
Cbc0038I Round again with cutoff of 1840.13
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.31367 (1) obj. 1802.91 iterations 14
Cbc0038I Pass  32: suminf.    0.48576 (1) obj. 1840.13 iterations 6
Cbc0038I Pass  33: suminf.    0.49664 (1) obj. 1836.85 iterations 2
Cbc0038I Pass  34: suminf.    0.60377 (3) obj. 1840.13 iterations 4
Cbc0038I Pass  35: suminf.    0.42003 (2) obj. 1840.13 iterations 1
Cbc0038I Pass  36: suminf.    0.70727 (2) obj. 1787.71 iterations 6
Cbc0038I Pass  37: suminf.    0.33432 (3) obj. 1840.13 iterations 4
Cbc0038I Pass  38: suminf.    0.69525 (3) obj. 1840.13 iterations 3
Cbc0038I Pass  39: suminf.    0.60811 (3) obj. 1840.13 iterations 8
Cbc0038I Pass  40: suminf.    0.51679 (3) obj. 1840.13 iterations 8
Cbc0038I Pass  41: suminf.    0.57658 (2) obj. 1840.13 iterations 9
Cbc0038I Pass  42: suminf.    0.39781 (3) obj. 1840.13 iterations 3
Cbc0038I Pass  43: suminf.    0.68241 (3) obj. 1840.13 iterations 3
Cbc0038I Pass  44: suminf.    0.33432 (3) obj. 1840.13 iterations 8
Cbc0038I Pass  45: suminf.    0.33432 (3) obj. 1840.13 iterations 0
Cbc0038I Pass  46: suminf.    0.69525 (3) obj. 1840.13 iterations 3
Cbc0038I Pass  47: suminf.    0.57888 (4) obj. 1840.13 iterations 9
Cbc0038I Pass  48: suminf.    0.55449 (4) obj. 1840.13 iterations 4
Cbc0038I Pass  49: suminf.    1.04209 (4) obj. 1840.13 iterations 7
Cbc0038I Pass  50: suminf.    0.77890 (4) obj. 1840.13 iterations 8
Cbc0038I Pass  51: suminf.    1.07797 (3) obj. 1840.13 iterations 6
Cbc0038I Pass  52: suminf.    0.31367 (1) obj. 1802.91 iterations 8
Cbc0038I Pass  53: suminf.    0.48576 (1) obj. 1840.13 iterations 4
Cbc0038I Pass  54: suminf.    0.49664 (1) obj. 1836.85 iterations 2
Cbc0038I Pass  55: suminf.    1.37225 (4) obj. 1840.13 iterations 10
Cbc0038I Pass  56: suminf.    0.47809 (2) obj. 1840.13 iterations 7
Cbc0038I Pass  57: suminf.    0.48172 (3) obj. 1840.13 iterations 5
Cbc0038I Pass  58: suminf.    0.41846 (4) obj. 1840.13 iterations 3
Cbc0038I Pass  59: suminf.    0.50026 (2) obj. 1840.13 iterations 4
Cbc0038I Pass  60: suminf.    0.75423 (4) obj. 1840.13 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 1872.1 - took 0.02 seconds
Cbc0012I Integer solution of 1872.1028 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0031I 9 added rows had average density of 26.333333
Cbc0013I At root node, 9 cuts changed objective from 1712.2555 to 1797.7034 in 27 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 45 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 78 row cuts average 35.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 92 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1872.1028 best solution, best possible 1797.7034 (0.07 seconds)
Cbc0001I Search completed - best objective 1872.10279338127, took 493 iterations and 12 nodes (0.12 seconds)
Cbc0032I Strong branching done 192 times (977 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 87 variables fixed on reduced cost
Cuts at root node changed objective from 1712.26 to 1797.7
Probing was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 67 times and created 123 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
Clique was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 67 times and created 227 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 67 times and created 240 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1872.10279338
Enumerated nodes:               12
Total iterations:               493
Time (CPU seconds):             0.12
Time (Wallclock seconds):       0.12

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.12

initial land use distribution [0, 2, 1, 2, 0, 2, 0, 1, 2, 2, 2, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 2, 2, 2, 1]
Optimized Land Use with benefits restriction: [2, 1, 0, 0, 2, 2, 1, 1, 0, 0, 2, 2, 0, 2, 1, 0, 0, 1, 0, 0, 1, 1, 2, 0, 2]
Initial total costs: 5452.4084659699265
Optimized total costs: 1872.10279338119
Initial total benefit1/ES1: 74.48428677953251
Optimized total benefit1/ES1: 75.58094844312582
Initial total Benefit2/ES2: 82.66040818995509
Optimized total benefit2/ES2: 86.51740635987565
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/a8cf4b4bece04eb9861db9f0f8e79e17-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/a8cf4b4bece04eb9861db9f0f8e79e17-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 390.392 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.787457
Cbc0038I Pass   1: suminf.    0.23311 (2) obj. 422.032 iterations 6
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 666.685 iterations 4
Cbc0038I Solution found of 666.685
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 22 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from 666.685 to 499.068 (0.01 seconds)
Cbc0038I Round again with cutoff of 488.2
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.39229 (2) obj. 391.987 iterations 7
Cbc0038I Pass   4: suminf.    0.85748 (2) obj. 488.2 iterations 6
Cbc0038I Pass   5: suminf.    0.38481 (2) obj. 396.827 iterations 1
Cbc0038I Pass   6: suminf.    0.03791 (1) obj. 488.2 iterations 2
Cbc0038I Pass   7: suminf.    0.14936 (3) obj. 435.515 iterations 7
Cbc0038I Pass   8: suminf.    0.10369 (2) obj. 435.164 iterations 1
Cbc0038I Pass   9: suminf.    0.72672 (2) obj. 488.2 iterations 5
Cbc0038I Pass  10: suminf.    0.47818 (2) obj. 442.241 iterations 1
Cbc0038I Pass  11: suminf.    0.56605 (3) obj. 488.2 iterations 8
Cbc0038I Pass  12: suminf.    0.42719 (1) obj. 488.2 iterations 4
Cbc0038I Pass  13: suminf.    0.48406 (2) obj. 479.965 iterations 2
Cbc0038I Pass  14: suminf.    0.14936 (3) obj. 435.515 iterations 5
Cbc0038I Pass  15: suminf.    0.10369 (2) obj. 435.164 iterations 2
Cbc0038I Pass  16: suminf.    0.72672 (2) obj. 488.2 iterations 5
Cbc0038I Pass  17: suminf.    0.47818 (2) obj. 442.241 iterations 1
Cbc0038I Pass  18: suminf.    1.38958 (5) obj. 488.2 iterations 7
Cbc0038I Pass  19: suminf.    0.20944 (2) obj. 447.645 iterations 3
Cbc0038I Pass  20: suminf.    0.42875 (2) obj. 488.2 iterations 1
Cbc0038I Pass  21: suminf.    0.72105 (3) obj. 488.2 iterations 7
Cbc0038I Pass  22: suminf.    0.72105 (3) obj. 488.2 iterations 0
Cbc0038I Pass  23: suminf.    0.36924 (1) obj. 488.2 iterations 5
Cbc0038I Pass  24: suminf.    0.49558 (1) obj. 451.985 iterations 1
Cbc0038I Pass  25: suminf.    0.66941 (4) obj. 488.2 iterations 4
Cbc0038I Pass  26: suminf.    0.47156 (2) obj. 488.2 iterations 2
Cbc0038I Pass  27: suminf.    0.98563 (3) obj. 488.2 iterations 3
Cbc0038I Pass  28: suminf.    0.33501 (2) obj. 488.2 iterations 1
Cbc0038I Pass  29: suminf.    0.32191 (1) obj. 485.779 iterations 1
Cbc0038I Pass  30: suminf.    0.33036 (1) obj. 488.2 iterations 1
Cbc0038I Pass  31: suminf.    0.51477 (3) obj. 488.2 iterations 3
Cbc0038I Pass  32: suminf.    0.50931 (2) obj. 488.2 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 499.068 to 498.895 (0.02 seconds)
Cbc0038I Round again with cutoff of 468.639
Cbc0038I Reduced cost fixing fixed 38 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.39320 (2) obj. 390.791 iterations 2
Cbc0038I Pass  33: suminf.    0.58256 (2) obj. 468.639 iterations 4
Cbc0038I Pass  34: suminf.    0.38571 (2) obj. 395.631 iterations 1
Cbc0038I Pass  35: suminf.    0.10615 (1) obj. 468.639 iterations 2
Cbc0038I Pass  36: suminf.    0.15974 (1) obj. 445.47 iterations 4
Cbc0038I Pass  37: suminf.    0.15974 (1) obj. 445.47 iterations 0
Cbc0038I Pass  38: suminf.    0.43748 (1) obj. 468.639 iterations 3
Cbc0038I Pass  39: suminf.    0.49558 (1) obj. 451.985 iterations 1
Cbc0038I Pass  40: suminf.    0.65700 (4) obj. 468.639 iterations 8
Cbc0038I Pass  41: suminf.    0.58846 (3) obj. 468.639 iterations 3
Cbc0038I Pass  42: suminf.    0.39234 (2) obj. 468.639 iterations 2
Cbc0038I Pass  43: suminf.    0.39234 (2) obj. 468.639 iterations 0
Cbc0038I Pass  44: suminf.    0.10460 (2) obj. 433.968 iterations 3
Cbc0038I Pass  45: suminf.    0.10460 (2) obj. 433.968 iterations 0
Cbc0038I Pass  46: suminf.    0.76940 (2) obj. 468.639 iterations 5
Cbc0038I Pass  47: suminf.    0.47908 (2) obj. 441.045 iterations 1
Cbc0038I Pass  48: suminf.    0.47908 (2) obj. 441.045 iterations 0
Cbc0038I Pass  49: suminf.    1.01601 (4) obj. 468.639 iterations 7
Cbc0038I Pass  50: suminf.    0.94594 (4) obj. 468.639 iterations 2
Cbc0038I Pass  51: suminf.    0.15974 (1) obj. 445.47 iterations 4
Cbc0038I Pass  52: suminf.    0.15974 (1) obj. 445.47 iterations 0
Cbc0038I Pass  53: suminf.    0.43748 (1) obj. 468.639 iterations 3
Cbc0038I Pass  54: suminf.    0.49558 (1) obj. 451.985 iterations 1
Cbc0038I Pass  55: suminf.    0.67965 (2) obj. 468.639 iterations 2
Cbc0038I Pass  56: suminf.    0.49558 (1) obj. 451.985 iterations 2
Cbc0038I Pass  57: suminf.    0.74245 (2) obj. 468.639 iterations 5
Cbc0038I Pass  58: suminf.    0.59689 (2) obj. 468.639 iterations 2
Cbc0038I Pass  59: suminf.    0.15974 (1) obj. 445.47 iterations 3
Cbc0038I Pass  60: suminf.    0.43748 (1) obj. 468.639 iterations 3
Cbc0038I Pass  61: suminf.    0.43748 (1) obj. 468.639 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 18 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 498.895 - took 0.02 seconds
Cbc0012I Integer solution of 498.89539 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 1 rows 2 columns
Cbc0031I 9 added rows had average density of 19.111111
Cbc0013I At root node, 9 cuts changed objective from 390.39216 to 470.9559 in 27 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 82 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 52 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 117 row cuts average 25.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 124 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 498.89539 best solution, best possible 470.9559 (0.06 seconds)
Cbc0001I Search completed - best objective 498.8953936981, took 431 iterations and 6 nodes (0.09 seconds)
Cbc0032I Strong branching done 94 times (489 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 49 variables fixed on reduced cost
Cuts at root node changed objective from 390.392 to 470.956
Probing was tried 27 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 58 times and created 82 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Knapsack was tried 58 times and created 102 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
Clique was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 58 times and created 263 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 58 times and created 242 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                498.89539370
Enumerated nodes:               6
Total iterations:               431
Time (CPU seconds):             0.09
Time (Wallclock seconds):       0.09

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

initial land use distribution [2, 1, 2, 0, 0, 1, 1, 1, 2, 0, 1, 2, 0, 0, 0, 1, 0, 1, 0, 0, 2, 0, 0, 0, 0]
Optimized Land Use with benefits restriction: [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 2, 0, 1, 2, 0, 0, 2, 1, 0, 0, 1, 0, 0, 0, 1]
Initial total costs: 3760.200492561452
Optimized total costs: 498.8953936981021
Initial total benefit1/ES1: 57.76374979546082
Optimized total benefit1/ES1: 60.78334902998708
Initial total Benefit2/ES2: 38.44687009463958
Optimized total benefit2/ES2: 39.07859805205875
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/9e3aede8793d45ebb414c26a430fa023-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/9e3aede8793d45ebb414c26a430fa023-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2609.58 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.09338
Cbc0038I Pass   1: suminf.    0.45555 (1) obj. 2746.38 iterations 11
Cbc0038I Solution found of 2915.19
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 2915.19 to 2772.38 (0.01 seconds)
Cbc0038I Round again with cutoff of 2756.1
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.45555 (1) obj. 2746.38 iterations 0
Cbc0038I Pass   3: suminf.    0.37620 (1) obj. 2756.1 iterations 6
Cbc0038I Pass   4: suminf.    0.41199 (1) obj. 2740.97 iterations 2
Cbc0038I Pass   5: suminf.    1.36692 (5) obj. 2756.1 iterations 14
Cbc0038I Pass   6: suminf.    0.89829 (3) obj. 2756.1 iterations 6
Cbc0038I Pass   7: suminf.    0.53108 (3) obj. 2756.1 iterations 9
Cbc0038I Pass   8: suminf.    1.21760 (3) obj. 2756.1 iterations 5
Cbc0038I Pass   9: suminf.    0.37620 (1) obj. 2756.1 iterations 4
Cbc0038I Pass  10: suminf.    0.41199 (1) obj. 2740.97 iterations 2
Cbc0038I Pass  11: suminf.    0.56754 (4) obj. 2756.1 iterations 10
Cbc0038I Pass  12: suminf.    0.23357 (3) obj. 2756.1 iterations 6
Cbc0038I Pass  13: suminf.    0.65085 (3) obj. 2756.1 iterations 6
Cbc0038I Pass  14: suminf.    0.26898 (1) obj. 2724.2 iterations 4
Cbc0038I Pass  15: suminf.    0.34443 (1) obj. 2756.1 iterations 3
Cbc0038I Pass  16: suminf.    0.47082 (4) obj. 2756.1 iterations 14
Cbc0038I Pass  17: suminf.    0.15689 (1) obj. 2724.19 iterations 3
Cbc0038I Pass  18: suminf.    0.23235 (1) obj. 2756.1 iterations 2
Cbc0038I Pass  19: suminf.    1.37604 (4) obj. 2756.1 iterations 8
Cbc0038I Pass  20: suminf.    0.57338 (3) obj. 2756.1 iterations 5
Cbc0038I Pass  21: suminf.    0.34541 (3) obj. 2650.44 iterations 5
Cbc0038I Solution found of 2691.6
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2675.19
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 3
Cbc0038I Pass  22: suminf.    0.61676 (3) obj. 2675.19 iterations 1
Cbc0038I Pass  23: suminf.    1.08435 (3) obj. 2675.19 iterations 5
Cbc0038I Pass  24: suminf.    1.42710 (4) obj. 2675.19 iterations 7
Cbc0038I Pass  25: suminf.    1.25505 (4) obj. 2675.19 iterations 7
Cbc0038I Pass  26: suminf.    0.76560 (3) obj. 2675.19 iterations 6
Cbc0038I Pass  27: suminf.    0.64455 (2) obj. 2675.19 iterations 3
Cbc0038I Pass  28: suminf.    0.79357 (3) obj. 2631.07 iterations 6
Cbc0038I Pass  29: suminf.    0.61676 (3) obj. 2675.19 iterations 4
Cbc0038I Pass  30: suminf.    1.08435 (3) obj. 2675.19 iterations 4
Cbc0038I Pass  31: suminf.    0.84556 (3) obj. 2675.19 iterations 11
Cbc0038I Pass  32: suminf.    0.75016 (3) obj. 2675.19 iterations 5
Cbc0038I Pass  33: suminf.    0.75016 (3) obj. 2675.19 iterations 2
Cbc0038I Pass  34: suminf.    0.75016 (3) obj. 2675.19 iterations 2
Cbc0038I Pass  35: suminf.    1.76866 (5) obj. 2675.19 iterations 2
Cbc0038I Pass  36: suminf.    0.53367 (4) obj. 2675.19 iterations 6
Cbc0038I Pass  37: suminf.    0.36673 (3) obj. 2675.19 iterations 9
Cbc0038I Pass  38: suminf.    0.39260 (3) obj. 2675.19 iterations 7
Cbc0038I Pass  39: suminf.    0.73096 (3) obj. 2675.19 iterations 8
Cbc0038I Pass  40: suminf.    0.73096 (3) obj. 2675.19 iterations 2
Cbc0038I Pass  41: suminf.    0.75710 (3) obj. 2613.23 iterations 9
Cbc0038I Pass  42: suminf.    0.61676 (3) obj. 2675.19 iterations 3
Cbc0038I Pass  43: suminf.    1.08435 (3) obj. 2675.19 iterations 5
Cbc0038I Pass  44: suminf.    0.43319 (3) obj. 2675.19 iterations 10
Cbc0038I Pass  45: suminf.    0.15141 (1) obj. 2641.34 iterations 5
Cbc0038I Pass  46: suminf.    0.73447 (2) obj. 2675.19 iterations 4
Cbc0038I Pass  47: suminf.    0.15141 (1) obj. 2641.34 iterations 3
Cbc0038I Pass  48: suminf.    0.68358 (4) obj. 2675.19 iterations 12
Cbc0038I Pass  49: suminf.    0.48315 (2) obj. 2675.19 iterations 13
Cbc0038I Pass  50: suminf.    0.45558 (2) obj. 2675.19 iterations 7
Cbc0038I Pass  51: suminf.    0.56025 (2) obj. 2675.19 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2691.6 - took 0.02 seconds
Cbc0012I Integer solution of 2691.5966 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 4 columns
Cbc0031I 8 added rows had average density of 20
Cbc0013I At root node, 8 cuts changed objective from 2609.5785 to 2667.8694 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 44 row cuts average 26.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 84 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2691.5966 best solution, best possible 2667.8694 (0.04 seconds)
Cbc0001I Search completed - best objective 2691.59663468057, took 259 iterations and 12 nodes (0.07 seconds)
Cbc0032I Strong branching done 170 times (786 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 45 variables fixed on reduced cost
Cuts at root node changed objective from 2609.58 to 2667.87
Probing was tried 37 times and created 25 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 31 times and created 33 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 31 times and created 52 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Clique was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 31 times and created 109 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 31 times and created 139 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2691.59663468
Enumerated nodes:               12
Total iterations:               259
Time (CPU seconds):             0.06
Time (Wallclock seconds):       0.07

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

initial land use distribution [2, 1, 2, 1, 2, 0, 2, 2, 1, 1, 1, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 0, 1, 2, 1]
Optimized Land Use with benefits restriction: [1, 2, 1, 0, 1, 1, 1, 0, 0, 1, 2, 2, 0, 2, 0, 1, 0, 0, 2, 0, 0, 2, 2, 1, 2]
Initial total costs: 6300.415498584362
Optimized total costs: 2691.596634680681
Initial total benefit1/ES1: 106.26429160038307
Optimized total benefit1/ES1: 106.98310195958256
Initial total Benefit2/ES2: 110.86217614200287
Optimized total benefit2/ES2: 112.51057131175595
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/1c750a3bd9ba43039acb3653c69cbf18-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/1c750a3bd9ba43039acb3653c69cbf18-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1917.41 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.57760 (2) obj. 1917.41 iterations 5
Cbc0038I Pass   2: suminf.    0.10264 (2) obj. 2042.81 iterations 2
Cbc0038I Pass   3: suminf.    0.05028 (1) obj. 2061.76 iterations 2
Cbc0038I Solution found of 2569.58
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2504.36
Cbc0038I Pass   4: suminf.    0.57760 (2) obj. 1917.41 iterations 0
Cbc0038I Pass   5: suminf.    0.10264 (2) obj. 2042.81 iterations 4
Cbc0038I Pass   6: suminf.    0.05028 (1) obj. 2061.76 iterations 2
Cbc0038I Pass   7: suminf.    0.12197 (1) obj. 2504.36 iterations 3
Cbc0038I Pass   8: suminf.    0.74306 (2) obj. 2504.36 iterations 12
Cbc0038I Pass   9: suminf.    0.36754 (1) obj. 2377.45 iterations 5
Cbc0038I Pass  10: suminf.    0.38015 (1) obj. 2504.36 iterations 2
Cbc0038I Pass  11: suminf.    1.48555 (4) obj. 2504.36 iterations 9
Cbc0038I Pass  12: suminf.    0.52107 (3) obj. 2504.36 iterations 5
Cbc0038I Pass  13: suminf.    0.27384 (1) obj. 2504.36 iterations 11
Cbc0038I Solution found of 2408.95
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 17 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 2408.95 to 2159.68 (0.01 seconds)
Cbc0038I Round again with cutoff of 2111.23
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 3
Cbc0038I Pass  14: suminf.    0.57760 (2) obj. 1917.41 iterations 0
Cbc0038I Pass  15: suminf.    0.10264 (2) obj. 2042.81 iterations 2
Cbc0038I Pass  16: suminf.    0.05028 (1) obj. 2061.76 iterations 2
Cbc0038I Pass  17: suminf.    0.14279 (1) obj. 2111.23 iterations 1
Cbc0038I Pass  18: suminf.    0.48582 (3) obj. 2111.23 iterations 20
Cbc0038I Pass  19: suminf.    0.39727 (3) obj. 2111.23 iterations 7
Cbc0038I Pass  20: suminf.    0.85322 (3) obj. 2111.23 iterations 6
Cbc0038I Pass  21: suminf.    0.58377 (2) obj. 2111.23 iterations 7
Cbc0038I Pass  22: suminf.    0.55413 (2) obj. 2094.79 iterations 4
Cbc0038I Pass  23: suminf.    0.60950 (2) obj. 2111.23 iterations 3
Cbc0038I Pass  24: suminf.    1.09030 (3) obj. 2111.23 iterations 10
Cbc0038I Pass  25: suminf.    0.54815 (3) obj. 2111.23 iterations 8
Cbc0038I Pass  26: suminf.    1.00182 (3) obj. 2111.23 iterations 6
Cbc0038I Pass  27: suminf.    0.53831 (2) obj. 2111.23 iterations 7
Cbc0038I Pass  28: suminf.    0.48120 (2) obj. 2079.56 iterations 4
Cbc0038I Pass  29: suminf.    0.58788 (2) obj. 2111.23 iterations 3
Cbc0038I Pass  30: suminf.    1.09167 (4) obj. 2111.23 iterations 13
Cbc0038I Pass  31: suminf.    1.02243 (3) obj. 2111.23 iterations 4
Cbc0038I Pass  32: suminf.    0.53024 (3) obj. 2111.23 iterations 9
Cbc0038I Pass  33: suminf.    0.45394 (2) obj. 2111.23 iterations 9
Cbc0038I Pass  34: suminf.    0.30069 (2) obj. 2111.23 iterations 2
Cbc0038I Pass  35: suminf.    0.44240 (1) obj. 2111.23 iterations 4
Cbc0038I Pass  36: suminf.    0.44240 (1) obj. 2111.23 iterations 0
Cbc0038I Pass  37: suminf.    0.31902 (1) obj. 2028.1 iterations 2
Cbc0038I Pass  38: suminf.    0.89831 (3) obj. 2111.23 iterations 18
Cbc0038I Pass  39: suminf.    0.40448 (2) obj. 2111.23 iterations 10
Cbc0038I Pass  40: suminf.    0.84282 (3) obj. 2111.23 iterations 6
Cbc0038I Pass  41: suminf.    0.76786 (4) obj. 2111.23 iterations 10
Cbc0038I Pass  42: suminf.    0.67799 (4) obj. 2111.23 iterations 3
Cbc0038I Pass  43: suminf.    0.98518 (3) obj. 2111.23 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 12 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 8 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 2159.68 to 2004.71 (0.02 seconds)
Cbc0038I Round again with cutoff of 1978.52
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 4
Cbc0038I Pass  43: suminf.    0.57760 (2) obj. 1917.41 iterations 0
Cbc0038I Pass  44: suminf.    0.46358 (2) obj. 1978.52 iterations 2
Cbc0038I Pass  45: suminf.    0.46358 (2) obj. 1978.52 iterations 0
Cbc0038I Pass  46: suminf.    0.68780 (2) obj. 1978.52 iterations 4
Cbc0038I Pass  47: suminf.    0.68780 (2) obj. 1978.52 iterations 0
Cbc0038I Pass  48: suminf.    0.55032 (2) obj. 1978.52 iterations 7
Cbc0038I Pass  49: suminf.    0.49829 (3) obj. 1978.52 iterations 5
Cbc0038I Pass  50: suminf.    0.93822 (3) obj. 1978.52 iterations 4
Cbc0038I Pass  51: suminf.    1.17287 (4) obj. 1978.52 iterations 11
Cbc0038I Pass  52: suminf.    1.17287 (4) obj. 1978.52 iterations 0
Cbc0038I Pass  53: suminf.    1.08621 (3) obj. 1978.52 iterations 4
Cbc0038I Pass  54: suminf.    0.53399 (3) obj. 1978.52 iterations 5
Cbc0038I Pass  55: suminf.    1.32329 (4) obj. 1978.52 iterations 12
Cbc0038I Pass  56: suminf.    1.01021 (3) obj. 1978.52 iterations 6
Cbc0038I Pass  57: suminf.    0.76342 (3) obj. 1978.52 iterations 5
Cbc0038I Pass  58: suminf.    0.95469 (3) obj. 1978.52 iterations 4
Cbc0038I Pass  59: suminf.    1.35010 (4) obj. 1978.52 iterations 10
Cbc0038I Pass  60: suminf.    1.21975 (4) obj. 1978.52 iterations 3
Cbc0038I Pass  61: suminf.    0.34807 (2) obj. 1978.52 iterations 6
Cbc0038I Pass  62: suminf.    0.34807 (2) obj. 1978.52 iterations 1
Cbc0038I Pass  63: suminf.    0.59216 (2) obj. 1978.52 iterations 4
Cbc0038I Pass  64: suminf.    0.64023 (3) obj. 1978.52 iterations 6
Cbc0038I Pass  65: suminf.    0.18634 (2) obj. 1978.52 iterations 5
Cbc0038I Pass  66: suminf.    0.64023 (3) obj. 1978.52 iterations 7
Cbc0038I Pass  67: suminf.    0.60297 (2) obj. 1978.52 iterations 5
Cbc0038I Pass  68: suminf.    0.53136 (2) obj. 1978.52 iterations 6
Cbc0038I Pass  69: suminf.    0.53566 (2) obj. 1978.52 iterations 4
Cbc0038I Pass  70: suminf.    0.46453 (3) obj. 1978.52 iterations 2
Cbc0038I Pass  71: suminf.    0.09164 (3) obj. 1978.52 iterations 8
Cbc0038I Pass  72: suminf.    0.12602 (3) obj. 1978.52 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 17 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 2004.71 to 2000.89 (0.03 seconds)
Cbc0038I Round again with cutoff of 1960.19
Cbc0038I Reduced cost fixing fixed 33 variables on major pass 5
Cbc0038I Pass  72: suminf.    0.57760 (2) obj. 1917.41 iterations 0
Cbc0038I Pass  73: suminf.    0.56650 (2) obj. 1960.19 iterations 2
Cbc0038I Pass  74: suminf.    0.56650 (2) obj. 1960.19 iterations 0
Cbc0038I Pass  75: suminf.    0.65474 (2) obj. 1960.19 iterations 4
Cbc0038I Pass  76: suminf.    0.72748 (3) obj. 1960.19 iterations 6
Cbc0038I Pass  77: suminf.    0.28461 (2) obj. 1927.25 iterations 4
Cbc0038I Pass  78: suminf.    0.39555 (2) obj. 1960.19 iterations 2
Cbc0038I Pass  79: suminf.    0.28461 (2) obj. 1927.25 iterations 2
Cbc0038I Pass  80: suminf.    0.78680 (2) obj. 1943.76 iterations 3
Cbc0038I Pass  81: suminf.    0.76040 (2) obj. 1952.55 iterations 6
Cbc0038I Pass  82: suminf.    0.96580 (3) obj. 1960.19 iterations 8
Cbc0038I Pass  83: suminf.    0.63583 (2) obj. 1960.19 iterations 7
Cbc0038I Pass  84: suminf.    0.63583 (2) obj. 1960.19 iterations 4
Cbc0038I Pass  85: suminf.    0.84341 (2) obj. 1960.19 iterations 6
Cbc0038I Pass  86: suminf.    0.76409 (2) obj. 1936.64 iterations 2
Cbc0038I Pass  87: suminf.    0.84341 (2) obj. 1960.19 iterations 2
Cbc0038I Pass  88: suminf.    0.82098 (4) obj. 1960.19 iterations 11
Cbc0038I Pass  89: suminf.    0.47403 (2) obj. 1960.19 iterations 5
Cbc0038I Pass  90: suminf.    0.53076 (2) obj. 1960.19 iterations 4
Cbc0038I Pass  91: suminf.    0.57347 (3) obj. 1960.19 iterations 5
Cbc0038I Pass  92: suminf.    0.71025 (3) obj. 1960.19 iterations 5
Cbc0038I Pass  93: suminf.    0.71025 (3) obj. 1960.19 iterations 2
Cbc0038I Pass  94: suminf.    0.52491 (2) obj. 1960.19 iterations 9
Cbc0038I Pass  95: suminf.    0.52491 (2) obj. 1960.19 iterations 4
Cbc0038I Pass  96: suminf.    0.94334 (2) obj. 1960.19 iterations 6
Cbc0038I Pass  97: suminf.    0.88801 (2) obj. 1960.19 iterations 4
Cbc0038I Pass  98: suminf.    0.94334 (2) obj. 1960.19 iterations 4
Cbc0038I Pass  99: suminf.    0.71025 (3) obj. 1960.19 iterations 9
Cbc0038I Pass 100: suminf.    0.71025 (3) obj. 1960.19 iterations 0
Cbc0038I Pass 101: suminf.    0.52491 (2) obj. 1960.19 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 18 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 2000.89 - took 0.03 seconds
Cbc0012I Integer solution of 2000.8937 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0031I 7 added rows had average density of 29.285714
Cbc0013I At root node, 7 cuts changed objective from 1917.4095 to 1942.0932 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 32 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 38 row cuts average 35.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 85 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2000.8937 best solution, best possible 1942.0932 (0.05 seconds)
Cbc0001I Search completed - best objective 2000.893733226705, took 653 iterations and 16 nodes (0.14 seconds)
Cbc0032I Strong branching done 252 times (994 iterations), fathomed 5 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 53 variables fixed on reduced cost
Cuts at root node changed objective from 1917.41 to 1942.09
Probing was tried 13 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 99 times and created 191 cuts of which 0 were active after adding rounds of cuts (0.039 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 99 times and created 389 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 99 times and created 351 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2000.89373323
Enumerated nodes:               16
Total iterations:               653
Time (CPU seconds):             0.13
Time (Wallclock seconds):       0.14

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

initial land use distribution [0, 0, 1, 1, 1, 2, 1, 1, 2, 1, 0, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0]
Optimized Land Use with benefits restriction: [0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 1, 2, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1]
Initial total costs: 5248.550663246203
Optimized total costs: 2000.893733226693
Initial total benefit1/ES1: 102.44996993377336
Optimized total benefit1/ES1: 102.68724719625746
Initial total Benefit2/ES2: 42.31751047047386
Optimized total benefit2/ES2: 42.65784960696852
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/82ee4f677b7f432dab6b4861c8354626-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/82ee4f677b7f432dab6b4861c8354626-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1742.21 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.7808
Cbc0038I Pass   1: suminf.    0.43413 (1) obj. 1923.96 iterations 10
Cbc0038I Solution found of 2152.13
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2111.14
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.43413 (1) obj. 1923.96 iterations 0
Cbc0038I Pass   3: suminf.    0.10166 (1) obj. 2111.14 iterations 7
Cbc0038I Pass   4: suminf.    0.99126 (3) obj. 2111.14 iterations 8
Cbc0038I Solution found of 2054.69
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 19 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 7 columns
Cbc0038I Mini branch and bound improved solution from 2054.69 to 1845.17 (0.01 seconds)
Cbc0038I Round again with cutoff of 1824.58
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 3
Cbc0038I Pass   5: suminf.    0.54166 (3) obj. 1824.58 iterations 3
Cbc0038I Pass   6: suminf.    1.08079 (3) obj. 1824.58 iterations 6
Cbc0038I Pass   7: suminf.    0.67419 (3) obj. 1824.58 iterations 6
Cbc0038I Pass   8: suminf.    0.47991 (1) obj. 1824.58 iterations 4
Cbc0038I Pass   9: suminf.    0.35980 (1) obj. 1790.26 iterations 3
Cbc0038I Pass  10: suminf.    1.01405 (3) obj. 1824.58 iterations 16
Cbc0038I Pass  11: suminf.    0.90704 (3) obj. 1824.58 iterations 3
Cbc0038I Pass  12: suminf.    0.08852 (2) obj. 1824.58 iterations 7
Cbc0038I Pass  13: suminf.    0.08852 (2) obj. 1824.58 iterations 1
Cbc0038I Pass  14: suminf.    0.77608 (3) obj. 1824.58 iterations 6
Cbc0038I Pass  15: suminf.    1.09624 (3) obj. 1824.58 iterations 2
Cbc0038I Pass  16: suminf.    1.43696 (4) obj. 1824.58 iterations 9
Cbc0038I Pass  17: suminf.    0.55262 (3) obj. 1824.58 iterations 3
Cbc0038I Pass  18: suminf.    0.63074 (3) obj. 1824.58 iterations 4
Cbc0038I Pass  19: suminf.    0.35670 (3) obj. 1824.58 iterations 8
Cbc0038I Pass  20: suminf.    0.04922 (2) obj. 1824.58 iterations 4
Cbc0038I Pass  21: suminf.    0.82072 (3) obj. 1824.58 iterations 7
Cbc0038I Pass  22: suminf.    1.17566 (3) obj. 1824.58 iterations 2
Cbc0038I Pass  23: suminf.    1.07437 (3) obj. 1774.69 iterations 3
Cbc0038I Pass  24: suminf.    1.57743 (5) obj. 1824.58 iterations 8
Cbc0038I Pass  25: suminf.    0.94355 (3) obj. 1824.58 iterations 4
Cbc0038I Pass  26: suminf.    0.81676 (3) obj. 1824.58 iterations 1
Cbc0038I Pass  27: suminf.    1.07437 (3) obj. 1774.69 iterations 5
Cbc0038I Pass  28: suminf.    0.82072 (3) obj. 1824.58 iterations 4
Cbc0038I Pass  29: suminf.    1.17566 (3) obj. 1824.58 iterations 2
Cbc0038I Pass  30: suminf.    1.17566 (3) obj. 1824.58 iterations 0
Cbc0038I Pass  31: suminf.    0.75372 (3) obj. 1824.58 iterations 12
Cbc0038I Pass  32: suminf.    0.45841 (2) obj. 1824.58 iterations 4
Cbc0038I Pass  33: suminf.    0.35093 (2) obj. 1789.93 iterations 3
Cbc0038I Pass  34: suminf.    0.47620 (2) obj. 1824.58 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 14 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 13 columns
Cbc0038I Mini branch and bound improved solution from 1845.17 to 1804.34 (0.01 seconds)
Cbc0038I Round again with cutoff of 1785.7
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 4
Cbc0038I Pass  34: suminf.    0.58767 (3) obj. 1785.7 iterations 0
Cbc0038I Pass  35: suminf.    0.87332 (3) obj. 1785.7 iterations 5
Cbc0038I Pass  36: suminf.    1.24939 (3) obj. 1760.02 iterations 12
Cbc0038I Pass  37: suminf.    0.75034 (2) obj. 1785.7 iterations 5
Cbc0038I Pass  38: suminf.    0.67233 (2) obj. 1760.55 iterations 3
Cbc0038I Pass  39: suminf.    0.70131 (2) obj. 1785.7 iterations 4
Cbc0038I Pass  40: suminf.    0.51989 (3) obj. 1785.7 iterations 5
Cbc0038I Pass  41: suminf.    0.70457 (3) obj. 1785.7 iterations 2
Cbc0038I Pass  42: suminf.    0.39094 (2) obj. 1785.7 iterations 7
Cbc0038I Pass  43: suminf.    0.39094 (2) obj. 1785.7 iterations 1
Cbc0038I Pass  44: suminf.    0.58767 (3) obj. 1785.7 iterations 7
Cbc0038I Pass  45: suminf.    0.87332 (3) obj. 1785.7 iterations 5
Cbc0038I Pass  46: suminf.    1.08198 (3) obj. 1785.7 iterations 1
Cbc0038I Pass  47: suminf.    0.51989 (3) obj. 1785.7 iterations 3
Cbc0038I Pass  48: suminf.    0.70457 (3) obj. 1785.7 iterations 2
Cbc0038I Pass  49: suminf.    0.68388 (2) obj. 1785.7 iterations 4
Cbc0038I Pass  50: suminf.    0.43351 (3) obj. 1785.7 iterations 6
Cbc0038I Pass  51: suminf.    0.47068 (3) obj. 1785.7 iterations 2
Cbc0038I Pass  52: suminf.    0.84077 (2) obj. 1785.7 iterations 2
Cbc0038I Pass  53: suminf.    0.42656 (3) obj. 1785.7 iterations 7
Cbc0038I Pass  54: suminf.    0.48665 (3) obj. 1785.7 iterations 2
Cbc0038I Pass  55: suminf.    0.84077 (2) obj. 1785.7 iterations 2
Cbc0038I Pass  56: suminf.    0.70123 (2) obj. 1778.19 iterations 5
Cbc0038I Pass  57: suminf.    0.39094 (2) obj. 1785.7 iterations 7
Cbc0038I Pass  58: suminf.    0.39094 (2) obj. 1785.7 iterations 1
Cbc0038I Pass  59: suminf.    0.58767 (3) obj. 1785.7 iterations 7
Cbc0038I Pass  60: suminf.    0.87332 (3) obj. 1785.7 iterations 5
Cbc0038I Pass  61: suminf.    0.75674 (2) obj. 1763.86 iterations 5
Cbc0038I Pass  62: suminf.    0.75674 (2) obj. 1763.86 iterations 3
Cbc0038I Pass  63: suminf.    0.65437 (3) obj. 1763.53 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 20 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 1804.34 - took 0.02 seconds
Cbc0012I Integer solution of 1804.339 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 10.5
Cbc0013I At root node, 5 cuts changed objective from 1742.2134 to 1805.1776 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 8 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 1804.33903362589, took 13 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 38 variables fixed on reduced cost
Cuts at root node changed objective from 1742.21 to 1805.18
Probing was tried 2 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1804.33903363
Enumerated nodes:               0
Total iterations:               13
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

initial land use distribution [0, 2, 2, 2, 0, 1, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1, 2, 1, 1, 0, 1, 1, 0, 1, 0]
Optimized Land Use with benefits restriction: [0, 1, 2, 0, 1, 1, 2, 0, 2, 1, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 2]
Initial total costs: 3607.965105875557
Optimized total costs: 1804.3390336259865
Initial total benefit1/ES1: 66.31652739472644
Optimized total benefit1/ES1: 67.74598011422664
Initial total Benefit2/ES2: 69.6707860791636
Optimized total benefit2/ES2: 69.78660354907909
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/7a9869b6b3bf48149d19c7a8ee3fd9b3-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/7a9869b6b3bf48149d19c7a8ee3fd9b3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 821.795 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.41937
Cbc0038I Solution found of 908.244
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 899.599
Cbc0038I Reduced cost fixing fixed 42 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03788 (1) obj. 899.599 iterations 2
Cbc0038I Pass   2: suminf.    0.35783 (1) obj. 826.584 iterations 1
Cbc0038I Pass   3: suminf.    0.45131 (2) obj. 895.516 iterations 7
Cbc0038I Pass   4: suminf.    0.45131 (2) obj. 895.516 iterations 0
Cbc0038I Pass   5: suminf.    0.12846 (1) obj. 899.599 iterations 4
Cbc0038I Solution found of 870.283
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 21 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 860.585
Cbc0038I Reduced cost fixing fixed 44 variables on major pass 3
Cbc0038I Pass   6: suminf.    0.20884 (1) obj. 860.585 iterations 0
Cbc0038I Pass   7: suminf.    0.35783 (1) obj. 826.584 iterations 1
Cbc0038I Pass   8: suminf.    0.05097 (1) obj. 860.585 iterations 3
Cbc0038I Pass   9: suminf.    0.05097 (1) obj. 860.585 iterations 0
Cbc0038I Pass  10: suminf.    0.64080 (2) obj. 860.585 iterations 5
Cbc0038I Pass  11: suminf.    0.00128 (1) obj. 860.585 iterations 3
Cbc0038I Pass  12: suminf.    0.24282 (1) obj. 860.585 iterations 2
Cbc0038I Pass  13: suminf.    0.13692 (1) obj. 847.935 iterations 2
Cbc0038I Pass  14: suminf.    0.19235 (1) obj. 860.585 iterations 1
Cbc0038I Pass  15: suminf.    0.13692 (1) obj. 847.935 iterations 1
Cbc0038I Pass  16: suminf.    0.19235 (1) obj. 860.585 iterations 1
Cbc0038I Pass  17: suminf.    0.13692 (1) obj. 847.935 iterations 1
Cbc0038I Pass  18: suminf.    0.13692 (1) obj. 847.935 iterations 0
Cbc0038I Pass  19: suminf.    0.13692 (1) obj. 847.935 iterations 0
Cbc0038I Pass  20: suminf.    0.71190 (2) obj. 843.146 iterations 2
Cbc0038I Pass  21: suminf.    0.62107 (2) obj. 860.585 iterations 3
Cbc0038I Pass  22: suminf.    0.55157 (2) obj. 860.585 iterations 1
Cbc0038I Pass  23: suminf.    0.35783 (1) obj. 826.584 iterations 3
Cbc0038I Pass  24: suminf.    0.20884 (1) obj. 860.585 iterations 1
Cbc0038I Pass  25: suminf.    0.20884 (1) obj. 860.585 iterations 1
Cbc0038I Pass  26: suminf.    0.20884 (1) obj. 860.585 iterations 1
Cbc0038I Pass  27: suminf.    0.20884 (1) obj. 860.585 iterations 0
Cbc0038I Pass  28: suminf.    0.20884 (1) obj. 860.585 iterations 0
Cbc0038I Pass  29: suminf.    0.20884 (1) obj. 860.585 iterations 0
Cbc0038I Pass  30: suminf.    0.00128 (1) obj. 860.585 iterations 1
Cbc0038I Pass  31: suminf.    0.00128 (1) obj. 860.585 iterations 0
Cbc0038I Pass  32: suminf.    0.00128 (1) obj. 860.585 iterations 0
Cbc0038I Pass  33: suminf.    0.00128 (1) obj. 860.585 iterations 0
Cbc0038I Pass  34: suminf.    0.00128 (1) obj. 860.585 iterations 0
Cbc0038I Pass  35: suminf.    0.00128 (1) obj. 860.585 iterations 0
Cbc0038I Rounding solution of 860.817 is better than previous of 870.283

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 20 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 848.948
Cbc0038I Reduced cost fixing fixed 45 variables on major pass 4
Cbc0038I Pass  35: suminf.    0.25983 (1) obj. 848.948 iterations 0
Cbc0038I Pass  36: suminf.    0.35783 (1) obj. 826.584 iterations 1
Cbc0038I Pass  37: suminf.    0.25983 (1) obj. 848.948 iterations 1
Cbc0038I Pass  38: suminf.    0.35783 (1) obj. 826.584 iterations 1
Cbc0038I Pass  39: suminf.    0.35783 (1) obj. 826.584 iterations 0
Cbc0038I Pass  40: suminf.    0.35783 (1) obj. 826.584 iterations 0
Cbc0038I Pass  41: suminf.    0.25983 (1) obj. 848.948 iterations 1
Cbc0038I Pass  42: suminf.    0.06565 (1) obj. 848.948 iterations 3
Cbc0038I Pass  43: suminf.    0.06565 (1) obj. 848.948 iterations 1
Cbc0038I Pass  44: suminf.    0.06565 (1) obj. 848.948 iterations 1
Cbc0038I Pass  45: suminf.    0.06565 (1) obj. 848.948 iterations 1
Cbc0038I Pass  46: suminf.    0.06565 (1) obj. 848.948 iterations 0
Cbc0038I Pass  47: suminf.    0.06565 (1) obj. 848.948 iterations 0
Cbc0038I Pass  48: suminf.    0.15082 (2) obj. 848.948 iterations 3
Cbc0038I Pass  49: suminf.    0.13692 (1) obj. 847.935 iterations 1
Cbc0038I Pass  50: suminf.    0.14136 (1) obj. 848.948 iterations 1
Cbc0038I Pass  51: suminf.    0.13692 (1) obj. 847.935 iterations 2
Cbc0038I Pass  52: suminf.    0.06565 (1) obj. 848.948 iterations 5
Cbc0038I Pass  53: suminf.    0.35783 (1) obj. 826.584 iterations 2
Cbc0038I Pass  54: suminf.    0.25983 (1) obj. 848.948 iterations 1
Cbc0038I Pass  55: suminf.    0.61453 (2) obj. 848.948 iterations 2
Cbc0038I Pass  56: suminf.    0.25983 (1) obj. 848.948 iterations 2
Cbc0038I Pass  57: suminf.    0.25983 (1) obj. 848.948 iterations 0
Cbc0038I Pass  58: suminf.    0.25983 (1) obj. 848.948 iterations 0
Cbc0038I Pass  59: suminf.    0.74649 (2) obj. 848.948 iterations 3
Cbc0038I Pass  60: suminf.    0.13692 (1) obj. 847.935 iterations 3
Cbc0038I Pass  61: suminf.    0.14136 (1) obj. 848.948 iterations 1
Cbc0038I Pass  62: suminf.    0.13692 (1) obj. 847.935 iterations 2
Cbc0038I Pass  63: suminf.    0.79150 (3) obj. 848.948 iterations 3
Cbc0038I Pass  64: suminf.    0.13692 (1) obj. 847.935 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 21 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 860.817 - took 0.01 seconds
Cbc0012I Integer solution of 860.81697 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 821.79527 to 821.79527 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 860.8169709879601, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 44 variables fixed on reduced cost
Cuts at root node changed objective from 821.795 to 821.795
Probing was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                860.81697099
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

initial land use distribution [0, 0, 0, 0, 2, 2, 0, 2, 2, 2, 1, 0, 0, 0, 2, 2, 2, 1, 2, 0, 0, 2, 2, 0, 0]
Optimized Land Use with benefits restriction: [0, 2, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 2, 2, 0]
Initial total costs: 3750.1232255828704
Optimized total costs: 860.8169709879244
Initial total benefit1/ES1: 31.53408346502431
Optimized total benefit1/ES1: 35.02918388053273
Initial total Benefit2/ES2: 87.61835368248457
Optimized total benefit2/ES2: 88.04336038147879
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/571632d9c1b64c168ac7fb83eaa0d1a1-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/571632d9c1b64c168ac7fb83eaa0d1a1-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2414.81 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.03422
Cbc0038I Pass   1: suminf.    0.42286 (1) obj. 2595.31 iterations 7
Cbc0038I Solution found of 2914.71
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 24 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2864.72
Cbc0038I Pass   2: suminf.    0.42286 (1) obj. 2595.31 iterations 0
Cbc0038I Pass   3: suminf.    0.09033 (1) obj. 2864.72 iterations 4
Cbc0038I Pass   4: suminf.    0.50088 (3) obj. 2864.72 iterations 14
Cbc0038I Pass   5: suminf.    0.50088 (3) obj. 2864.72 iterations 2
Cbc0038I Pass   6: suminf.    0.24083 (1) obj. 2774.15 iterations 7
Cbc0038I Pass   7: suminf.    0.40447 (1) obj. 2864.72 iterations 4
Cbc0038I Pass   8: suminf.    1.30694 (3) obj. 2864.72 iterations 13
Cbc0038I Pass   9: suminf.    0.90020 (4) obj. 2864.72 iterations 7
Cbc0038I Pass  10: suminf.    0.27807 (1) obj. 2624.49 iterations 8
Cbc0038I Solution found of 2704.22
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 18 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 2704.22 to 2528.28 (0.01 seconds)
Cbc0038I Round again with cutoff of 2505.59
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 3
Cbc0038I Pass  11: suminf.    0.46049 (1) obj. 2496.16 iterations 6
Cbc0038I Pass  12: suminf.    0.32893 (2) obj. 2505.59 iterations 9
Cbc0038I Pass  13: suminf.    0.79482 (3) obj. 2422.96 iterations 9
Cbc0038I Pass  14: suminf.    0.72118 (4) obj. 2505.59 iterations 15
Cbc0038I Pass  15: suminf.    0.34318 (1) obj. 2503.24 iterations 9
Cbc0038I Pass  16: suminf.    0.37332 (2) obj. 2505.59 iterations 5
Cbc0038I Pass  17: suminf.    1.00293 (4) obj. 2505.59 iterations 7
Cbc0038I Pass  18: suminf.    0.37332 (2) obj. 2505.59 iterations 7
Cbc0038I Pass  19: suminf.    0.80230 (3) obj. 2505.59 iterations 4
Cbc0038I Pass  20: suminf.    0.77394 (3) obj. 2505.59 iterations 8
Cbc0038I Pass  21: suminf.    0.92480 (3) obj. 2505.59 iterations 9
Cbc0038I Pass  22: suminf.    0.77477 (3) obj. 2505.59 iterations 7
Cbc0038I Pass  23: suminf.    0.77477 (3) obj. 2505.59 iterations 1
Cbc0038I Pass  24: suminf.    0.77477 (3) obj. 2505.59 iterations 1
Cbc0038I Pass  25: suminf.    1.06058 (5) obj. 2505.59 iterations 7
Cbc0038I Pass  26: suminf.    1.06058 (5) obj. 2505.59 iterations 1
Cbc0038I Pass  27: suminf.    0.97018 (4) obj. 2505.59 iterations 4
Cbc0038I Pass  28: suminf.    0.74805 (4) obj. 2505.59 iterations 6
Cbc0038I Pass  29: suminf.    0.65599 (3) obj. 2505.59 iterations 6
Cbc0038I Pass  30: suminf.    0.98699 (3) obj. 2505.59 iterations 7
Cbc0038I Pass  31: suminf.    0.66318 (3) obj. 2505.59 iterations 6
Cbc0038I Pass  32: suminf.    1.43264 (4) obj. 2505.59 iterations 11
Cbc0038I Pass  33: suminf.    0.24151 (3) obj. 2505.59 iterations 5
Cbc0038I Pass  34: suminf.    0.07782 (1) obj. 2505.59 iterations 6
Cbc0038I Pass  35: suminf.    0.11962 (1) obj. 2488.59 iterations 1
Cbc0038I Pass  36: suminf.    1.09433 (4) obj. 2505.59 iterations 12
Cbc0038I Pass  37: suminf.    0.92766 (5) obj. 2505.59 iterations 2
Cbc0038I Pass  38: suminf.    0.70490 (3) obj. 2505.59 iterations 9
Cbc0038I Pass  39: suminf.    0.70490 (3) obj. 2505.59 iterations 1
Cbc0038I Pass  40: suminf.    1.09978 (3) obj. 2505.59 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 17 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2528.28 - took 0.01 seconds
Cbc0012I Integer solution of 2528.2809 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 1 rows 2 columns
Cbc0031I 7 added rows had average density of 17.142857
Cbc0013I At root node, 7 cuts changed objective from 2414.8082 to 2513.5753 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 19 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 57 row cuts average 29.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 104 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2528.2809 best solution, best possible 2513.6058 (0.05 seconds)
Cbc0001I Search completed - best objective 2528.28089119492, took 168 iterations and 4 nodes (0.06 seconds)
Cbc0032I Strong branching done 40 times (115 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 35 variables fixed on reduced cost
Cuts at root node changed objective from 2414.81 to 2513.61
Probing was tried 36 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 34 times and created 33 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 34 times and created 50 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Clique was tried 23 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 34 times and created 88 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 23 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 34 times and created 218 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2528.28089119
Enumerated nodes:               4
Total iterations:               168
Time (CPU seconds):             0.06
Time (Wallclock seconds):       0.06

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

initial land use distribution [1, 1, 1, 2, 2, 0, 0, 0, 2, 0, 1, 2, 2, 2, 2, 1, 2, 0, 2, 1, 2, 0, 1, 1, 2]
Optimized Land Use with benefits restriction: [1, 0, 0, 2, 0, 0, 1, 2, 2, 2, 1, 0, 2, 1, 0, 2, 2, 0, 2, 1, 1, 1, 0, 0, 0]
Initial total costs: 4749.625256363301
Optimized total costs: 2528.280891194911
Initial total benefit1/ES1: 91.68230310167206
Optimized total benefit1/ES1: 93.7499981797344
Initial total Benefit2/ES2: 84.57810585960053
Optimized total benefit2/ES2: 85.51548179527458
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/d67a4888453a453caca1901ef031e7db-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/d67a4888453a453caca1901ef031e7db-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1633.82 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.36989
Cbc0038I Pass   1: suminf.    0.20484 (1) obj. 1663.61 iterations 2
Cbc0038I Solution found of 1903.13
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 1876.2
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.20484 (1) obj. 1663.61 iterations 0
Cbc0038I Pass   3: suminf.    0.08941 (1) obj. 1876.2 iterations 2
Cbc0038I Pass   4: suminf.    0.22126 (2) obj. 1876.2 iterations 9
Cbc0038I Pass   5: suminf.    0.22126 (2) obj. 1876.2 iterations 2
Cbc0038I Pass   6: suminf.    0.04638 (1) obj. 1876.2 iterations 4
Cbc0038I Pass   7: suminf.    0.25735 (2) obj. 1667 iterations 4
Cbc0038I Pass   8: suminf.    0.04638 (1) obj. 1876.2 iterations 4
Cbc0038I Pass   9: suminf.    0.82712 (2) obj. 1876.2 iterations 7
Cbc0038I Pass  10: suminf.    0.82712 (2) obj. 1876.2 iterations 2
Cbc0038I Pass  11: suminf.    0.03103 (1) obj. 1876.2 iterations 4
Cbc0038I Pass  12: suminf.    0.41114 (2) obj. 1768.12 iterations 4
Cbc0038I Pass  13: suminf.    0.94499 (3) obj. 1876.2 iterations 13
Cbc0038I Pass  14: suminf.    0.30376 (1) obj. 1876.2 iterations 4
Cbc0038I Pass  15: suminf.    0.50520 (2) obj. 1876.2 iterations 3
Cbc0038I Pass  16: suminf.    1.69996 (4) obj. 1876.2 iterations 10
Cbc0038I Pass  17: suminf.    0.41999 (2) obj. 1876.2 iterations 6
Cbc0038I Pass  18: suminf.    0.13009 (2) obj. 1740.54 iterations 6
Cbc0038I Pass  19: suminf.    0.15336 (1) obj. 1876.2 iterations 10
Cbc0038I Pass  20: suminf.    0.02980 (1) obj. 1838.98 iterations 2
Cbc0038I Pass  21: suminf.    0.55762 (2) obj. 1876.2 iterations 4
Cbc0038I Pass  22: suminf.    0.16661 (1) obj. 1876.2 iterations 4
Cbc0038I Pass  23: suminf.    0.25735 (2) obj. 1667 iterations 5
Cbc0038I Pass  24: suminf.    0.04638 (1) obj. 1876.2 iterations 4
Cbc0038I Pass  25: suminf.    0.04638 (1) obj. 1876.2 iterations 0
Cbc0038I Pass  26: suminf.    0.46320 (1) obj. 1876.2 iterations 4
Cbc0038I Pass  27: suminf.    0.03349 (2) obj. 1784.28 iterations 5
Cbc0038I Pass  28: suminf.    0.34042 (1) obj. 1876.2 iterations 5
Cbc0038I Pass  29: suminf.    0.69416 (4) obj. 1876.2 iterations 7
Cbc0038I Pass  30: suminf.    0.38437 (3) obj. 1876.2 iterations 5
Cbc0038I Pass  31: suminf.    0.40107 (2) obj. 1876.2 iterations 6
Cbc0038I Rounding solution of 1885.55 is better than previous of 1903.13

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 9 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 7 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 1885.55 to 1701.79 (0.01 seconds)
Cbc0038I Round again with cutoff of 1688.19
Cbc0038I Reduced cost fixing fixed 37 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.20484 (1) obj. 1663.61 iterations 0
Cbc0038I Pass  32: suminf.    0.28645 (1) obj. 1688.19 iterations 2
Cbc0038I Pass  33: suminf.    0.28645 (1) obj. 1688.19 iterations 1
Cbc0038I Pass  34: suminf.    0.26101 (2) obj. 1688.19 iterations 7
Cbc0038I Pass  35: suminf.    0.15398 (1) obj. 1688.19 iterations 4
Cbc0038I Pass  36: suminf.    0.46097 (2) obj. 1688.19 iterations 5
Cbc0038I Pass  37: suminf.    0.46097 (2) obj. 1688.19 iterations 1
Cbc0038I Pass  38: suminf.    0.53605 (2) obj. 1676.05 iterations 2
Cbc0038I Pass  39: suminf.    0.89383 (3) obj. 1688.19 iterations 4
Cbc0038I Pass  40: suminf.    0.46097 (2) obj. 1688.19 iterations 1
Cbc0038I Pass  41: suminf.    0.53605 (2) obj. 1676.05 iterations 1
Cbc0038I Pass  42: suminf.    0.71983 (3) obj. 1688.19 iterations 5
Cbc0038I Pass  43: suminf.    0.09170 (2) obj. 1688.19 iterations 3
Cbc0038I Pass  44: suminf.    0.71983 (3) obj. 1688.19 iterations 3
Cbc0038I Pass  45: suminf.    0.71983 (3) obj. 1688.19 iterations 0
Cbc0038I Pass  46: suminf.    0.91335 (3) obj. 1688.19 iterations 2
Cbc0038I Pass  47: suminf.    0.91335 (3) obj. 1688.19 iterations 0
Cbc0038I Pass  48: suminf.    0.71721 (2) obj. 1688.19 iterations 3
Cbc0038I Pass  49: suminf.    0.52670 (2) obj. 1688.19 iterations 2
Cbc0038I Pass  50: suminf.    0.53204 (2) obj. 1688.19 iterations 4
Cbc0038I Pass  51: suminf.    0.54318 (2) obj. 1688.19 iterations 2
Cbc0038I Pass  52: suminf.    0.53204 (2) obj. 1688.19 iterations 2
Cbc0038I Pass  53: suminf.    0.53204 (2) obj. 1688.19 iterations 2
Cbc0038I Pass  54: suminf.    0.53204 (2) obj. 1688.19 iterations 2
Cbc0038I Pass  55: suminf.    0.35297 (2) obj. 1678.55 iterations 7
Cbc0038I Pass  56: suminf.    0.26051 (2) obj. 1688.19 iterations 4
Cbc0038I Pass  57: suminf.    0.40966 (2) obj. 1688.19 iterations 2
Cbc0038I Pass  58: suminf.    0.40966 (2) obj. 1688.19 iterations 3
Cbc0038I Pass  59: suminf.    0.09170 (2) obj. 1688.19 iterations 7
Cbc0038I Pass  60: suminf.    0.09170 (2) obj. 1688.19 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 1701.79 - took 0.02 seconds
Cbc0012I Integer solution of 1701.7867 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 9.6666667
Cbc0013I At root node, 3 cuts changed objective from 1633.8212 to 1683.587 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 47.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 12 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective 1701.78667904575, took 11 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 40 variables fixed on reduced cost
Cuts at root node changed objective from 1633.82 to 1683.59
Probing was tried 2 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 1 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1701.78667905
Enumerated nodes:               0
Total iterations:               11
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

initial land use distribution [1, 0, 1, 1, 2, 2, 1, 1, 1, 2, 0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 2, 2, 2]
Optimized Land Use with benefits restriction: [2, 1, 0, 0, 2, 0, 0, 1, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 0, 0, 1, 0, 1, 0]
Initial total costs: 4531.99478816682
Optimized total costs: 1701.7866790456624
Initial total benefit1/ES1: 87.36970526605151
Optimized total benefit1/ES1: 88.07562350048283
Initial total Benefit2/ES2: 88.13149316076357
Optimized total benefit2/ES2: 90.43484450304143
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/205e74efa68845f69f8b3e69a2bc6709-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/205e74efa68845f69f8b3e69a2bc6709-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3851.82 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.36278
Cbc0038I Pass   1: suminf.    0.49805 (1) obj. 4174.75 iterations 13
Cbc0038I Solution found of 4451.58
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 4391.6
Cbc0038I Pass   2: suminf.    0.49805 (1) obj. 4174.75 iterations 0
Cbc0038I Pass   3: suminf.    0.10875 (1) obj. 4391.6 iterations 5
Cbc0038I Pass   4: suminf.    0.71452 (4) obj. 4391.6 iterations 15
Cbc0038I Pass   5: suminf.    0.49704 (2) obj. 4391.6 iterations 5
Cbc0038I Pass   6: suminf.    0.57745 (2) obj. 4208.61 iterations 7
Cbc0038I Pass   7: suminf.    0.21349 (3) obj. 4391.6 iterations 7
Cbc0038I Pass   8: suminf.    0.70072 (3) obj. 4391.6 iterations 13
Cbc0038I Pass   9: suminf.    0.31364 (1) obj. 4387.73 iterations 8
Cbc0038I Pass  10: suminf.    0.30535 (1) obj. 4391.6 iterations 4
Cbc0038I Pass  11: suminf.    0.98925 (4) obj. 4391.6 iterations 13
Cbc0038I Pass  12: suminf.    0.49021 (1) obj. 4382.3 iterations 13
Cbc0038I Pass  13: suminf.    0.29408 (1) obj. 4391.6 iterations 13
Cbc0038I Pass  14: suminf.    0.41706 (1) obj. 4334.28 iterations 3
Cbc0038I Pass  15: suminf.    0.79699 (4) obj. 4391.6 iterations 15
Cbc0038I Pass  16: suminf.    0.44422 (1) obj. 4391.6 iterations 6
Cbc0038I Pass  17: suminf.    0.12839 (2) obj. 4273.87 iterations 9
Cbc0038I Pass  18: suminf.    0.39739 (2) obj. 4391.6 iterations 9
Cbc0038I Pass  19: suminf.    1.81011 (4) obj. 4391.6 iterations 12
Cbc0038I Pass  20: suminf.    1.05719 (4) obj. 4391.6 iterations 5
Cbc0038I Solution found of 4346.17
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 12 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 7 rows 22 columns
Cbc0038I Mini branch and bound improved solution from 4346.17 to 3950.53 (0.01 seconds)
Cbc0038I Round again with cutoff of 3930.79
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 3
Cbc0038I Pass  21: suminf.    0.72687 (3) obj. 3930.79 iterations 7
Cbc0038I Pass  22: suminf.    1.02473 (3) obj. 3930.79 iterations 7
Cbc0038I Pass  23: suminf.    0.97898 (3) obj. 3930.79 iterations 5
Cbc0038I Pass  24: suminf.    0.78274 (3) obj. 3930.79 iterations 7
Cbc0038I Pass  25: suminf.    0.27106 (2) obj. 3919.83 iterations 9
Cbc0038I Pass  26: suminf.    0.27106 (2) obj. 3919.83 iterations 6
Cbc0038I Pass  27: suminf.    0.44041 (3) obj. 3930.79 iterations 11
Cbc0038I Pass  28: suminf.    0.55484 (4) obj. 3930.79 iterations 11
Cbc0038I Pass  29: suminf.    1.25827 (5) obj. 3930.79 iterations 8
Cbc0038I Pass  30: suminf.    1.25827 (5) obj. 3930.79 iterations 2
Cbc0038I Pass  31: suminf.    0.57968 (2) obj. 3872.5 iterations 12
Cbc0038I Pass  32: suminf.    0.12977 (3) obj. 3930.79 iterations 8
Cbc0038I Pass  33: suminf.    1.32645 (4) obj. 3930.79 iterations 10
Cbc0038I Pass  34: suminf.    1.32645 (4) obj. 3930.79 iterations 0
Cbc0038I Pass  35: suminf.    0.12977 (3) obj. 3930.79 iterations 8
Cbc0038I Pass  36: suminf.    0.35761 (4) obj. 3930.79 iterations 4
Cbc0038I Pass  37: suminf.    0.86836 (5) obj. 3930.79 iterations 13
Cbc0038I Pass  38: suminf.    0.38043 (2) obj. 3930.79 iterations 8
Cbc0038I Pass  39: suminf.    0.97898 (3) obj. 3930.79 iterations 9
Cbc0038I Pass  40: suminf.    0.78274 (3) obj. 3930.79 iterations 6
Cbc0038I Pass  41: suminf.    0.72687 (3) obj. 3930.79 iterations 4
Cbc0038I Pass  42: suminf.    1.02473 (3) obj. 3930.79 iterations 7
Cbc0038I Pass  43: suminf.    0.97898 (3) obj. 3930.79 iterations 4
Cbc0038I Pass  44: suminf.    0.44330 (4) obj. 3930.79 iterations 8
Cbc0038I Pass  45: suminf.    0.38043 (2) obj. 3930.79 iterations 3
Cbc0038I Pass  46: suminf.    0.97898 (3) obj. 3930.79 iterations 8
Cbc0038I Pass  47: suminf.    0.78274 (3) obj. 3930.79 iterations 6
Cbc0038I Pass  48: suminf.    0.72687 (3) obj. 3930.79 iterations 4
Cbc0038I Pass  49: suminf.    1.02473 (3) obj. 3930.79 iterations 7
Cbc0038I Pass  50: suminf.    0.97898 (3) obj. 3930.79 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 20 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 3950.53 - took 0.02 seconds
Cbc0012I Integer solution of 3950.5291 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 2 columns
Cbc0031I 7 added rows had average density of 17
Cbc0013I At root node, 9 cuts changed objective from 3851.8184 to 3950.5291 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 25 row cuts average 32.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 110 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective 3950.52912169507, took 102 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 35 variables fixed on reduced cost
Cuts at root node changed objective from 3851.82 to 3950.53
Probing was tried 8 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 8 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 8 times and created 25 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 8 times and created 110 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                3950.52912170
Enumerated nodes:               0
Total iterations:               102
Time (CPU seconds):             0.04
Time (Wallclock seconds):       0.04

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

initial land use distribution [2, 1, 2, 2, 1, 0, 2, 2, 0, 1, 2, 1, 2, 0, 2, 2, 0, 2, 2, 0, 1, 1, 1, 1, 1]
Optimized Land Use with benefits restriction: [2, 1, 0, 0, 2, 2, 1, 1, 0, 0, 2, 2, 2, 1, 0, 2, 0, 2, 2, 1, 2, 0, 1, 1, 1]
Initial total costs: 4990.984051029801
Optimized total costs: 3950.5291216952733
Initial total benefit1/ES1: 110.95945846707855
Optimized total benefit1/ES1: 112.84164907644976
Initial total Benefit2/ES2: 123.00640792994264
Optimized total benefit2/ES2: 123.14257042868326
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/a86684ca994a4e5497a89f6385bb5a69-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/a86684ca994a4e5497a89f6385bb5a69-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2129 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.72537
Cbc0038I Pass   1: suminf.    0.16612 (1) obj. 2325.46 iterations 9
Cbc0038I Solution found of 2376.42
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 2376.42 to 2319.18 (0.01 seconds)
Cbc0038I Round again with cutoff of 2300.16
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.12812 (2) obj. 2300.16 iterations 1
Cbc0038I Pass   3: suminf.    0.04778 (1) obj. 2300.16 iterations 10
Cbc0038I Pass   4: suminf.    0.55192 (2) obj. 2138.84 iterations 8
Cbc0038I Pass   5: suminf.    0.66088 (2) obj. 2300.16 iterations 7
Cbc0038I Pass   6: suminf.    0.63578 (3) obj. 2300.16 iterations 4
Cbc0038I Pass   7: suminf.    0.97360 (3) obj. 2300.16 iterations 7
Cbc0038I Pass   8: suminf.    0.73358 (3) obj. 2300.16 iterations 5
Cbc0038I Pass   9: suminf.    0.85532 (3) obj. 2300.16 iterations 7
Cbc0038I Pass  10: suminf.    0.28399 (4) obj. 2300.16 iterations 13
Cbc0038I Pass  11: suminf.    0.26188 (2) obj. 2300.16 iterations 8
Cbc0038I Pass  12: suminf.    1.22197 (4) obj. 2300.16 iterations 11
Cbc0038I Pass  13: suminf.    0.69911 (4) obj. 2300.16 iterations 4
Cbc0038I Pass  14: suminf.    0.54656 (3) obj. 2300.16 iterations 8
Cbc0038I Pass  15: suminf.    0.35924 (2) obj. 2300.16 iterations 6
Cbc0038I Pass  16: suminf.    1.23618 (5) obj. 2300.16 iterations 16
Cbc0038I Pass  17: suminf.    1.14838 (4) obj. 2300.16 iterations 7
Cbc0038I Pass  18: suminf.    1.44479 (3) obj. 2300.16 iterations 7
Cbc0038I Pass  19: suminf.    1.16163 (3) obj. 2300.16 iterations 8
Cbc0038I Pass  20: suminf.    1.39355 (3) obj. 2300.16 iterations 7
Cbc0038I Pass  21: suminf.    1.04045 (4) obj. 2300.16 iterations 12
Cbc0038I Pass  22: suminf.    0.59529 (3) obj. 2300.16 iterations 6
Cbc0038I Pass  23: suminf.    0.34636 (1) obj. 2300.16 iterations 4
Cbc0038I Pass  24: suminf.    0.42324 (1) obj. 2226.93 iterations 4
Cbc0038I Pass  25: suminf.    0.16620 (1) obj. 2300.16 iterations 4
Cbc0038I Pass  26: suminf.    0.28172 (1) obj. 2257.26 iterations 4
Cbc0038I Pass  27: suminf.    1.70232 (4) obj. 2300.16 iterations 15
Cbc0038I Pass  28: suminf.    1.32091 (4) obj. 2300.16 iterations 5
Cbc0038I Pass  29: suminf.    0.10617 (3) obj. 2300.16 iterations 7
Cbc0038I Pass  30: suminf.    0.31775 (3) obj. 2300.16 iterations 5
Cbc0038I Pass  31: suminf.    1.63934 (5) obj. 2300.16 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 2319.18 to 2255.92 (0.02 seconds)
Cbc0038I Round again with cutoff of 2230.54
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.70417 (3) obj. 2230.54 iterations 4
Cbc0038I Pass  32: suminf.    0.22270 (1) obj. 2230.54 iterations 9
Cbc0038I Pass  33: suminf.    0.55192 (2) obj. 2138.84 iterations 8
Cbc0038I Pass  34: suminf.    0.80483 (2) obj. 2230.54 iterations 7
Cbc0038I Pass  35: suminf.    0.55192 (2) obj. 2138.84 iterations 7
Cbc0038I Pass  36: suminf.    1.00331 (3) obj. 2184.33 iterations 5
Cbc0038I Pass  37: suminf.    0.71094 (3) obj. 2230.54 iterations 11
Cbc0038I Pass  38: suminf.    1.44975 (4) obj. 2230.54 iterations 7
Cbc0038I Pass  39: suminf.    1.37598 (3) obj. 2230.54 iterations 6
Cbc0038I Pass  40: suminf.    0.48892 (3) obj. 2230.54 iterations 6
Cbc0038I Pass  41: suminf.    0.33581 (2) obj. 2224.26 iterations 9
Cbc0038I Pass  42: suminf.    1.07858 (3) obj. 2230.54 iterations 11
Cbc0038I Pass  43: suminf.    0.81961 (4) obj. 2230.54 iterations 6
Cbc0038I Pass  44: suminf.    0.36257 (2) obj. 2230.54 iterations 6
Cbc0038I Pass  45: suminf.    0.23418 (1) obj. 2230.54 iterations 1
Cbc0038I Pass  46: suminf.    0.26970 (1) obj. 2216.4 iterations 3
Cbc0038I Pass  47: suminf.    0.23418 (1) obj. 2230.54 iterations 3
Cbc0038I Pass  48: suminf.    0.43332 (2) obj. 2230.54 iterations 6
Cbc0038I Pass  49: suminf.    0.43332 (2) obj. 2230.54 iterations 2
Cbc0038I Pass  50: suminf.    1.47220 (5) obj. 2230.54 iterations 6
Cbc0038I Pass  51: suminf.    0.79553 (3) obj. 2230.54 iterations 3
Cbc0038I Pass  52: suminf.    1.19788 (3) obj. 2230.54 iterations 8
Cbc0038I Pass  53: suminf.    0.54410 (4) obj. 2230.54 iterations 8
Cbc0038I Pass  54: suminf.    0.35280 (2) obj. 2229.04 iterations 10
Cbc0038I Pass  55: suminf.    0.51331 (3) obj. 2230.54 iterations 14
Cbc0038I Pass  56: suminf.    0.10953 (4) obj. 2230.54 iterations 15
Cbc0038I Pass  57: suminf.    0.10953 (4) obj. 2230.54 iterations 0
Cbc0038I Pass  58: suminf.    0.20933 (1) obj. 2208.81 iterations 7
Cbc0038I Pass  59: suminf.    0.20933 (1) obj. 2208.81 iterations 0
Cbc0038I Pass  60: suminf.    0.42114 (1) obj. 2230.54 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 17 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 2255.92 to 2253.94 (0.03 seconds)
Cbc0038I Round again with cutoff of 2200.08
Cbc0038I Reduced cost fixing fixed 28 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.98054 (3) obj. 2200.08 iterations 0
Cbc0038I Pass  61: suminf.    0.34087 (3) obj. 2200.08 iterations 7
Cbc0038I Pass  62: suminf.    1.00208 (3) obj. 2200.08 iterations 7
Cbc0038I Pass  63: suminf.    0.85941 (3) obj. 2200.08 iterations 4
Cbc0038I Pass  64: suminf.    1.34991 (3) obj. 2200.08 iterations 6
Cbc0038I Pass  65: suminf.    0.76520 (3) obj. 2200.08 iterations 9
Cbc0038I Pass  66: suminf.    0.85433 (4) obj. 2200.08 iterations 6
Cbc0038I Pass  67: suminf.    0.70300 (4) obj. 2200.08 iterations 7
Cbc0038I Pass  68: suminf.    0.70300 (4) obj. 2200.08 iterations 1
Cbc0038I Pass  69: suminf.    1.20366 (3) obj. 2200.08 iterations 11
Cbc0038I Pass  70: suminf.    1.20366 (3) obj. 2200.08 iterations 0
Cbc0038I Pass  71: suminf.    0.98054 (3) obj. 2200.08 iterations 7
Cbc0038I Pass  72: suminf.    0.34087 (3) obj. 2200.08 iterations 6
Cbc0038I Pass  73: suminf.    1.00208 (3) obj. 2200.08 iterations 6
Cbc0038I Pass  74: suminf.    0.85941 (3) obj. 2200.08 iterations 4
Cbc0038I Pass  75: suminf.    1.10416 (4) obj. 2200.08 iterations 6
Cbc0038I Pass  76: suminf.    1.10416 (4) obj. 2200.08 iterations 0
Cbc0038I Pass  77: suminf.    0.44272 (3) obj. 2200.08 iterations 5
Cbc0038I Pass  78: suminf.    0.36615 (2) obj. 2200.08 iterations 4
Cbc0038I Pass  79: suminf.    0.77330 (3) obj. 2184.64 iterations 7
Cbc0038I Pass  80: suminf.    0.49540 (2) obj. 2200.08 iterations 4
Cbc0038I Pass  81: suminf.    0.68142 (2) obj. 2200.08 iterations 6
Cbc0038I Pass  82: suminf.    0.54810 (3) obj. 2200.08 iterations 6
Cbc0038I Pass  83: suminf.    0.71539 (3) obj. 2200.08 iterations 4
Cbc0038I Pass  84: suminf.    1.71739 (4) obj. 2200.08 iterations 7
Cbc0038I Pass  85: suminf.    0.76653 (4) obj. 2200.08 iterations 5
Cbc0038I Pass  86: suminf.    0.53976 (4) obj. 2200.08 iterations 8
Cbc0038I Pass  87: suminf.    0.49501 (3) obj. 2200.08 iterations 11
Cbc0038I Pass  88: suminf.    0.23062 (3) obj. 2200.08 iterations 2
Cbc0038I Pass  89: suminf.    0.71539 (3) obj. 2200.08 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 17 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 2253.94 - took 0.03 seconds
Cbc0012I Integer solution of 2253.9355 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 5 columns
Cbc0031I 9 added rows had average density of 25.222222
Cbc0013I At root node, 9 cuts changed objective from 2129.0013 to 2193.5384 in 36 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 81 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 109 row cuts average 30.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 94 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2253.9355 best solution, best possible 2193.5384 (0.10 seconds)
Cbc0012I Integer solution of 2221.3364 found by DiveCoefficient after 239 iterations and 1 nodes (0.10 seconds)
Cbc0001I Search completed - best objective 2221.33642307658, took 460 iterations and 10 nodes (0.13 seconds)
Cbc0032I Strong branching done 154 times (737 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 57 variables fixed on reduced cost
Cuts at root node changed objective from 2129 to 2193.54
Probing was tried 64 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 61 times and created 84 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 61 times and created 74 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
Clique was tried 36 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 61 times and created 231 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 36 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 61 times and created 152 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2221.33642308
Enumerated nodes:               10
Total iterations:               460
Time (CPU seconds):             0.13
Time (Wallclock seconds):       0.13

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.13

initial land use distribution [0, 1, 1, 2, 1, 0, 2, 0, 0, 2, 2, 0, 2, 0, 2, 0, 2, 1, 2, 1, 1, 0, 0, 1, 1]
Optimized Land Use with benefits restriction: [0, 1, 1, 0, 1, 0, 1, 0, 0, 2, 2, 0, 1, 2, 1, 0, 0, 0, 1, 2, 1, 0, 2, 2, 2]
Initial total costs: 4530.146181076761
Optimized total costs: 2221.3364230764896
Initial total benefit1/ES1: 90.05542767965791
Optimized total benefit1/ES1: 90.3610291123486
Initial total Benefit2/ES2: 83.08594333944575
Optimized total benefit2/ES2: 83.39195416162306
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/00f46d360584474180f6e46f73d861a1-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/00f46d360584474180f6e46f73d861a1-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1759.54 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.546263
Cbc0038I Pass   1: suminf.    0.10202 (1) obj. 1815.36 iterations 10
Cbc0038I Solution found of 2258.03
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2208.18
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.10202 (1) obj. 1815.36 iterations 0
Cbc0038I Pass   3: suminf.    0.10112 (1) obj. 2208.18 iterations 3
Cbc0038I Pass   4: suminf.    1.15429 (5) obj. 2208.18 iterations 18
Cbc0038I Pass   5: suminf.    0.25430 (1) obj. 2164.06 iterations 6
Cbc0038I Pass   6: suminf.    0.34381 (1) obj. 2208.18 iterations 3
Cbc0038I Pass   7: suminf.    1.00330 (4) obj. 2208.18 iterations 20
Cbc0038I Pass   8: suminf.    0.38016 (1) obj. 2174.9 iterations 4
Cbc0038I Pass   9: suminf.    0.44768 (1) obj. 2208.18 iterations 3
Cbc0038I Pass  10: suminf.    1.06407 (4) obj. 2208.18 iterations 15
Cbc0038I Pass  11: suminf.    0.40134 (1) obj. 2208.18 iterations 9
Cbc0038I Pass  12: suminf.    0.22091 (1) obj. 2169.77 iterations 4
Cbc0038I Pass  13: suminf.    0.29884 (1) obj. 2208.18 iterations 3
Cbc0038I Pass  14: suminf.    0.55725 (4) obj. 2208.18 iterations 11
Cbc0038I Pass  15: suminf.    0.40983 (3) obj. 2208.18 iterations 5
Cbc0038I Pass  16: suminf.    0.22903 (1) obj. 2208.18 iterations 7
Cbc0038I Pass  17: suminf.    0.26399 (1) obj. 2025.02 iterations 3
Cbc0038I Pass  18: suminf.    0.21950 (1) obj. 2208.18 iterations 2
Cbc0038I Pass  19: suminf.    0.71389 (3) obj. 2208.18 iterations 7
Cbc0038I Pass  20: suminf.    0.37563 (2) obj. 2132.91 iterations 3
Cbc0038I Pass  21: suminf.    0.35858 (3) obj. 2208.18 iterations 3
Cbc0038I Pass  22: suminf.    0.17610 (2) obj. 2208.18 iterations 3
Cbc0038I Solution found of 2107.42
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 9 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 9 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 2107.42 to 1826 (0.02 seconds)
Cbc0038I Round again with cutoff of 1812.71
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  23: suminf.    0.19855 (1) obj. 1803.65 iterations 4
Cbc0038I Pass  24: suminf.    0.57438 (3) obj. 1812.71 iterations 8
Cbc0038I Pass  25: suminf.    0.92891 (4) obj. 1812.71 iterations 7
Cbc0038I Pass  26: suminf.    0.58552 (2) obj. 1812.71 iterations 5
Cbc0038I Pass  27: suminf.    0.90406 (3) obj. 1812.71 iterations 5
Cbc0038I Pass  28: suminf.    1.01188 (4) obj. 1812.71 iterations 7
Cbc0038I Pass  29: suminf.    0.84768 (4) obj. 1812.71 iterations 4
Cbc0038I Pass  30: suminf.    1.22048 (3) obj. 1812.71 iterations 4
Cbc0038I Pass  31: suminf.    0.57438 (3) obj. 1812.71 iterations 4
Cbc0038I Pass  32: suminf.    0.92891 (4) obj. 1812.71 iterations 6
Cbc0038I Pass  33: suminf.    0.58552 (2) obj. 1812.71 iterations 5
Cbc0038I Pass  34: suminf.    0.90406 (3) obj. 1812.71 iterations 5
Cbc0038I Pass  35: suminf.    0.41525 (2) obj. 1776.36 iterations 7
Cbc0038I Pass  36: suminf.    0.45238 (1) obj. 1812.71 iterations 3
Cbc0038I Pass  37: suminf.    0.45238 (1) obj. 1812.71 iterations 0
Cbc0038I Pass  38: suminf.    0.41525 (2) obj. 1776.36 iterations 3
Cbc0038I Pass  39: suminf.    0.41525 (2) obj. 1776.36 iterations 2
Cbc0038I Pass  40: suminf.    0.41525 (2) obj. 1776.36 iterations 2
Cbc0038I Pass  41: suminf.    1.10645 (3) obj. 1774.87 iterations 8
Cbc0038I Pass  42: suminf.    0.90406 (3) obj. 1812.71 iterations 2
Cbc0038I Pass  43: suminf.    0.57438 (3) obj. 1812.71 iterations 4
Cbc0038I Pass  44: suminf.    0.92891 (4) obj. 1812.71 iterations 6
Cbc0038I Pass  45: suminf.    0.58552 (2) obj. 1812.71 iterations 5
Cbc0038I Pass  46: suminf.    0.46393 (3) obj. 1812.71 iterations 9
Cbc0038I Pass  47: suminf.    0.46393 (3) obj. 1812.71 iterations 1
Cbc0038I Pass  48: suminf.    1.27570 (4) obj. 1812.71 iterations 8
Cbc0038I Pass  49: suminf.    1.17409 (5) obj. 1812.71 iterations 4
Cbc0038I Pass  50: suminf.    0.51137 (2) obj. 1812.71 iterations 4
Cbc0038I Pass  51: suminf.    0.41525 (2) obj. 1776.36 iterations 3
Cbc0038I Pass  52: suminf.    0.45238 (1) obj. 1812.71 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 19 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 1826 - took 0.02 seconds
Cbc0012I Integer solution of 1826.0046 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 4 columns
Cbc0031I 10 added rows had average density of 20.2
Cbc0013I At root node, 10 cuts changed objective from 1759.5431 to 1799.9238 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 27 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 40 row cuts average 33.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 101 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1826.0046 best solution, best possible 1799.9238 (0.05 seconds)
Cbc0001I Search completed - best objective 1826.004615208679, took 245 iterations and 4 nodes (0.06 seconds)
Cbc0032I Strong branching done 62 times (285 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 52 variables fixed on reduced cost
Cuts at root node changed objective from 1759.54 to 1799.92
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 28 times and created 29 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 28 times and created 55 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 28 times and created 99 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 28 times and created 258 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1826.00461521
Enumerated nodes:               4
Total iterations:               245
Time (CPU seconds):             0.06
Time (Wallclock seconds):       0.06

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

initial land use distribution [2, 0, 0, 0, 0, 2, 2, 1, 2, 2, 0, 2, 2, 0, 0, 1, 0, 2, 2, 1, 1, 0, 0, 2, 2]
Optimized Land Use with benefits restriction: [2, 0, 0, 1, 0, 2, 0, 1, 1, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 2, 1, 2, 0, 0, 0]
Initial total costs: 4113.020721951548
Optimized total costs: 1826.0046152085138
Initial total benefit1/ES1: 56.48479371415874
Optimized total benefit1/ES1: 56.635062652902505
Initial total Benefit2/ES2: 85.3071669450952
Optimized total benefit2/ES2: 85.77192932276188
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/d2e8e9ef9c624c409fd382d927ce976c-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/d2e8e9ef9c624c409fd382d927ce976c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3351.49 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.944325
Cbc0038I Pass   1: suminf.    0.15253 (1) obj. 3544.12 iterations 10
Cbc0038I Solution found of 3878.66
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 3825.94
Cbc0038I Pass   2: suminf.    0.15253 (1) obj. 3544.12 iterations 0
Cbc0038I Pass   3: suminf.    0.10806 (1) obj. 3825.94 iterations 7
Cbc0038I Pass   4: suminf.    0.41792 (1) obj. 3594.7 iterations 2
Cbc0038I Pass   5: suminf.    1.26330 (4) obj. 3825.94 iterations 23
Cbc0038I Pass   6: suminf.    1.05129 (3) obj. 3825.94 iterations 7
Cbc0038I Pass   7: suminf.    1.20799 (3) obj. 3825.94 iterations 9
Cbc0038I Pass   8: suminf.    0.26330 (1) obj. 3712.77 iterations 8
Cbc0038I Pass   9: suminf.    0.44782 (1) obj. 3825.94 iterations 7
Cbc0038I Pass  10: suminf.    0.48314 (1) obj. 3808.71 iterations 2
Cbc0038I Pass  11: suminf.    1.02633 (3) obj. 3825.94 iterations 12
Cbc0038I Pass  12: suminf.    0.69110 (2) obj. 3825.94 iterations 9
Cbc0038I Pass  13: suminf.    0.98789 (3) obj. 3792.05 iterations 9
Cbc0038I Pass  14: suminf.    0.56173 (3) obj. 3825.94 iterations 8
Cbc0038I Pass  15: suminf.    1.23342 (3) obj. 3825.94 iterations 11
Cbc0038I Pass  16: suminf.    1.23354 (5) obj. 3825.94 iterations 18
Cbc0038I Pass  17: suminf.    0.92050 (3) obj. 3825.94 iterations 8
Cbc0038I Pass  18: suminf.    0.18132 (1) obj. 3680.18 iterations 12
Cbc0038I Solution found of 3767.03
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 13 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 8 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 3767.03 to 3489.85 (0.01 seconds)
Cbc0038I Round again with cutoff of 3462.18
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 3
Cbc0038I Pass  19: suminf.    0.34992 (3) obj. 3462.18 iterations 4
Cbc0038I Pass  20: suminf.    0.92739 (3) obj. 3462.18 iterations 8
Cbc0038I Pass  21: suminf.    0.92739 (3) obj. 3462.18 iterations 0
Cbc0038I Pass  22: suminf.    0.43841 (3) obj. 3462.18 iterations 6
Cbc0038I Pass  23: suminf.    0.34926 (3) obj. 3462.18 iterations 2
Cbc0038I Pass  24: suminf.    0.78816 (3) obj. 3462.18 iterations 5
Cbc0038I Pass  25: suminf.    0.77998 (3) obj. 3462.18 iterations 7
Cbc0038I Pass  26: suminf.    0.65667 (2) obj. 3421.62 iterations 4
Cbc0038I Pass  27: suminf.    0.76000 (2) obj. 3462.18 iterations 3
Cbc0038I Pass  28: suminf.    0.65667 (2) obj. 3421.62 iterations 2
Cbc0038I Pass  29: suminf.    1.04353 (3) obj. 3462.18 iterations 11
Cbc0038I Pass  30: suminf.    0.69102 (2) obj. 3462.18 iterations 6
Cbc0038I Pass  31: suminf.    0.76000 (2) obj. 3462.18 iterations 6
Cbc0038I Pass  32: suminf.    0.42351 (2) obj. 3462.18 iterations 6
Cbc0038I Pass  33: suminf.    0.42351 (2) obj. 3462.18 iterations 1
Cbc0038I Pass  34: suminf.    1.08591 (3) obj. 3412.71 iterations 5
Cbc0038I Pass  35: suminf.    0.84007 (3) obj. 3462.18 iterations 3
Cbc0038I Pass  36: suminf.    0.46381 (2) obj. 3462.18 iterations 3
Cbc0038I Pass  37: suminf.    0.82962 (3) obj. 3462.18 iterations 6
Cbc0038I Pass  38: suminf.    0.32709 (2) obj. 3462.18 iterations 4
Cbc0038I Pass  39: suminf.    1.12392 (3) obj. 3413.34 iterations 4
Cbc0038I Pass  40: suminf.    1.23896 (4) obj. 3462.18 iterations 5
Cbc0038I Pass  41: suminf.    0.52572 (3) obj. 3462.18 iterations 5
Cbc0038I Pass  42: suminf.    0.28534 (2) obj. 3462.18 iterations 4
Cbc0038I Pass  43: suminf.    0.55868 (3) obj. 3462.18 iterations 8
Cbc0038I Pass  44: suminf.    0.28534 (2) obj. 3462.18 iterations 5
Cbc0038I Pass  45: suminf.    1.16299 (4) obj. 3462.18 iterations 10
Cbc0038I Pass  46: suminf.    0.79321 (4) obj. 3462.18 iterations 3
Cbc0038I Pass  47: suminf.    0.91259 (3) obj. 3462.18 iterations 5
Cbc0038I Pass  48: suminf.    0.49799 (3) obj. 3462.18 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 3489.85 - took 0.02 seconds
Cbc0012I Integer solution of 3489.8507 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 2 columns
Cbc0031I 7 added rows had average density of 24.714286
Cbc0013I At root node, 7 cuts changed objective from 3351.494 to 3414.5231 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 22 row cuts average 35.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 76 row cuts average 27.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3489.8507 best solution, best possible 3414.5231 (0.04 seconds)
Cbc0001I Search completed - best objective 3489.85072686377, took 804 iterations and 30 nodes (0.17 seconds)
Cbc0032I Strong branching done 470 times (1905 iterations), fathomed 6 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 116 variables fixed on reduced cost
Cuts at root node changed objective from 3351.49 to 3414.52
Probing was tried 137 times and created 45 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Gomory was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 128 times and created 214 cuts of which 0 were active after adding rounds of cuts (0.055 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 128 times and created 388 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 128 times and created 333 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                3489.85072686
Enumerated nodes:               30
Total iterations:               804
Time (CPU seconds):             0.17
Time (Wallclock seconds):       0.17

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.17

initial land use distribution [1, 2, 1, 2, 1, 2, 0, 0, 0, 2, 2, 1, 0, 2, 0, 2, 1, 0, 2, 2, 1, 2, 1, 2, 1]
Optimized Land Use with benefits restriction: [2, 0, 0, 2, 1, 2, 2, 1, 2, 2, 0, 0, 1, 0, 2, 1, 2, 0, 0, 0, 0, 1, 2, 2, 0]
Initial total costs: 6482.923817781568
Optimized total costs: 3489.850726863704
Initial total benefit1/ES1: 81.13950103920249
Optimized total benefit1/ES1: 81.19971055185077
Initial total Benefit2/ES2: 103.92106216817002
Optimized total benefit2/ES2: 107.78663765332728
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/4a310e3cd984458f9af209e235585ab2-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/4a310e3cd984458f9af209e235585ab2-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3139.57 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.42042
Cbc0038I Pass   1: suminf.    0.49423 (2) obj. 3180.67 iterations 4
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 3505.72 iterations 8
Cbc0038I Solution found of 3505.72
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 24 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 3469.11
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.49423 (2) obj. 3180.67 iterations 0
Cbc0038I Pass   4: suminf.    0.40272 (2) obj. 3469.11 iterations 8
Cbc0038I Pass   5: suminf.    0.06204 (1) obj. 3469.11 iterations 1
Cbc0038I Pass   6: suminf.    0.84682 (4) obj. 3469.11 iterations 15
Cbc0038I Pass   7: suminf.    0.44673 (2) obj. 3469.11 iterations 8
Cbc0038I Pass   8: suminf.    0.67923 (2) obj. 3454.95 iterations 12
Cbc0038I Pass   9: suminf.    0.88591 (2) obj. 3469.11 iterations 8
Cbc0038I Pass  10: suminf.    0.67923 (2) obj. 3454.95 iterations 8
Cbc0038I Pass  11: suminf.    1.30830 (5) obj. 3469.11 iterations 7
Cbc0038I Pass  12: suminf.    0.67923 (2) obj. 3454.95 iterations 12
Cbc0038I Pass  13: suminf.    1.20069 (5) obj. 3469.11 iterations 20
Cbc0038I Pass  14: suminf.    0.67158 (4) obj. 3469.11 iterations 4
Cbc0038I Pass  15: suminf.    0.75305 (3) obj. 3452.65 iterations 9
Cbc0038I Pass  16: suminf.    0.83085 (4) obj. 3469.11 iterations 14
Cbc0038I Pass  17: suminf.    0.58231 (5) obj. 3469.11 iterations 2
Cbc0038I Pass  18: suminf.    0.55473 (2) obj. 3469.11 iterations 11
Cbc0038I Pass  19: suminf.    0.55473 (2) obj. 3469.11 iterations 1
Cbc0038I Pass  20: suminf.    0.04177 (1) obj. 3469.11 iterations 9
Cbc0038I Pass  21: suminf.    0.41607 (1) obj. 3247.74 iterations 3
Cbc0038I Pass  22: suminf.    0.04177 (1) obj. 3469.11 iterations 5
Cbc0038I Pass  23: suminf.    0.55570 (3) obj. 3469.11 iterations 11
Cbc0038I Pass  24: suminf.    0.46114 (2) obj. 3459.98 iterations 7
Cbc0038I Pass  25: suminf.    0.37905 (2) obj. 3469.11 iterations 9
Cbc0038I Pass  26: suminf.    0.37905 (2) obj. 3469.11 iterations 0
Cbc0038I Pass  27: suminf.    1.43751 (3) obj. 3445.94 iterations 6
Cbc0038I Pass  28: suminf.    0.66565 (3) obj. 3469.11 iterations 6
Cbc0038I Pass  29: suminf.    0.65823 (4) obj. 3469.11 iterations 11
Cbc0038I Pass  30: suminf.    0.35241 (3) obj. 3469.11 iterations 8
Cbc0038I Pass  31: suminf.    0.72785 (4) obj. 3469.11 iterations 7
Cbc0038I Pass  32: suminf.    0.49166 (2) obj. 3469.11 iterations 3
Cbc0038I Rounding solution of 3486.16 is better than previous of 3505.72

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 12 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 9 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 3486.16 to 3286.11 (0.02 seconds)
Cbc0038I Round again with cutoff of 3256.8
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.41104 (2) obj. 3155.77 iterations 7
Cbc0038I Pass  33: suminf.    0.11480 (1) obj. 3208.01 iterations 8
Cbc0038I Pass  34: suminf.    0.23430 (1) obj. 3256.8 iterations 3
Cbc0038I Pass  35: suminf.    0.73313 (2) obj. 3256.8 iterations 7
Cbc0038I Pass  36: suminf.    0.43715 (3) obj. 3256.8 iterations 8
Cbc0038I Pass  37: suminf.    0.51517 (3) obj. 3256.8 iterations 7
Cbc0038I Pass  38: suminf.    0.73704 (3) obj. 3192.28 iterations 7
Cbc0038I Pass  39: suminf.    0.38075 (2) obj. 3208.15 iterations 6
Cbc0038I Pass  40: suminf.    0.63685 (2) obj. 3221.31 iterations 9
Cbc0038I Pass  41: suminf.    0.89296 (4) obj. 3256.8 iterations 7
Cbc0038I Pass  42: suminf.    0.98732 (4) obj. 3256.8 iterations 8
Cbc0038I Pass  43: suminf.    0.98732 (4) obj. 3256.8 iterations 2
Cbc0038I Pass  44: suminf.    0.53393 (3) obj. 3256.8 iterations 6
Cbc0038I Pass  45: suminf.    0.42739 (1) obj. 3256.8 iterations 3
Cbc0038I Pass  46: suminf.    0.49649 (1) obj. 3228.59 iterations 3
Cbc0038I Pass  47: suminf.    0.27992 (3) obj. 3256.8 iterations 7
Cbc0038I Pass  48: suminf.    0.27992 (3) obj. 3256.8 iterations 5
Cbc0038I Pass  49: suminf.    0.70555 (2) obj. 3195.57 iterations 6
Cbc0038I Pass  50: suminf.    0.40931 (1) obj. 3247.81 iterations 7
Cbc0038I Pass  51: suminf.    0.43132 (1) obj. 3256.8 iterations 3
Cbc0038I Pass  52: suminf.    0.86680 (3) obj. 3256.8 iterations 11
Cbc0038I Pass  53: suminf.    0.12429 (2) obj. 3256.8 iterations 8
Cbc0038I Pass  54: suminf.    0.43197 (2) obj. 3185.58 iterations 7
Cbc0038I Pass  55: suminf.    0.37566 (1) obj. 3198.8 iterations 3
Cbc0038I Pass  56: suminf.    0.46983 (2) obj. 3256.8 iterations 5
Cbc0038I Pass  57: suminf.    0.11945 (2) obj. 3256.8 iterations 2
Cbc0038I Pass  58: suminf.    0.11945 (2) obj. 3256.8 iterations 0
Cbc0038I Pass  59: suminf.    0.48878 (2) obj. 3250.43 iterations 7
Cbc0038I Pass  60: suminf.    0.47210 (2) obj. 3256.8 iterations 7
Cbc0038I Pass  61: suminf.    0.82007 (3) obj. 3256.8 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 13 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 3286.11 - took 0.02 seconds
Cbc0012I Integer solution of 3286.1113 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 3 columns
Cbc0031I 11 added rows had average density of 23.272727
Cbc0013I At root node, 11 cuts changed objective from 3139.5732 to 3219.1259 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 31 row cuts average 36.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 92 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3286.1113 best solution, best possible 3219.1259 (0.05 seconds)
Cbc0001I Search completed - best objective 3286.111256681629, took 425 iterations and 14 nodes (0.10 seconds)
Cbc0032I Strong branching done 204 times (1185 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 5, 79 variables fixed on reduced cost
Cuts at root node changed objective from 3139.57 to 3219.13
Probing was tried 59 times and created 33 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 52 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Knapsack was tried 52 times and created 92 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 52 times and created 188 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 52 times and created 231 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                3286.11125668
Enumerated nodes:               14
Total iterations:               425
Time (CPU seconds):             0.10
Time (Wallclock seconds):       0.10

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.10

initial land use distribution [1, 1, 1, 0, 1, 2, 1, 1, 2, 2, 1, 2, 0, 2, 2, 0, 2, 1, 2, 2, 1, 0, 0, 1, 2]
Optimized Land Use with benefits restriction: [0, 2, 1, 0, 2, 1, 0, 2, 2, 0, 1, 0, 2, 1, 2, 2, 1, 0, 0, 1, 1, 0, 1, 2, 1]
Initial total costs: 7521.003499677249
Optimized total costs: 3286.111256681604
Initial total benefit1/ES1: 98.69764698372377
Optimized total benefit1/ES1: 99.1114915634281
Initial total Benefit2/ES2: 82.04481738720992
Optimized total benefit2/ES2: 83.07600055534463
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/ec80174ee3a440bcb91bfb881ea8ff66-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/ec80174ee3a440bcb91bfb881ea8ff66-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1598.72 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.60983
Cbc0038I Pass   1: suminf.    0.15752 (1) obj. 1679.44 iterations 5
Cbc0038I Solution found of 2056.32
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 22 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from 2056.32 to 1751.87 (0.01 seconds)
Cbc0038I Round again with cutoff of 1736.55
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.33036 (1) obj. 1656.18 iterations 5
Cbc0038I Pass   3: suminf.    0.07020 (1) obj. 1736.55 iterations 6
Cbc0038I Pass   4: suminf.    0.29953 (1) obj. 1686.52 iterations 1
Cbc0038I Pass   5: suminf.    0.83629 (2) obj. 1736.55 iterations 4
Cbc0038I Pass   6: suminf.    0.48720 (1) obj. 1734.7 iterations 4
Cbc0038I Pass   7: suminf.    0.49308 (1) obj. 1736.55 iterations 2
Cbc0038I Pass   8: suminf.    0.96047 (4) obj. 1736.55 iterations 6
Cbc0038I Pass   9: suminf.    0.37572 (3) obj. 1736.55 iterations 7
Cbc0038I Pass  10: suminf.    0.87279 (3) obj. 1736.55 iterations 5
Cbc0038I Pass  11: suminf.    0.98668 (5) obj. 1736.55 iterations 6
Cbc0038I Pass  12: suminf.    0.98668 (5) obj. 1736.55 iterations 1
Cbc0038I Pass  13: suminf.    0.07020 (1) obj. 1736.55 iterations 7
Cbc0038I Pass  14: suminf.    0.29953 (1) obj. 1686.52 iterations 1
Cbc0038I Pass  15: suminf.    0.31612 (1) obj. 1681.18 iterations 3
Cbc0038I Pass  16: suminf.    0.31612 (1) obj. 1681.18 iterations 0
Cbc0038I Pass  17: suminf.    0.49193 (1) obj. 1736.55 iterations 2
Cbc0038I Pass  18: suminf.    0.80727 (3) obj. 1736.55 iterations 9
Cbc0038I Pass  19: suminf.    0.59643 (2) obj. 1736.55 iterations 1
Cbc0038I Pass  20: suminf.    0.48720 (1) obj. 1734.7 iterations 6
Cbc0038I Pass  21: suminf.    0.49308 (1) obj. 1736.55 iterations 2
Cbc0038I Pass  22: suminf.    0.93843 (3) obj. 1736.55 iterations 7
Cbc0038I Pass  23: suminf.    0.81990 (3) obj. 1736.55 iterations 2
Cbc0038I Pass  24: suminf.    0.49193 (1) obj. 1736.55 iterations 7
Cbc0038I Pass  25: suminf.    0.31612 (1) obj. 1681.18 iterations 1
Cbc0038I Pass  26: suminf.    0.49193 (1) obj. 1736.55 iterations 2
Cbc0038I Pass  27: suminf.    1.12957 (5) obj. 1736.55 iterations 9
Cbc0038I Pass  28: suminf.    0.78056 (4) obj. 1736.55 iterations 6
Cbc0038I Pass  29: suminf.    0.53237 (2) obj. 1736.55 iterations 5
Cbc0038I Pass  30: suminf.    0.53237 (2) obj. 1736.55 iterations 0
Cbc0038I Pass  31: suminf.    0.31612 (1) obj. 1681.18 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 1751.87 - took 0.01 seconds
Cbc0012I Integer solution of 1751.8666 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0031I 6 added rows had average density of 18.666667
Cbc0013I At root node, 6 cuts changed objective from 1598.7234 to 1733.9847 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 5.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 30 row cuts average 29.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 76 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1751.8666 best solution, best possible 1748.0514 (0.03 seconds)
Cbc0001I Search completed - best objective 1751.86655848079, took 76 iterations and 2 nodes (0.03 seconds)
Cbc0032I Strong branching done 6 times (13 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 40 variables fixed on reduced cost
Cuts at root node changed objective from 1598.72 to 1748.05
Probing was tried 11 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 10 times and created 25 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 10 times and created 30 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 10 times and created 76 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1751.86655848
Enumerated nodes:               2
Total iterations:               76
Time (CPU seconds):             0.03
Time (Wallclock seconds):       0.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

initial land use distribution [2, 1, 0, 2, 1, 0, 0, 1, 0, 0, 2, 0, 2, 1, 1, 0, 0, 0, 1, 1, 1, 0, 2, 1, 0]
Optimized Land Use with benefits restriction: [1, 0, 1, 0, 0, 0, 2, 2, 0, 1, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0]
Initial total costs: 4978.497687317698
Optimized total costs: 1751.8665584806054
Initial total benefit1/ES1: 102.18305712713581
Optimized total benefit1/ES1: 105.84401636436579
Initial total Benefit2/ES2: 49.97382903238983
Optimized total benefit2/ES2: 55.46098626586123
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/a46eb5b91fe945f48da7b0f52f4afad8-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/a46eb5b91fe945f48da7b0f52f4afad8-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2941.84 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.72918
Cbc0038I Pass   1: suminf.    0.01277 (1) obj. 3042.66 iterations 11
Cbc0038I Solution found of 3679.51
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 3679.51 to 3282.77 (0.01 seconds)
Cbc0038I Round again with cutoff of 3248.68
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.01277 (1) obj. 3042.66 iterations 0
Cbc0038I Pass   3: suminf.    0.33213 (1) obj. 3248.68 iterations 1
Cbc0038I Pass   4: suminf.    1.07983 (3) obj. 3248.68 iterations 14
Cbc0038I Pass   5: suminf.    0.72435 (4) obj. 3248.68 iterations 12
Cbc0038I Pass   6: suminf.    0.75180 (3) obj. 3248.68 iterations 11
Cbc0038I Pass   7: suminf.    0.75180 (3) obj. 3248.68 iterations 0
Cbc0038I Pass   8: suminf.    0.12029 (1) obj. 3248.68 iterations 7
Cbc0038I Pass   9: suminf.    0.12029 (1) obj. 3248.68 iterations 0
Cbc0038I Pass  10: suminf.    0.42437 (1) obj. 3068.03 iterations 3
Cbc0038I Pass  11: suminf.    1.33016 (4) obj. 3248.68 iterations 10
Cbc0038I Pass  12: suminf.    0.46794 (2) obj. 3248.68 iterations 7
Cbc0038I Pass  13: suminf.    0.38686 (1) obj. 3205.34 iterations 4
Cbc0038I Pass  14: suminf.    0.45405 (1) obj. 3248.68 iterations 1
Cbc0038I Pass  15: suminf.    1.44479 (5) obj. 3248.68 iterations 17
Cbc0038I Pass  16: suminf.    1.42905 (3) obj. 3248.68 iterations 4
Cbc0038I Pass  17: suminf.    0.79037 (3) obj. 3248.68 iterations 9
Cbc0038I Pass  18: suminf.    0.64650 (3) obj. 3248.68 iterations 8
Cbc0038I Pass  19: suminf.    0.38521 (2) obj. 3248.68 iterations 4
Cbc0038I Pass  20: suminf.    0.56405 (3) obj. 3172.31 iterations 4
Cbc0038I Pass  21: suminf.    0.44636 (1) obj. 3181.13 iterations 3
Cbc0038I Pass  22: suminf.    1.00341 (3) obj. 3248.68 iterations 11
Cbc0038I Pass  23: suminf.    0.12021 (1) obj. 3248.68 iterations 6
Cbc0038I Pass  24: suminf.    0.03443 (1) obj. 3205.12 iterations 3
Cbc0038I Pass  25: suminf.    0.80872 (4) obj. 3248.68 iterations 11
Cbc0038I Pass  26: suminf.    0.03443 (1) obj. 3205.12 iterations 8
Cbc0038I Pass  27: suminf.    1.09874 (4) obj. 3248.68 iterations 6
Cbc0038I Pass  28: suminf.    0.84924 (5) obj. 3248.68 iterations 11
Cbc0038I Pass  29: suminf.    0.73111 (4) obj. 3248.68 iterations 2
Cbc0038I Pass  30: suminf.    0.32110 (1) obj. 3134.99 iterations 8
Cbc0038I Pass  31: suminf.    0.14486 (1) obj. 3248.68 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 11 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 7 rows 22 columns
Cbc0038I Mini branch and bound improved solution from 3282.77 to 3093.78 (0.02 seconds)
Cbc0038I Round again with cutoff of 3063.39
Cbc0038I Reduced cost fixing fixed 18 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.01277 (1) obj. 3042.66 iterations 0
Cbc0038I Pass  32: suminf.    0.04490 (1) obj. 3063.39 iterations 1
Cbc0038I Pass  33: suminf.    0.86042 (4) obj. 3063.39 iterations 17
Cbc0038I Pass  34: suminf.    0.50006 (4) obj. 3063.39 iterations 6
Cbc0038I Pass  35: suminf.    1.20331 (3) obj. 3063.39 iterations 9
Cbc0038I Pass  36: suminf.    0.44265 (2) obj. 3063.39 iterations 5
Cbc0038I Pass  37: suminf.    0.43924 (3) obj. 3063.39 iterations 4
Cbc0038I Pass  38: suminf.    1.20331 (3) obj. 3063.39 iterations 7
Cbc0038I Pass  39: suminf.    1.21512 (3) obj. 3063.39 iterations 7
Cbc0038I Pass  40: suminf.    0.46093 (3) obj. 3063.39 iterations 4
Cbc0038I Pass  41: suminf.    0.43108 (2) obj. 3063.39 iterations 4
Cbc0038I Pass  42: suminf.    1.06107 (3) obj. 3063.39 iterations 7
Cbc0038I Pass  43: suminf.    0.52174 (2) obj. 3063.39 iterations 10
Cbc0038I Pass  44: suminf.    0.01277 (1) obj. 3042.66 iterations 4
Cbc0038I Pass  45: suminf.    0.04490 (1) obj. 3063.39 iterations 1
Cbc0038I Pass  46: suminf.    1.16552 (3) obj. 3063.39 iterations 9
Cbc0038I Pass  47: suminf.    1.16552 (3) obj. 3063.39 iterations 1
Cbc0038I Pass  48: suminf.    0.62807 (3) obj. 3063.39 iterations 9
Cbc0038I Pass  49: suminf.    0.62807 (3) obj. 3063.39 iterations 0
Cbc0038I Pass  50: suminf.    0.87360 (3) obj. 3063.39 iterations 7
Cbc0038I Pass  51: suminf.    0.54783 (2) obj. 3063.39 iterations 7
Cbc0038I Pass  52: suminf.    0.45167 (1) obj. 3063.39 iterations 1
Cbc0038I Pass  53: suminf.    0.41635 (1) obj. 3049.37 iterations 3
Cbc0038I Pass  54: suminf.    1.55169 (4) obj. 3063.39 iterations 12
Cbc0038I Pass  55: suminf.    0.69365 (2) obj. 3063.39 iterations 7
Cbc0038I Pass  56: suminf.    0.89836 (3) obj. 3063.39 iterations 12
Cbc0038I Pass  57: suminf.    0.47967 (2) obj. 3063.39 iterations 11
Cbc0038I Pass  58: suminf.    0.47967 (2) obj. 3063.39 iterations 0
Cbc0038I Pass  59: suminf.    0.48168 (3) obj. 3063.39 iterations 11
Cbc0038I Pass  60: suminf.    1.40937 (3) obj. 3063.39 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 3093.78 - took 0.02 seconds
Cbc0012I Integer solution of 3093.7768 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0031I 7 added rows had average density of 18.857143
Cbc0013I At root node, 7 cuts changed objective from 2941.8356 to 3068.4934 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 42 row cuts average 25.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 79 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3093.7768 best solution, best possible 3068.4934 (0.04 seconds)
Cbc0001I Search completed - best objective 3093.77676760855, took 302 iterations and 8 nodes (0.07 seconds)
Cbc0032I Strong branching done 122 times (611 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 52 variables fixed on reduced cost
Cuts at root node changed objective from 2941.84 to 3068.49
Probing was tried 37 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 34 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 34 times and created 81 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Clique was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 34 times and created 147 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 34 times and created 297 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                3093.77676761
Enumerated nodes:               8
Total iterations:               302
Time (CPU seconds):             0.07
Time (Wallclock seconds):       0.08

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

initial land use distribution [1, 1, 1, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 1, 0, 2, 2, 2, 1, 0, 0, 0, 0, 2, 2]
Optimized Land Use with benefits restriction: [2, 2, 1, 1, 1, 2, 1, 0, 1, 2, 0, 0, 2, 1, 2, 0, 2, 0, 0, 0, 2, 1, 2, 2, 0]
Initial total costs: 5998.643709423846
Optimized total costs: 3093.7767676085887
Initial total benefit1/ES1: 75.83080197903755
Optimized total benefit1/ES1: 79.95097177911515
Initial total Benefit2/ES2: 105.95728154524456
Optimized total benefit2/ES2: 106.53112273743801
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/5eab1c66b0a24dfa93976963b865af29-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/5eab1c66b0a24dfa93976963b865af29-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2582.94 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.779531
Cbc0038I Pass   1: suminf.    0.36816 (2) obj. 2591.62 iterations 6
Cbc0038I Pass   2: suminf.    0.13219 (2) obj. 2894.35 iterations 3
Cbc0038I Pass   3: suminf.    0.05142 (1) obj. 2917.31 iterations 3
Cbc0038I Solution found of 3247.6
Cbc0038I Rounding solution of 2822.9 is better than previous of 3247.6

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 22 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from 2822.9 to 2793.97 (0.01 seconds)
Cbc0038I Round again with cutoff of 2772.87
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 2
Cbc0038I Pass   4: suminf.    0.36816 (2) obj. 2591.62 iterations 0
Cbc0038I Pass   5: suminf.    0.13268 (1) obj. 2772.87 iterations 4
Cbc0038I Pass   6: suminf.    0.13268 (1) obj. 2772.87 iterations 0
Cbc0038I Pass   7: suminf.    0.72053 (4) obj. 2772.87 iterations 7
Cbc0038I Pass   8: suminf.    0.28434 (2) obj. 2772.87 iterations 4
Cbc0038I Pass   9: suminf.    0.67878 (2) obj. 2772.87 iterations 9
Cbc0038I Pass  10: suminf.    0.33597 (1) obj. 2772.87 iterations 2
Cbc0038I Pass  11: suminf.    0.21953 (1) obj. 2728.96 iterations 3
Cbc0038I Pass  12: suminf.    1.06212 (3) obj. 2772.87 iterations 9
Cbc0038I Pass  13: suminf.    0.76206 (3) obj. 2772.87 iterations 1
Cbc0038I Pass  14: suminf.    0.35086 (2) obj. 2772.87 iterations 5
Cbc0038I Pass  15: suminf.    0.43810 (3) obj. 2672.34 iterations 5
Cbc0038I Pass  16: suminf.    0.24630 (1) obj. 2726.86 iterations 1
Cbc0038I Pass  17: suminf.    0.54254 (2) obj. 2772.87 iterations 5
Cbc0038I Pass  18: suminf.    1.52590 (4) obj. 2772.87 iterations 10
Cbc0038I Pass  19: suminf.    0.97638 (3) obj. 2772.87 iterations 3
Cbc0038I Pass  20: suminf.    0.97539 (3) obj. 2772.87 iterations 3
Cbc0038I Pass  21: suminf.    0.68046 (2) obj. 2772.87 iterations 6
Cbc0038I Pass  22: suminf.    0.68046 (2) obj. 2772.87 iterations 0
Cbc0038I Pass  23: suminf.    0.81964 (3) obj. 2730.32 iterations 5
Cbc0038I Pass  24: suminf.    0.66994 (3) obj. 2772.87 iterations 2
Cbc0038I Pass  25: suminf.    0.53412 (2) obj. 2772.87 iterations 5
Cbc0038I Pass  26: suminf.    0.53412 (2) obj. 2772.87 iterations 1
Cbc0038I Pass  27: suminf.    0.96233 (5) obj. 2772.87 iterations 13
Cbc0038I Pass  28: suminf.    0.81661 (5) obj. 2772.87 iterations 3
Cbc0038I Pass  29: suminf.    0.47652 (2) obj. 2682.05 iterations 5
Cbc0038I Pass  30: suminf.    0.14823 (1) obj. 2748.68 iterations 4
Cbc0038I Pass  31: suminf.    0.20692 (1) obj. 2772.87 iterations 2
Cbc0038I Pass  32: suminf.    0.80421 (3) obj. 2772.87 iterations 7
Cbc0038I Pass  33: suminf.    0.18854 (1) obj. 2772.87 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 13 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 2793.97 to 2716.41 (0.02 seconds)
Cbc0038I Round again with cutoff of 2689.72
Cbc0038I Reduced cost fixing fixed 28 variables on major pass 3
Cbc0038I Pass  33: suminf.    0.36816 (2) obj. 2591.62 iterations 0
Cbc0038I Pass  34: suminf.    0.35316 (1) obj. 2689.72 iterations 4
Cbc0038I Pass  35: suminf.    0.35316 (1) obj. 2689.72 iterations 0
Cbc0038I Pass  36: suminf.    0.29941 (1) obj. 2689.72 iterations 2
Cbc0038I Pass  37: suminf.    0.29941 (1) obj. 2689.72 iterations 1
Cbc0038I Pass  38: suminf.    1.40117 (4) obj. 2689.72 iterations 4
Cbc0038I Pass  39: suminf.    1.07123 (3) obj. 2689.72 iterations 1
Cbc0038I Pass  40: suminf.    0.29941 (1) obj. 2689.72 iterations 6
Cbc0038I Pass  41: suminf.    0.36816 (2) obj. 2591.62 iterations 4
Cbc0038I Pass  42: suminf.    0.35316 (1) obj. 2689.72 iterations 3
Cbc0038I Pass  43: suminf.    0.35316 (1) obj. 2689.72 iterations 0
Cbc0038I Pass  44: suminf.    0.35316 (1) obj. 2689.72 iterations 0
Cbc0038I Pass  45: suminf.    0.35316 (1) obj. 2689.72 iterations 0
Cbc0038I Pass  46: suminf.    0.96463 (3) obj. 2689.72 iterations 8
Cbc0038I Pass  47: suminf.    0.40414 (2) obj. 2689.72 iterations 6
Cbc0038I Pass  48: suminf.    0.40414 (2) obj. 2689.72 iterations 2
Cbc0038I Pass  49: suminf.    0.85975 (3) obj. 2689.72 iterations 6
Cbc0038I Pass  50: suminf.    0.80165 (4) obj. 2689.72 iterations 3
Cbc0038I Pass  51: suminf.    0.44936 (3) obj. 2632.78 iterations 4
Cbc0038I Pass  52: suminf.    0.26646 (2) obj. 2631.85 iterations 2
Cbc0038I Pass  53: suminf.    0.54257 (3) obj. 2689.72 iterations 6
Cbc0038I Pass  54: suminf.    0.29274 (2) obj. 2621.47 iterations 4
Cbc0038I Pass  55: suminf.    0.48684 (2) obj. 2689.72 iterations 3
Cbc0038I Pass  56: suminf.    0.78306 (3) obj. 2689.72 iterations 4
Cbc0038I Pass  57: suminf.    0.48313 (3) obj. 2689.72 iterations 2
Cbc0038I Pass  58: suminf.    1.01301 (3) obj. 2689.72 iterations 2
Cbc0038I Pass  59: suminf.    0.59478 (3) obj. 2689.72 iterations 1
Cbc0038I Pass  60: suminf.    1.27793 (3) obj. 2689.72 iterations 2
Cbc0038I Pass  61: suminf.    0.74747 (3) obj. 2689.72 iterations 1
Cbc0038I Pass  62: suminf.    0.44027 (4) obj. 2689.72 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 18 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 8 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 2716.41 - took 0.02 seconds
Cbc0012I Integer solution of 2716.4143 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0031I 9 added rows had average density of 24.222222
Cbc0013I At root node, 9 cuts changed objective from 2582.9419 to 2663.6608 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 33 row cuts average 32.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 106 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2716.4143 best solution, best possible 2663.6608 (0.05 seconds)
Cbc0001I Search completed - best objective 2716.41432791696, took 635 iterations and 20 nodes (0.13 seconds)
Cbc0032I Strong branching done 316 times (1439 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 61 variables fixed on reduced cost
Cuts at root node changed objective from 2582.94 to 2663.66
Probing was tried 88 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 83 times and created 189 cuts of which 0 were active after adding rounds of cuts (0.041 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 83 times and created 372 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 83 times and created 391 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2716.41432792
Enumerated nodes:               20
Total iterations:               635
Time (CPU seconds):             0.13
Time (Wallclock seconds):       0.13

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

initial land use distribution [1, 2, 1, 0, 0, 2, 1, 2, 0, 1, 0, 0, 0, 2, 0, 1, 1, 2, 0, 2, 0, 2, 2, 0, 1]
Optimized Land Use with benefits restriction: [1, 2, 0, 2, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 2, 0, 1, 2, 2, 1, 2, 2, 0]
Initial total costs: 4492.586089154284
Optimized total costs: 2716.4143279168266
Initial total benefit1/ES1: 78.7046881389632
Optimized total benefit1/ES1: 80.28626718195072
Initial total Benefit2/ES2: 87.13699617487761
Optimized total benefit2/ES2: 88.09438519017094
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/33d6f47920f4438d965ac92b8606a377-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/33d6f47920f4438d965ac92b8606a377-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2030.06 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.35811
Cbc0038I Pass   1: suminf.    0.48636 (1) obj. 2208.15 iterations 7
Cbc0038I Solution found of 2453.39
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 2453.39 to 2167.22 (0.01 seconds)
Cbc0038I Round again with cutoff of 2153.51
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.29443 (1) obj. 2110.9 iterations 3
Cbc0038I Pass   3: suminf.    0.04047 (1) obj. 2153.51 iterations 5
Cbc0038I Pass   4: suminf.    0.31293 (1) obj. 2061.17 iterations 2
Cbc0038I Pass   5: suminf.    0.97943 (4) obj. 2153.51 iterations 12
Cbc0038I Pass   6: suminf.    0.33747 (3) obj. 2153.51 iterations 6
Cbc0038I Pass   7: suminf.    0.47575 (3) obj. 2153.51 iterations 5
Cbc0038I Pass   8: suminf.    0.68420 (3) obj. 2153.51 iterations 5
Cbc0038I Pass   9: suminf.    1.09966 (4) obj. 2153.51 iterations 7
Cbc0038I Pass  10: suminf.    0.83587 (3) obj. 2153.51 iterations 6
Cbc0038I Pass  11: suminf.    1.19821 (3) obj. 2153.51 iterations 6
Cbc0038I Pass  12: suminf.    0.43794 (2) obj. 2153.51 iterations 4
Cbc0038I Pass  13: suminf.    0.75249 (3) obj. 2103.72 iterations 8
Cbc0038I Pass  14: suminf.    0.55099 (2) obj. 2153.51 iterations 6
Cbc0038I Pass  15: suminf.    0.87500 (2) obj. 2153.51 iterations 6
Cbc0038I Pass  16: suminf.    0.31293 (1) obj. 2061.17 iterations 2
Cbc0038I Pass  17: suminf.    0.04047 (1) obj. 2153.51 iterations 2
Cbc0038I Pass  18: suminf.    0.30135 (3) obj. 2153.51 iterations 9
Cbc0038I Pass  19: suminf.    0.09326 (2) obj. 2152.37 iterations 4
Cbc0038I Pass  20: suminf.    0.09897 (2) obj. 2153.51 iterations 6
Cbc0038I Pass  21: suminf.    1.65406 (4) obj. 2153.51 iterations 10
Cbc0038I Pass  22: suminf.    0.88670 (3) obj. 2153.51 iterations 1
Cbc0038I Pass  23: suminf.    0.39987 (2) obj. 2153.51 iterations 3
Cbc0038I Pass  24: suminf.    0.63258 (2) obj. 2108.2 iterations 6
Cbc0038I Pass  25: suminf.    0.41940 (2) obj. 2153.51 iterations 3
Cbc0038I Pass  26: suminf.    0.40124 (3) obj. 2153.51 iterations 5
Cbc0038I Pass  27: suminf.    0.40044 (2) obj. 2153.51 iterations 2
Cbc0038I Pass  28: suminf.    1.15449 (3) obj. 2047.46 iterations 5
Cbc0038I Pass  29: suminf.    1.34860 (4) obj. 2153.51 iterations 8
Cbc0038I Pass  30: suminf.    0.90112 (3) obj. 2153.51 iterations 2
Cbc0038I Pass  31: suminf.    0.40497 (2) obj. 2153.51 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 14 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 2167.22 - took 0.01 seconds
Cbc0012I Integer solution of 2167.2211 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 11
Cbc0013I At root node, 5 cuts changed objective from 2030.0611 to 2167.221 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 43 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 109 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective 2167.221098862486, took 88 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 42 variables fixed on reduced cost
Cuts at root node changed objective from 2030.06 to 2167.22
Probing was tried 15 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 14 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 14 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 14 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 14 times and created 109 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2167.22109886
Enumerated nodes:               0
Total iterations:               88
Time (CPU seconds):             0.03
Time (Wallclock seconds):       0.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

initial land use distribution [1, 0, 0, 2, 0, 2, 0, 2, 1, 1, 1, 1, 0, 0, 2, 2, 1, 1, 1, 0, 2, 2, 0, 2, 0]
Optimized Land Use with benefits restriction: [2, 2, 2, 0, 0, 1, 2, 1, 0, 1, 0, 0, 1, 1, 0, 2, 0, 0, 1, 0, 1, 0, 2, 0, 1]
Initial total costs: 4900.456820332853
Optimized total costs: 2167.2210988624824
Initial total benefit1/ES1: 88.38788421336992
Optimized total benefit1/ES1: 91.03929862566733
Initial total Benefit2/ES2: 84.05241324835988
Optimized total benefit2/ES2: 88.26625278157353
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/519ec060837b432ea0efb00b8e0ceb36-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/519ec060837b432ea0efb00b8e0ceb36-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3258.21 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.89889
Cbc0038I Pass   1: suminf.    0.27454 (1) obj. 3346.19 iterations 6
Cbc0038I Solution found of 3471.96
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 24 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 3450.58
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27454 (1) obj. 3346.19 iterations 0
Cbc0038I Pass   3: suminf.    0.03963 (1) obj. 3450.58 iterations 6
Cbc0038I Pass   4: suminf.    0.18328 (1) obj. 3373.09 iterations 4
Cbc0038I Pass   5: suminf.    0.93568 (5) obj. 3450.58 iterations 25
Cbc0038I Pass   6: suminf.    0.42728 (1) obj. 3439.24 iterations 7
Cbc0038I Pass   7: suminf.    0.52487 (2) obj. 3450.58 iterations 7
Cbc0038I Pass   8: suminf.    1.17182 (3) obj. 3357.6 iterations 11
Cbc0038I Pass   9: suminf.    0.46527 (1) obj. 3443.3 iterations 9
Cbc0038I Pass  10: suminf.    0.48492 (2) obj. 3450.58 iterations 10
Cbc0038I Pass  11: suminf.    0.88057 (3) obj. 3340.35 iterations 15
Cbc0038I Pass  12: suminf.    1.35034 (5) obj. 3450.58 iterations 11
Cbc0038I Pass  13: suminf.    0.50601 (4) obj. 3450.58 iterations 10
Cbc0038I Pass  14: suminf.    0.79464 (3) obj. 3450.58 iterations 7
Cbc0038I Pass  15: suminf.    0.29727 (1) obj. 3450.58 iterations 2
Cbc0038I Pass  16: suminf.    0.34153 (1) obj. 3430.31 iterations 3
Cbc0038I Pass  17: suminf.    0.63008 (5) obj. 3450.58 iterations 13
Cbc0038I Pass  18: suminf.    0.53160 (2) obj. 3450.58 iterations 7
Cbc0038I Pass  19: suminf.    0.20725 (2) obj. 3450.58 iterations 11
Cbc0038I Pass  20: suminf.    0.85259 (3) obj. 3352.67 iterations 8
Cbc0038I Pass  21: suminf.    0.32196 (1) obj. 3425.53 iterations 4
Cbc0038I Pass  22: suminf.    0.26728 (1) obj. 3450.58 iterations 3
Cbc0038I Pass  23: suminf.    1.11950 (4) obj. 3450.58 iterations 13
Cbc0038I Pass  24: suminf.    0.39317 (2) obj. 3450.58 iterations 4
Cbc0038I Pass  25: suminf.    1.62189 (5) obj. 3450.58 iterations 10
Cbc0038I Pass  26: suminf.    0.44549 (3) obj. 3450.58 iterations 8
Cbc0038I Pass  27: suminf.    1.19345 (3) obj. 3399.21 iterations 11
Cbc0038I Pass  28: suminf.    0.43928 (4) obj. 3450.58 iterations 10
Cbc0038I Pass  29: suminf.    0.21696 (3) obj. 3450.58 iterations 4
Cbc0038I Pass  30: suminf.    0.85686 (3) obj. 3450.58 iterations 6
Cbc0038I Pass  31: suminf.    0.39846 (3) obj. 3450.58 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 8 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 3471.96 to 3436.41 (0.02 seconds)
Cbc0038I Round again with cutoff of 3400.77
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.27454 (1) obj. 3346.19 iterations 0
Cbc0038I Pass  32: suminf.    0.13198 (1) obj. 3400.77 iterations 6
Cbc0038I Pass  33: suminf.    0.18328 (1) obj. 3373.09 iterations 4
Cbc0038I Pass  34: suminf.    0.56018 (3) obj. 3400.77 iterations 8
Cbc0038I Pass  35: suminf.    0.78243 (4) obj. 3400.77 iterations 16
Cbc0038I Pass  36: suminf.    0.39266 (2) obj. 3400.77 iterations 11
Cbc0038I Pass  37: suminf.    0.85259 (3) obj. 3352.67 iterations 9
Cbc0038I Pass  38: suminf.    0.52996 (3) obj. 3400.77 iterations 5
Cbc0038I Pass  39: suminf.    0.95898 (4) obj. 3400.77 iterations 18
Cbc0038I Pass  40: suminf.    0.81939 (4) obj. 3400.77 iterations 2
Cbc0038I Pass  41: suminf.    0.71608 (3) obj. 3400.77 iterations 8
Cbc0038I Pass  42: suminf.    0.71608 (3) obj. 3400.77 iterations 1
Cbc0038I Pass  43: suminf.    0.47455 (3) obj. 3369.91 iterations 7
Cbc0038I Pass  44: suminf.    0.46569 (1) obj. 3375.93 iterations 3
Cbc0038I Pass  45: suminf.    0.46282 (2) obj. 3400.77 iterations 6
Cbc0038I Pass  46: suminf.    1.08120 (3) obj. 3352.01 iterations 9
Cbc0038I Pass  47: suminf.    0.91406 (4) obj. 3400.77 iterations 12
Cbc0038I Pass  48: suminf.    0.39266 (2) obj. 3400.77 iterations 9
Cbc0038I Pass  49: suminf.    0.85259 (3) obj. 3352.67 iterations 8
Cbc0038I Pass  50: suminf.    0.52996 (3) obj. 3400.77 iterations 5
Cbc0038I Pass  51: suminf.    0.65975 (4) obj. 3400.77 iterations 15
Cbc0038I Pass  52: suminf.    0.48174 (1) obj. 3379.53 iterations 9
Cbc0038I Pass  53: suminf.    0.47190 (1) obj. 3400.77 iterations 3
Cbc0038I Pass  54: suminf.    0.99909 (4) obj. 3400.77 iterations 16
Cbc0038I Pass  55: suminf.    0.81939 (4) obj. 3400.77 iterations 7
Cbc0038I Pass  56: suminf.    0.71608 (3) obj. 3400.77 iterations 8
Cbc0038I Pass  57: suminf.    0.71608 (3) obj. 3400.77 iterations 1
Cbc0038I Pass  58: suminf.    0.47455 (3) obj. 3369.91 iterations 7
Cbc0038I Pass  59: suminf.    0.46569 (1) obj. 3375.93 iterations 3
Cbc0038I Pass  60: suminf.    0.46282 (2) obj. 3400.77 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 17 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 7 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 3436.41 - took 0.02 seconds
Cbc0012I Integer solution of 3436.4077 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 3 columns
Cbc0031I 7 added rows had average density of 23
Cbc0013I At root node, 7 cuts changed objective from 3258.2072 to 3386.1173 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 25 row cuts average 42.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 66 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3436.4077 best solution, best possible 3386.1173 (0.04 seconds)
Cbc0016I Integer solution of 3406.179 found by strong branching after 291 iterations and 9 nodes (0.08 seconds)
Cbc0001I Search completed - best objective 3406.178958740365, took 311 iterations and 10 nodes (0.09 seconds)
Cbc0032I Strong branching done 126 times (430 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 54 variables fixed on reduced cost
Cuts at root node changed objective from 3258.21 to 3386.12
Probing was tried 57 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 54 times and created 117 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 54 times and created 178 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 54 times and created 256 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                3406.17895874
Enumerated nodes:               10
Total iterations:               311
Time (CPU seconds):             0.09
Time (Wallclock seconds):       0.09

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

initial land use distribution [2, 2, 2, 1, 0, 1, 1, 1, 1, 1, 1, 0, 2, 1, 2, 0, 2, 2, 0, 2, 1, 0, 2, 1, 0]
Optimized Land Use with benefits restriction: [1, 2, 1, 2, 1, 2, 2, 2, 1, 0, 1, 0, 1, 2, 1, 2, 0, 1, 0, 0, 0, 2, 2, 2, 1]
Initial total costs: 7096.9117590776605
Optimized total costs: 3406.1789587405533
Initial total benefit1/ES1: 95.22181628046636
Optimized total benefit1/ES1: 95.37397950791039
Initial total Benefit2/ES2: 103.0060724122045
Optimized total benefit2/ES2: 104.0495909345816
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/6cc9ac1b962a41a280938cc3f6c5061e-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/6cc9ac1b962a41a280938cc3f6c5061e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1780.97 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.67519
Cbc0038I Pass   1: suminf.    0.00380 (1) obj. 1827.65 iterations 3
Cbc0038I Solution found of 1829.07
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 24 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 1824.26
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.09658 (3) obj. 1824.26 iterations 1
Cbc0038I Pass   3: suminf.    0.08869 (3) obj. 1824.26 iterations 2
Cbc0038I Pass   4: suminf.    0.69454 (3) obj. 1824.26 iterations 3
Cbc0038I Pass   5: suminf.    0.08869 (3) obj. 1824.26 iterations 2
Cbc0038I Pass   6: suminf.    0.51554 (2) obj. 1810.28 iterations 3
Cbc0038I Pass   7: suminf.    0.51554 (2) obj. 1810.28 iterations 0
Cbc0038I Pass   8: suminf.    0.08869 (3) obj. 1824.26 iterations 3
Cbc0038I Pass   9: suminf.    0.84177 (3) obj. 1824.26 iterations 7
Cbc0038I Pass  10: suminf.    1.17235 (3) obj. 1824.26 iterations 4
Cbc0038I Pass  11: suminf.    0.69217 (3) obj. 1824.26 iterations 2
Cbc0038I Pass  12: suminf.    0.48172 (3) obj. 1824.26 iterations 2
Cbc0038I Pass  13: suminf.    0.44299 (3) obj. 1824.26 iterations 3
Cbc0038I Pass  14: suminf.    0.45593 (2) obj. 1824.26 iterations 3
Cbc0038I Pass  15: suminf.    0.23212 (3) obj. 1824.26 iterations 2
Cbc0038I Pass  16: suminf.    0.75115 (3) obj. 1824.26 iterations 3
Cbc0038I Pass  17: suminf.    1.14020 (3) obj. 1802.76 iterations 5
Cbc0038I Pass  18: suminf.    0.76082 (3) obj. 1824.26 iterations 2
Cbc0038I Pass  19: suminf.    0.67769 (4) obj. 1824.26 iterations 2
Cbc0038I Pass  20: suminf.    0.67771 (4) obj. 1824.26 iterations 2
Cbc0038I Pass  21: suminf.    0.98150 (3) obj. 1800.73 iterations 4
Cbc0038I Pass  22: suminf.    0.81991 (3) obj. 1824.26 iterations 2
Cbc0038I Pass  23: suminf.    0.81991 (3) obj. 1824.26 iterations 0
Cbc0038I Pass  24: suminf.    0.76082 (3) obj. 1824.26 iterations 2
Cbc0038I Pass  25: suminf.    1.20580 (3) obj. 1824.26 iterations 2
Cbc0038I Pass  26: suminf.    0.76082 (3) obj. 1824.26 iterations 2
Cbc0038I Pass  27: suminf.    0.67769 (4) obj. 1824.26 iterations 2
Cbc0038I Pass  28: suminf.    0.67771 (4) obj. 1824.26 iterations 2
Cbc0038I Pass  29: suminf.    0.98150 (3) obj. 1800.73 iterations 4
Cbc0038I Pass  30: suminf.    0.81991 (3) obj. 1824.26 iterations 2
Cbc0038I Pass  31: suminf.    0.81991 (3) obj. 1824.26 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 19 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 1829.07 - took 0.01 seconds
Cbc0012I Integer solution of 1829.0651 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0031I 1 added rows had average density of 4
Cbc0013I At root node, 13 cuts changed objective from 1780.9745 to 1829.0651 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 7.6 elements, 5 column cuts (5 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective 1829.06506417859, took 4 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 42 variables fixed on reduced cost
Cuts at root node changed objective from 1780.97 to 1829.07
Probing was tried 1 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1829.06506418
Enumerated nodes:               0
Total iterations:               4
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

initial land use distribution [0, 0, 1, 2, 1, 1, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 1, 2, 1]
Optimized Land Use with benefits restriction: [0, 1, 2, 1, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 2, 1, 0, 0, 0, 1, 0, 0, 0]
Initial total costs: 4002.5878364666296
Optimized total costs: 1829.0650641785542
Initial total benefit1/ES1: 77.08307941010258
Optimized total benefit1/ES1: 77.12215701739004
Initial total Benefit2/ES2: 50.284747573699704
Optimized total benefit2/ES2: 57.12086706517215
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/5d687117a05548f598bc8792f5e4d31d-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/5d687117a05548f598bc8792f5e4d31d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2973.54 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.30877
Cbc0038I Pass   1: suminf.    0.49115 (2) obj. 3052.13 iterations 7
Cbc0038I Pass   2: suminf.    0.22501 (2) obj. 3231.53 iterations 5
Cbc0038I Pass   3: suminf.    0.09004 (1) obj. 3257.78 iterations 5
Cbc0038I Solution found of 3742.52
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 21 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound improved solution from 3742.52 to 3337.71 (0.01 seconds)
Cbc0038I Round again with cutoff of 3301.29
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   4: suminf.    0.49115 (2) obj. 3052.13 iterations 0
Cbc0038I Pass   5: suminf.    0.22501 (2) obj. 3231.53 iterations 7
Cbc0038I Pass   6: suminf.    0.09004 (1) obj. 3257.78 iterations 5
Cbc0038I Pass   7: suminf.    0.17172 (1) obj. 3301.29 iterations 4
Cbc0038I Pass   8: suminf.    0.73513 (3) obj. 3301.29 iterations 13
Cbc0038I Pass   9: suminf.    0.64985 (3) obj. 3301.29 iterations 6
Cbc0038I Solution found of 3190
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 18 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 3146.71
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 3
Cbc0038I Pass  10: suminf.    0.49115 (2) obj. 3052.13 iterations 0
Cbc0038I Pass  11: suminf.    0.62601 (2) obj. 3146.71 iterations 5
Cbc0038I Pass  12: suminf.    0.53160 (2) obj. 3146.71 iterations 3
Cbc0038I Pass  13: suminf.    0.46110 (2) obj. 3146.71 iterations 6
Cbc0038I Pass  14: suminf.    0.08498 (1) obj. 3107.08 iterations 8
Cbc0038I Pass  15: suminf.    0.14996 (1) obj. 3146.71 iterations 3
Cbc0038I Pass  16: suminf.    0.08498 (1) obj. 3107.08 iterations 3
Cbc0038I Pass  17: suminf.    0.94278 (4) obj. 3146.71 iterations 11
Cbc0038I Pass  18: suminf.    0.94278 (4) obj. 3146.71 iterations 4
Cbc0038I Pass  19: suminf.    0.21019 (1) obj. 3062.91 iterations 8
Cbc0038I Pass  20: suminf.    0.34758 (1) obj. 3146.71 iterations 3
Cbc0038I Pass  21: suminf.    0.67287 (4) obj. 3146.71 iterations 13
Cbc0038I Pass  22: suminf.    0.48722 (4) obj. 3146.71 iterations 8
Cbc0038I Pass  23: suminf.    0.39533 (2) obj. 3146.71 iterations 11
Cbc0038I Pass  24: suminf.    0.39533 (2) obj. 3146.71 iterations 0
Cbc0038I Pass  25: suminf.    0.41103 (1) obj. 3146.71 iterations 2
Cbc0038I Pass  26: suminf.    0.23449 (1) obj. 3054.47 iterations 2
Cbc0038I Pass  27: suminf.    0.41103 (1) obj. 3146.71 iterations 2
Cbc0038I Pass  28: suminf.    0.70326 (3) obj. 3146.71 iterations 7
Cbc0038I Pass  29: suminf.    0.70326 (3) obj. 3146.71 iterations 0
Cbc0038I Pass  30: suminf.    0.62551 (3) obj. 3042.23 iterations 6
Cbc0038I Pass  31: suminf.    0.23316 (1) obj. 3079.86 iterations 4
Cbc0038I Pass  32: suminf.    0.34277 (1) obj. 3146.71 iterations 3
Cbc0038I Pass  33: suminf.    0.27091 (2) obj. 3146.71 iterations 6
Cbc0038I Pass  34: suminf.    0.27091 (2) obj. 3146.71 iterations 0
Cbc0038I Pass  35: suminf.    0.67947 (2) obj. 3146.71 iterations 6
Cbc0038I Pass  36: suminf.    0.42764 (1) obj. 3146.71 iterations 3
Cbc0038I Pass  37: suminf.    0.23316 (1) obj. 3079.86 iterations 4
Cbc0038I Pass  38: suminf.    0.34277 (1) obj. 3146.71 iterations 3
Cbc0038I Pass  39: suminf.    1.11791 (3) obj. 3146.71 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 14 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 15 columns
Cbc0038I Mini branch and bound improved solution from 3190 to 3146.77 (0.02 seconds)
Cbc0038I Round again with cutoff of 3094.76
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 4
Cbc0038I Pass  39: suminf.    0.51058 (2) obj. 3008.25 iterations 5
Cbc0038I Pass  40: suminf.    0.18497 (2) obj. 3094.76 iterations 6
Cbc0038I Pass  41: suminf.    0.12712 (2) obj. 3094.76 iterations 4
Cbc0038I Pass  42: suminf.    0.45806 (2) obj. 3094.76 iterations 6
Cbc0038I Pass  43: suminf.    0.45806 (2) obj. 3094.76 iterations 1
Cbc0038I Pass  44: suminf.    0.23017 (2) obj. 3094.76 iterations 3
Cbc0038I Pass  45: suminf.    0.30717 (1) obj. 3090.75 iterations 11
Cbc0038I Pass  46: suminf.    0.30717 (1) obj. 3090.75 iterations 2
Cbc0038I Pass  47: suminf.    0.31485 (1) obj. 3094.76 iterations 2
Cbc0038I Pass  48: suminf.    0.56771 (2) obj. 3094.76 iterations 4
Cbc0038I Pass  49: suminf.    1.05000 (3) obj. 3094.76 iterations 10
Cbc0038I Pass  50: suminf.    0.35870 (2) obj. 3094.76 iterations 3
Cbc0038I Pass  51: suminf.    0.25093 (1) obj. 3084.09 iterations 3
Cbc0038I Pass  52: suminf.    0.27134 (1) obj. 3094.76 iterations 2
Cbc0038I Pass  53: suminf.    1.37577 (4) obj. 3094.76 iterations 8
Cbc0038I Pass  54: suminf.    1.07119 (3) obj. 3094.76 iterations 4
Cbc0038I Pass  55: suminf.    0.35061 (2) obj. 3094.76 iterations 5
Cbc0038I Pass  56: suminf.    0.23017 (2) obj. 3094.76 iterations 4
Cbc0038I Pass  57: suminf.    0.45806 (2) obj. 3094.76 iterations 3
Cbc0038I Pass  58: suminf.    1.07053 (4) obj. 3094.76 iterations 5
Cbc0038I Pass  59: suminf.    0.92140 (4) obj. 3094.76 iterations 5
Cbc0038I Pass  60: suminf.    0.45806 (2) obj. 3094.76 iterations 8
Cbc0038I Pass  61: suminf.    0.89800 (2) obj. 3094.76 iterations 3
Cbc0038I Pass  62: suminf.    0.89800 (2) obj. 3094.76 iterations 0
Cbc0038I Pass  63: suminf.    0.71663 (2) obj. 3024.34 iterations 5
Cbc0038I Pass  64: suminf.    0.52339 (2) obj. 3094.76 iterations 2
Cbc0038I Pass  65: suminf.    0.45806 (2) obj. 3094.76 iterations 10
Cbc0038I Pass  66: suminf.    0.23017 (2) obj. 3094.76 iterations 3
Cbc0038I Pass  67: suminf.    0.45806 (2) obj. 3094.76 iterations 3
Cbc0038I Pass  68: suminf.    0.52227 (2) obj. 3094.76 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 13 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 3146.77 - took 0.02 seconds
Cbc0012I Integer solution of 3146.77 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 5 columns
Cbc0031I 7 added rows had average density of 22.571429
Cbc0013I At root node, 7 cuts changed objective from 2973.5375 to 3091.5209 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 35 row cuts average 32.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 104 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3146.77 best solution, best possible 3091.5209 (0.05 seconds)
Cbc0012I Integer solution of 3108.058 found by DiveCoefficient after 286 iterations and 7 nodes (0.07 seconds)
Cbc0001I Search completed - best objective 3108.05802465283, took 311 iterations and 10 nodes (0.07 seconds)
Cbc0032I Strong branching done 124 times (426 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 51 variables fixed on reduced cost
Cuts at root node changed objective from 2973.54 to 3091.52
Probing was tried 41 times and created 31 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 36 times and created 69 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 36 times and created 138 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 36 times and created 307 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                3108.05802465
Enumerated nodes:               10
Total iterations:               311
Time (CPU seconds):             0.07
Time (Wallclock seconds):       0.08

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

initial land use distribution [2, 2, 0, 1, 1, 1, 1, 2, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0, 0, 1, 2, 0, 1, 0, 0]
Optimized Land Use with benefits restriction: [1, 1, 1, 1, 1, 0, 1, 0, 2, 2, 0, 0, 1, 2, 0, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0]
Initial total costs: 5413.567547592711
Optimized total costs: 3108.0580246528084
Initial total benefit1/ES1: 87.11281487582441
Optimized total benefit1/ES1: 87.15251731081854
Initial total Benefit2/ES2: 50.061894149642896
Optimized total benefit2/ES2: 51.374637937723826
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/36da898cadf24177b90a91865c6f9521-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/36da898cadf24177b90a91865c6f9521-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2887.39 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.71214 (2) obj. 2921.61 iterations 7
Cbc0038I Solution found of 3479.66
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound improved solution from 3479.66 to 3273.54 (0.01 seconds)
Cbc0038I Round again with cutoff of 3234.93
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.71214 (2) obj. 2921.61 iterations 0
Cbc0038I Pass   3: suminf.    0.48027 (1) obj. 3234.93 iterations 11
Cbc0038I Pass   4: suminf.    0.22695 (1) obj. 3115.64 iterations 2
Cbc0038I Pass   5: suminf.    0.50633 (4) obj. 3234.93 iterations 14
Cbc0038I Pass   6: suminf.    0.14079 (2) obj. 3234.93 iterations 9
Cbc0038I Pass   7: suminf.    0.21148 (3) obj. 3234.93 iterations 10
Cbc0038I Pass   8: suminf.    0.20935 (2) obj. 3234.93 iterations 9
Cbc0038I Pass   9: suminf.    0.20935 (2) obj. 3234.93 iterations 0
Cbc0038I Pass  10: suminf.    0.41632 (1) obj. 3234.93 iterations 4
Cbc0038I Pass  11: suminf.    0.40965 (1) obj. 3231.69 iterations 3
Cbc0038I Pass  12: suminf.    0.41632 (1) obj. 3234.93 iterations 3
Cbc0038I Pass  13: suminf.    1.11467 (5) obj. 3234.93 iterations 12
Cbc0038I Pass  14: suminf.    0.41201 (3) obj. 3234.93 iterations 7
Cbc0038I Pass  15: suminf.    0.50284 (2) obj. 3234.93 iterations 8
Cbc0038I Pass  16: suminf.    0.92408 (4) obj. 3234.93 iterations 7
Cbc0038I Pass  17: suminf.    0.72215 (3) obj. 3234.93 iterations 5
Cbc0038I Pass  18: suminf.    0.21133 (2) obj. 3234.93 iterations 9
Cbc0038I Pass  19: suminf.    0.18258 (3) obj. 3234.93 iterations 2
Cbc0038I Pass  20: suminf.    1.21644 (3) obj. 3234.93 iterations 6
Cbc0038I Pass  21: suminf.    0.61316 (3) obj. 3234.93 iterations 1
Cbc0038I Pass  22: suminf.    0.73370 (3) obj. 3234.93 iterations 4
Cbc0038I Pass  23: suminf.    0.32769 (1) obj. 3145 iterations 5
Cbc0038I Pass  24: suminf.    0.32484 (1) obj. 3234.93 iterations 7
Cbc0038I Pass  25: suminf.    0.43027 (1) obj. 3119.61 iterations 1
Cbc0038I Pass  26: suminf.    1.75865 (4) obj. 3234.93 iterations 12
Cbc0038I Pass  27: suminf.    0.30789 (2) obj. 3234.93 iterations 5
Cbc0038I Pass  28: suminf.    0.30789 (2) obj. 3234.93 iterations 0
Cbc0038I Pass  29: suminf.    0.47763 (3) obj. 3234.93 iterations 6
Cbc0038I Pass  30: suminf.    0.54941 (2) obj. 3234.93 iterations 3
Cbc0038I Pass  31: suminf.    0.29275 (1) obj. 3160.05 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 7 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 3273.54 to 3116.91 (0.02 seconds)
Cbc0038I Round again with cutoff of 3071.01
Cbc0038I Reduced cost fixing fixed 18 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.71214 (2) obj. 2921.61 iterations 0
Cbc0038I Pass  32: suminf.    0.62219 (2) obj. 3071.01 iterations 11
Cbc0038I Pass  33: suminf.    0.12011 (1) obj. 3051.54 iterations 3
Cbc0038I Pass  34: suminf.    0.88629 (3) obj. 3071.01 iterations 9
Cbc0038I Pass  35: suminf.    0.54697 (4) obj. 3071.01 iterations 3
Cbc0038I Pass  36: suminf.    0.16237 (1) obj. 2976.36 iterations 11
Cbc0038I Pass  37: suminf.    0.16237 (1) obj. 2976.36 iterations 0
Cbc0038I Pass  38: suminf.    0.49871 (1) obj. 3071.01 iterations 5
Cbc0038I Pass  39: suminf.    0.43438 (1) obj. 3040.71 iterations 1
Cbc0038I Pass  40: suminf.    0.16878 (3) obj. 3071.01 iterations 7
Cbc0038I Pass  41: suminf.    0.16878 (3) obj. 3071.01 iterations 0
Cbc0038I Pass  42: suminf.    0.96680 (3) obj. 3071.01 iterations 6
Cbc0038I Pass  43: suminf.    1.28253 (4) obj. 3071.01 iterations 9
Cbc0038I Pass  44: suminf.    0.80376 (3) obj. 3071.01 iterations 10
Cbc0038I Pass  45: suminf.    0.86640 (3) obj. 3071.01 iterations 6
Cbc0038I Pass  46: suminf.    0.79301 (3) obj. 3071.01 iterations 10
Cbc0038I Pass  47: suminf.    0.44002 (4) obj. 3071.01 iterations 9
Cbc0038I Pass  48: suminf.    0.60580 (3) obj. 3071.01 iterations 11
Cbc0038I Pass  49: suminf.    0.21683 (1) obj. 3043.47 iterations 12
Cbc0038I Pass  50: suminf.    0.49871 (1) obj. 3071.01 iterations 5
Cbc0038I Pass  51: suminf.    0.43438 (1) obj. 3040.71 iterations 1
Cbc0038I Pass  52: suminf.    0.89095 (3) obj. 3071.01 iterations 8
Cbc0038I Pass  53: suminf.    0.77491 (2) obj. 3071.01 iterations 3
Cbc0038I Pass  54: suminf.    0.85235 (2) obj. 2952.33 iterations 11
Cbc0038I Pass  55: suminf.    0.48478 (3) obj. 3071.01 iterations 8
Cbc0038I Pass  56: suminf.    0.53822 (2) obj. 3071.01 iterations 5
Cbc0038I Pass  57: suminf.    0.43438 (1) obj. 3040.71 iterations 5
Cbc0038I Pass  58: suminf.    0.49871 (1) obj. 3071.01 iterations 1
Cbc0038I Pass  59: suminf.    0.43438 (1) obj. 3040.71 iterations 1
Cbc0038I Pass  60: suminf.    1.39101 (4) obj. 3071.01 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 14 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 3116.91 - took 0.02 seconds
Cbc0012I Integer solution of 3116.9113 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 4 columns
Cbc0031I 7 added rows had average density of 29.142857
Cbc0013I At root node, 7 cuts changed objective from 2887.394 to 3044.1589 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 39 row cuts average 33.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 79 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3116.9113 best solution, best possible 3044.1589 (0.05 seconds)
Cbc0012I Integer solution of 3106.6592 found by DiveCoefficient after 219 iterations and 5 nodes (0.07 seconds)
Cbc0001I Search completed - best objective 3106.659240608032, took 697 iterations and 28 nodes (0.13 seconds)
Cbc0032I Strong branching done 328 times (1294 iterations), fathomed 6 nodes and fixed 5 variables
Cbc0035I Maximum depth 10, 85 variables fixed on reduced cost
Cuts at root node changed objective from 2887.39 to 3044.16
Probing was tried 88 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 84 times and created 152 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 84 times and created 334 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 84 times and created 346 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                3106.65924061
Enumerated nodes:               28
Total iterations:               697
Time (CPU seconds):             0.13
Time (Wallclock seconds):       0.13

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.13

initial land use distribution [0, 2, 2, 1, 2, 2, 0, 1, 1, 2, 2, 1, 0, 2, 1, 2, 2, 0, 0, 1, 2, 1, 2, 2, 2]
Optimized Land Use with benefits restriction: [2, 0, 2, 2, 2, 2, 1, 0, 1, 2, 2, 1, 0, 2, 0, 1, 0, 2, 0, 0, 0, 2, 1, 1, 2]
Initial total costs: 6588.524568041212
Optimized total costs: 3106.6592406079453
Initial total benefit1/ES1: 80.99211793221815
Optimized total benefit1/ES1: 80.9931720758353
Initial total Benefit2/ES2: 127.35631440457585
Optimized total benefit2/ES2: 129.20313609114723
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/657b43eba6bb4a97a4cab883259e38d0-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/657b43eba6bb4a97a4cab883259e38d0-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1706.14 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.24152
Cbc0038I Pass   1: suminf.    0.09418 (1) obj. 1902.97 iterations 15
Cbc0038I Solution found of 2436.57
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 2436.57 to 2142.09 (0.01 seconds)
Cbc0038I Round again with cutoff of 2098.49
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.09418 (1) obj. 1902.97 iterations 0
Cbc0038I Pass   3: suminf.    0.42609 (1) obj. 2098.49 iterations 2
Cbc0038I Pass   4: suminf.    1.27416 (4) obj. 2098.49 iterations 11
Cbc0038I Pass   5: suminf.    0.84327 (4) obj. 2098.49 iterations 4
Cbc0038I Pass   6: suminf.    0.32205 (3) obj. 2098.49 iterations 6
Cbc0038I Pass   7: suminf.    0.32205 (3) obj. 2098.49 iterations 1
Cbc0038I Pass   8: suminf.    0.86527 (3) obj. 2098.49 iterations 7
Cbc0038I Pass   9: suminf.    0.78466 (3) obj. 2098.49 iterations 1
Cbc0038I Pass  10: suminf.    0.56898 (3) obj. 2098.49 iterations 8
Cbc0038I Pass  11: suminf.    0.56898 (3) obj. 2098.49 iterations 0
Cbc0038I Pass  12: suminf.    1.04523 (4) obj. 2098.49 iterations 11
Cbc0038I Pass  13: suminf.    0.67591 (3) obj. 2098.49 iterations 5
Cbc0038I Pass  14: suminf.    0.98835 (3) obj. 2098.49 iterations 7
Cbc0038I Pass  15: suminf.    0.77776 (3) obj. 2098.49 iterations 3
Cbc0038I Pass  16: suminf.    0.89056 (4) obj. 2098.49 iterations 21
Cbc0038I Pass  17: suminf.    0.48132 (3) obj. 2098.49 iterations 3
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. 2002.73 iterations 8
Cbc0038I Solution found of 2002.73
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 14 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 7 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 2002.73 to 1835.14 (0.01 seconds)
Cbc0038I Round again with cutoff of 1809.34
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 3
Cbc0038I Pass  19: suminf.    0.35281 (3) obj. 1809.34 iterations 4
Cbc0038I Pass  20: suminf.    1.20732 (3) obj. 1809.34 iterations 8
Cbc0038I Pass  21: suminf.    0.79112 (3) obj. 1809.34 iterations 5
Cbc0038I Pass  22: suminf.    0.74466 (3) obj. 1743.19 iterations 5
Cbc0038I Pass  23: suminf.    0.77298 (3) obj. 1809.34 iterations 10
Cbc0038I Pass  24: suminf.    0.77298 (3) obj. 1809.34 iterations 0
Cbc0038I Pass  25: suminf.    0.74466 (3) obj. 1743.19 iterations 10
Cbc0038I Pass  26: suminf.    0.53493 (3) obj. 1809.34 iterations 10
Cbc0038I Pass  27: suminf.    0.35281 (3) obj. 1809.34 iterations 3
Cbc0038I Pass  28: suminf.    1.20732 (3) obj. 1809.34 iterations 7
Cbc0038I Pass  29: suminf.    0.79112 (3) obj. 1809.34 iterations 5
Cbc0038I Pass  30: suminf.    0.74466 (3) obj. 1743.19 iterations 5
Cbc0038I Pass  31: suminf.    0.77298 (3) obj. 1809.34 iterations 9
Cbc0038I Pass  32: suminf.    0.77298 (3) obj. 1809.34 iterations 0
Cbc0038I Pass  33: suminf.    0.74466 (3) obj. 1743.19 iterations 10
Cbc0038I Pass  34: suminf.    1.16194 (4) obj. 1809.34 iterations 14
Cbc0038I Pass  35: suminf.    1.16194 (4) obj. 1809.34 iterations 4
Cbc0038I Pass  36: suminf.    0.88469 (4) obj. 1809.34 iterations 12
Cbc0038I Pass  37: suminf.    0.88469 (4) obj. 1809.34 iterations 5
Cbc0038I Pass  38: suminf.    1.04570 (3) obj. 1809.34 iterations 7
Cbc0038I Pass  39: suminf.    1.04570 (3) obj. 1809.34 iterations 0
Cbc0038I Pass  40: suminf.    1.16194 (4) obj. 1809.34 iterations 6
Cbc0038I Pass  41: suminf.    1.16194 (4) obj. 1809.34 iterations 7
Cbc0038I Pass  42: suminf.    0.88469 (4) obj. 1809.34 iterations 12
Cbc0038I Pass  43: suminf.    0.88469 (4) obj. 1809.34 iterations 5
Cbc0038I Pass  44: suminf.    1.04570 (3) obj. 1809.34 iterations 7
Cbc0038I Pass  45: suminf.    1.04570 (3) obj. 1809.34 iterations 0
Cbc0038I Pass  46: suminf.    1.16194 (4) obj. 1809.34 iterations 6
Cbc0038I Pass  47: suminf.    1.16194 (4) obj. 1809.34 iterations 7
Cbc0038I Pass  48: suminf.    0.88469 (4) obj. 1809.34 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 22 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 1835.14 - took 0.02 seconds
Cbc0012I Integer solution of 1835.1417 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 12.5
Cbc0013I At root node, 4 cuts changed objective from 1706.1378 to 1835.0153 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 11 row cuts average 31.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 46 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective 1835.14165779403, took 37 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 44 variables fixed on reduced cost
Cuts at root node changed objective from 1706.14 to 1835.02
Probing was tried 4 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 3 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 46 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1835.14165779
Enumerated nodes:               0
Total iterations:               37
Time (CPU seconds):             0.03
Time (Wallclock seconds):       0.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

initial land use distribution [2, 1, 0, 1, 2, 2, 2, 1, 1, 0, 0, 1, 0, 2, 0, 1, 1, 1, 1, 0, 1, 2, 0, 0, 0]
Optimized Land Use with benefits restriction: [0, 2, 2, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 0, 0, 2, 0, 1, 2]
Initial total costs: 5267.213354995553
Optimized total costs: 1835.1416577941095
Initial total benefit1/ES1: 99.99801840640441
Optimized total benefit1/ES1: 100.07821642390651
Initial total Benefit2/ES2: 69.2765242789679
Optimized total benefit2/ES2: 73.9660375079347
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/2f5dc82e1acf424b86eaf0b3ff77bb38-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/2f5dc82e1acf424b86eaf0b3ff77bb38-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4311.86 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.09141
Cbc0038I Solution found of 4493.52
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 24 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 4475.36
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.04520 (1) obj. 4475.36 iterations 14
Cbc0038I Pass   2: suminf.    0.14738 (1) obj. 4434.3 iterations 4
Cbc0038I Pass   3: suminf.    1.22732 (4) obj. 4475.36 iterations 16
Cbc0038I Pass   4: suminf.    0.14573 (1) obj. 4462.02 iterations 8
Cbc0038I Pass   5: suminf.    0.08354 (1) obj. 4475.36 iterations 5
Cbc0038I Pass   6: suminf.    0.12961 (1) obj. 4453.47 iterations 4
Cbc0038I Pass   7: suminf.    1.19131 (4) obj. 4475.36 iterations 8
Cbc0038I Pass   8: suminf.    0.93365 (3) obj. 4475.36 iterations 6
Cbc0038I Pass   9: suminf.    1.29300 (3) obj. 4475.36 iterations 6
Cbc0038I Pass  10: suminf.    1.17644 (3) obj. 4475.36 iterations 5
Cbc0038I Pass  11: suminf.    0.77370 (4) obj. 4475.36 iterations 9
Cbc0038I Pass  12: suminf.    0.36234 (2) obj. 4475.36 iterations 8
Cbc0038I Pass  13: suminf.    0.52714 (3) obj. 4475.36 iterations 6
Cbc0038I Pass  14: suminf.    0.59812 (4) obj. 4475.36 iterations 9
Cbc0038I Pass  15: suminf.    1.94896 (5) obj. 4475.36 iterations 18
Cbc0038I Pass  16: suminf.    0.56942 (3) obj. 4475.36 iterations 11
Cbc0038I Pass  17: suminf.    0.29584 (3) obj. 4475.36 iterations 11
Cbc0038I Pass  18: suminf.    1.05791 (4) obj. 4475.36 iterations 6
Cbc0038I Pass  19: suminf.    0.39268 (2) obj. 4475.36 iterations 2
Cbc0038I Pass  20: suminf.    0.91276 (4) obj. 4475.36 iterations 11
Cbc0038I Pass  21: suminf.    0.53325 (3) obj. 4475.36 iterations 9
Cbc0038I Pass  22: suminf.    1.27123 (4) obj. 4475.36 iterations 10
Cbc0038I Pass  23: suminf.    0.88640 (4) obj. 4475.36 iterations 3
Cbc0038I Pass  24: suminf.    0.38713 (1) obj. 4337.86 iterations 9
Cbc0038I Pass  25: suminf.    0.04520 (1) obj. 4475.36 iterations 5
Cbc0038I Pass  26: suminf.    0.14738 (1) obj. 4434.3 iterations 4
Cbc0038I Pass  27: suminf.    0.52371 (4) obj. 4475.36 iterations 11
Cbc0038I Pass  28: suminf.    0.47744 (3) obj. 4475.36 iterations 13
Cbc0038I Pass  29: suminf.    0.14738 (1) obj. 4434.3 iterations 6
Cbc0038I Pass  30: suminf.    0.61516 (3) obj. 4475.36 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 12 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 4493.52 to 4447.61 (0.02 seconds)
Cbc0038I Round again with cutoff of 4420.46
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.18177 (2) obj. 4420.46 iterations 1
Cbc0038I Pass  31: suminf.    1.42913 (3) obj. 4337.18 iterations 11
Cbc0038I Pass  32: suminf.    0.88311 (3) obj. 4420.46 iterations 6
Cbc0038I Pass  33: suminf.    1.22810 (3) obj. 4420.46 iterations 10
Cbc0038I Pass  34: suminf.    0.56251 (4) obj. 4420.46 iterations 11
Cbc0038I Pass  35: suminf.    0.51934 (3) obj. 4420.46 iterations 9
Cbc0038I Pass  36: suminf.    0.67369 (3) obj. 4420.46 iterations 7
Cbc0038I Pass  37: suminf.    0.44247 (3) obj. 4420.46 iterations 6
Cbc0038I Pass  38: suminf.    1.06254 (4) obj. 4420.46 iterations 8
Cbc0038I Pass  39: suminf.    0.51407 (3) obj. 4420.46 iterations 7
Cbc0038I Pass  40: suminf.    0.90685 (3) obj. 4420.46 iterations 10
Cbc0038I Pass  41: suminf.    0.53424 (3) obj. 4420.46 iterations 9
Cbc0038I Pass  42: suminf.    0.52557 (4) obj. 4420.46 iterations 12
Cbc0038I Pass  43: suminf.    0.49585 (2) obj. 4420.46 iterations 7
Cbc0038I Pass  44: suminf.    0.18177 (2) obj. 4420.46 iterations 9
Cbc0038I Pass  45: suminf.    1.42913 (3) obj. 4337.18 iterations 10
Cbc0038I Pass  46: suminf.    0.88311 (3) obj. 4420.46 iterations 6
Cbc0038I Pass  47: suminf.    1.22810 (3) obj. 4420.46 iterations 9
Cbc0038I Pass  48: suminf.    0.42792 (4) obj. 4420.46 iterations 9
Cbc0038I Pass  49: suminf.    0.04429 (1) obj. 4393.01 iterations 12
Cbc0038I Pass  50: suminf.    0.32767 (2) obj. 4420.46 iterations 6
Cbc0038I Pass  51: suminf.    0.32767 (2) obj. 4420.46 iterations 3
Cbc0038I Pass  52: suminf.    0.82867 (4) obj. 4420.46 iterations 16
Cbc0038I Pass  53: suminf.    0.26859 (3) obj. 4405.48 iterations 5
Cbc0038I Pass  54: suminf.    0.14017 (3) obj. 4420.46 iterations 8
Cbc0038I Pass  55: suminf.    0.24447 (3) obj. 4420.46 iterations 6
Cbc0038I Pass  56: suminf.    1.19891 (4) obj. 4420.46 iterations 10
Cbc0038I Pass  57: suminf.    0.18177 (2) obj. 4420.46 iterations 6
Cbc0038I Pass  58: suminf.    1.42913 (3) obj. 4337.18 iterations 11
Cbc0038I Pass  59: suminf.    0.88311 (3) obj. 4420.46 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 7 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 4447.61 - took 0.02 seconds
Cbc0012I Integer solution of 4447.6145 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 3 columns
Cbc0031I 8 added rows had average density of 22.75
Cbc0013I At root node, 8 cuts changed objective from 4311.86 to 4411.7743 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 53 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 48 row cuts average 32.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 94 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 4447.6145 best solution, best possible 4411.8512 (0.05 seconds)
Cbc0001I Search completed - best objective 4447.614548599059, took 412 iterations and 24 nodes (0.11 seconds)
Cbc0032I Strong branching done 248 times (853 iterations), fathomed 4 nodes and fixed 11 variables
Cbc0035I Maximum depth 6, 72 variables fixed on reduced cost
Cuts at root node changed objective from 4311.86 to 4411.85
Probing was tried 70 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 65 times and created 178 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
Clique was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 65 times and created 193 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 65 times and created 184 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                4447.61454860
Enumerated nodes:               24
Total iterations:               412
Time (CPU seconds):             0.10
Time (Wallclock seconds):       0.11

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.11

initial land use distribution [2, 1, 1, 1, 1, 1, 2, 1, 2, 0, 1, 2, 0, 2, 1, 0, 2, 2, 2, 1, 0, 0, 1, 0, 2]
Optimized Land Use with benefits restriction: [2, 2, 1, 0, 2, 2, 0, 1, 2, 0, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 0, 0, 0, 0, 1]
Initial total costs: 6344.299241428287
Optimized total costs: 4447.614548599142
Initial total benefit1/ES1: 102.21358148891919
Optimized total benefit1/ES1: 102.24807676691843
Initial total Benefit2/ES2: 105.93620502110792
Optimized total benefit2/ES2: 106.67276269235404
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/a82f4e3fbd6a4a7bbc39ec143bde0abe-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/a82f4e3fbd6a4a7bbc39ec143bde0abe-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2611.99 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.46634
Cbc0038I Pass   1: suminf.    0.34108 (1) obj. 2868.77 iterations 14
Cbc0038I Solution found of 3133
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 3133 to 2862.07 (0.01 seconds)
Cbc0038I Round again with cutoff of 2837.06
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.37211 (3) obj. 2837.06 iterations 3
Cbc0038I Pass   3: suminf.    1.15493 (3) obj. 2837.06 iterations 5
Cbc0038I Pass   4: suminf.    0.90173 (3) obj. 2837.06 iterations 7
Cbc0038I Pass   5: suminf.    0.65114 (3) obj. 2837.06 iterations 7
Cbc0038I Pass   6: suminf.    0.99754 (3) obj. 2837.06 iterations 9
Cbc0038I Pass   7: suminf.    0.55293 (3) obj. 2837.06 iterations 3
Cbc0038I Pass   8: suminf.    0.96886 (3) obj. 2837.06 iterations 4
Cbc0038I Pass   9: suminf.    0.66437 (2) obj. 2837.06 iterations 2
Cbc0038I Pass  10: suminf.    0.60574 (2) obj. 2821.22 iterations 1
Cbc0038I Pass  11: suminf.    0.96886 (3) obj. 2837.06 iterations 3
Cbc0038I Pass  12: suminf.    0.90826 (4) obj. 2837.06 iterations 10
Cbc0038I Pass  13: suminf.    0.49190 (3) obj. 2837.06 iterations 4
Cbc0038I Pass  14: suminf.    0.62423 (3) obj. 2837.06 iterations 4
Cbc0038I Pass  15: suminf.    0.99487 (3) obj. 2837.06 iterations 16
Cbc0038I Pass  16: suminf.    0.48298 (2) obj. 2837.06 iterations 5
Cbc0038I Pass  17: suminf.    0.36065 (1) obj. 2837.06 iterations 4
Cbc0038I Pass  18: suminf.    0.48625 (1) obj. 2753.38 iterations 5
Cbc0038I Pass  19: suminf.    0.29120 (1) obj. 2837.06 iterations 5
Cbc0038I Pass  20: suminf.    0.31116 (1) obj. 2828.68 iterations 2
Cbc0038I Pass  21: suminf.    0.56647 (3) obj. 2837.06 iterations 15
Cbc0038I Pass  22: suminf.    0.26955 (2) obj. 2818.94 iterations 8
Cbc0038I Pass  23: suminf.    0.32362 (2) obj. 2837.06 iterations 9
Cbc0038I Pass  24: suminf.    0.32877 (2) obj. 2837.06 iterations 2
Cbc0038I Pass  25: suminf.    0.85616 (3) obj. 2837.06 iterations 17
Cbc0038I Pass  26: suminf.    0.85616 (3) obj. 2837.06 iterations 2
Cbc0038I Pass  27: suminf.    1.10514 (3) obj. 2732.82 iterations 9
Cbc0038I Pass  28: suminf.    0.42525 (1) obj. 2787.99 iterations 4
Cbc0038I Pass  29: suminf.    0.29120 (1) obj. 2837.06 iterations 7
Cbc0038I Pass  30: suminf.    0.31116 (1) obj. 2828.68 iterations 2
Cbc0038I Pass  31: suminf.    0.50581 (2) obj. 2837.06 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 11 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 7 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 2862.07 to 2734.56 (0.01 seconds)
Cbc0038I Round again with cutoff of 2710.05
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.54961 (3) obj. 2710.05 iterations 2
Cbc0038I Pass  32: suminf.    0.97722 (3) obj. 2710.05 iterations 4
Cbc0038I Pass  33: suminf.    0.74773 (3) obj. 2710.05 iterations 5
Cbc0038I Pass  34: suminf.    0.53142 (3) obj. 2710.05 iterations 3
Cbc0038I Pass  35: suminf.    0.74773 (3) obj. 2710.05 iterations 4
Cbc0038I Pass  36: suminf.    0.24555 (3) obj. 2699.51 iterations 11
Cbc0038I Pass  37: suminf.    0.23523 (3) obj. 2710.05 iterations 5
Cbc0038I Pass  38: suminf.    0.28101 (3) obj. 2710.05 iterations 6
Cbc0038I Pass  39: suminf.    0.30997 (2) obj. 2710.05 iterations 9
Cbc0038I Pass  40: suminf.    0.74379 (4) obj. 2710.05 iterations 13
Cbc0038I Pass  41: suminf.    0.52710 (4) obj. 2710.05 iterations 3
Cbc0038I Pass  42: suminf.    0.56627 (3) obj. 2710.05 iterations 6
Cbc0038I Pass  43: suminf.    0.27515 (2) obj. 2710.05 iterations 2
Cbc0038I Pass  44: suminf.    0.65083 (3) obj. 2671.47 iterations 7
Cbc0038I Pass  45: suminf.    0.52494 (3) obj. 2710.05 iterations 4
Cbc0038I Pass  46: suminf.    0.70684 (3) obj. 2710.05 iterations 4
Cbc0038I Pass  47: suminf.    0.49574 (2) obj. 2710.05 iterations 5
Cbc0038I Pass  48: suminf.    0.49574 (2) obj. 2710.05 iterations 5
Cbc0038I Pass  49: suminf.    0.70242 (3) obj. 2710.05 iterations 9
Cbc0038I Pass  50: suminf.    0.31552 (4) obj. 2710.05 iterations 4
Cbc0038I Pass  51: suminf.    0.59399 (3) obj. 2710.05 iterations 9
Cbc0038I Pass  52: suminf.    0.29452 (2) obj. 2710.05 iterations 3
Cbc0038I Pass  53: suminf.    0.66029 (3) obj. 2658.55 iterations 7
Cbc0038I Pass  54: suminf.    0.48709 (1) obj. 2709.86 iterations 3
Cbc0038I Pass  55: suminf.    0.47866 (2) obj. 2710.05 iterations 5
Cbc0038I Pass  56: suminf.    1.17288 (3) obj. 2710.05 iterations 8
Cbc0038I Pass  57: suminf.    0.76418 (2) obj. 2710.05 iterations 3
Cbc0038I Pass  58: suminf.    0.76418 (2) obj. 2710.05 iterations 1
Cbc0038I Pass  59: suminf.    0.83676 (3) obj. 2656.94 iterations 6
Cbc0038I Pass  60: suminf.    0.51921 (3) obj. 2710.05 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2734.56 - took 0.02 seconds
Cbc0012I Integer solution of 2734.5594 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 2 columns
Cbc0031I 12 added rows had average density of 30.5
Cbc0013I At root node, 12 cuts changed objective from 2611.9931 to 2709.7172 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 44 row cuts average 35.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 104 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2734.5594 best solution, best possible 2711.931 (0.05 seconds)
Cbc0001I Search completed - best objective 2734.55938579495, took 163 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 32 times (243 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 0, 34 variables fixed on reduced cost
Cuts at root node changed objective from 2611.99 to 2711.93
Probing was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 20 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 20 times and created 35 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Clique was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 20 times and created 63 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 20 times and created 147 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2734.55938579
Enumerated nodes:               2
Total iterations:               163
Time (CPU seconds):             0.06
Time (Wallclock seconds):       0.06

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

initial land use distribution [1, 1, 0, 1, 2, 2, 1, 2, 0, 2, 2, 2, 1, 2, 2, 0, 1, 0, 0, 0, 2, 1, 2, 1, 0]
Optimized Land Use with benefits restriction: [2, 0, 0, 0, 0, 0, 2, 0, 2, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 0, 0, 1, 2]
Initial total costs: 6286.7556506987985
Optimized total costs: 2734.559385794926
Initial total benefit1/ES1: 93.49266062393708
Optimized total benefit1/ES1: 94.42924385205659
Initial total Benefit2/ES2: 86.50835240740876
Optimized total benefit2/ES2: 89.00164776187765
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/2d91570a957c4bde8293bf6f6392fa58-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/2d91570a957c4bde8293bf6f6392fa58-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2516.9 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.1379
Cbc0038I Solution found of 2677.34
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 24 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2661.3
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03735 (1) obj. 2661.3 iterations 10
Cbc0038I Pass   2: suminf.    0.17712 (1) obj. 2601.26 iterations 2
Cbc0038I Pass   3: suminf.    0.90870 (4) obj. 2661.3 iterations 10
Cbc0038I Pass   4: suminf.    0.90870 (4) obj. 2661.3 iterations 5
Cbc0038I Pass   5: suminf.    0.49478 (1) obj. 2661.3 iterations 13
Cbc0038I Pass   6: suminf.    0.43845 (1) obj. 2632.61 iterations 2
Cbc0038I Pass   7: suminf.    1.24541 (5) obj. 2661.3 iterations 9
Cbc0038I Pass   8: suminf.    1.24541 (5) obj. 2661.3 iterations 0
Cbc0038I Pass   9: suminf.    0.59335 (3) obj. 2661.3 iterations 7
Cbc0038I Pass  10: suminf.    0.59335 (3) obj. 2661.3 iterations 0
Cbc0038I Pass  11: suminf.    0.99362 (3) obj. 2661.3 iterations 8
Cbc0038I Pass  12: suminf.    0.43845 (1) obj. 2632.61 iterations 2
Cbc0038I Pass  13: suminf.    0.49478 (1) obj. 2661.3 iterations 1
Cbc0038I Pass  14: suminf.    1.24812 (4) obj. 2661.3 iterations 12
Cbc0038I Pass  15: suminf.    1.05643 (4) obj. 2661.3 iterations 2
Cbc0038I Pass  16: suminf.    0.79604 (3) obj. 2661.3 iterations 8
Cbc0038I Pass  17: suminf.    0.79604 (3) obj. 2661.3 iterations 1
Cbc0038I Pass  18: suminf.    1.09665 (3) obj. 2661.3 iterations 3
Cbc0038I Pass  19: suminf.    1.03097 (3) obj. 2661.3 iterations 1
Cbc0038I Pass  20: suminf.    1.26863 (3) obj. 2661.3 iterations 8
Cbc0038I Pass  21: suminf.    1.15585 (4) obj. 2661.3 iterations 14
Cbc0038I Pass  22: suminf.    0.93951 (4) obj. 2661.3 iterations 6
Cbc0038I Pass  23: suminf.    0.38993 (2) obj. 2661.3 iterations 2
Cbc0038I Pass  24: suminf.    0.68152 (3) obj. 2661.3 iterations 8
Cbc0038I Pass  25: suminf.    0.46014 (2) obj. 2661.3 iterations 2
Cbc0038I Pass  26: suminf.    0.65446 (4) obj. 2661.3 iterations 10
Cbc0038I Pass  27: suminf.    0.59612 (5) obj. 2661.3 iterations 8
Cbc0038I Pass  28: suminf.    0.94506 (4) obj. 2661.3 iterations 8
Cbc0038I Pass  29: suminf.    0.92259 (2) obj. 2659.45 iterations 12
Cbc0038I Pass  30: suminf.    0.92720 (2) obj. 2661.3 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 17 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 2677.34 - took 0.01 seconds
Cbc0012I Integer solution of 2677.341 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0031I 7 added rows had average density of 23.857143
Cbc0013I At root node, 7 cuts changed objective from 2516.8961 to 2659.4293 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 36 row cuts average 31.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 105 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2677.341 best solution, best possible 2659.4293 (0.03 seconds)
Cbc0001I Search completed - best objective 2677.34103071345, took 104 iterations and 2 nodes (0.03 seconds)
Cbc0032I Strong branching done 26 times (128 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 38 variables fixed on reduced cost
Cuts at root node changed objective from 2516.9 to 2659.43
Probing was tried 12 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 15 times and created 46 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 15 times and created 57 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 15 times and created 143 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2677.34103071
Enumerated nodes:               2
Total iterations:               104
Time (CPU seconds):             0.03
Time (Wallclock seconds):       0.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

initial land use distribution [0, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 0, 2, 0, 1, 0, 2, 2, 2, 2]
Optimized Land Use with benefits restriction: [1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 1, 0, 2, 2, 1, 1, 2, 2, 2, 2, 0, 2, 0, 0]
Initial total costs: 6531.681093584205
Optimized total costs: 2677.341030713392
Initial total benefit1/ES1: 66.98862814186572
Optimized total benefit1/ES1: 70.36410017630556
Initial total Benefit2/ES2: 120.824722362157
Optimized total benefit2/ES2: 122.78198061003246
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/b0769b3fb7554593a849a8c1d5804f81-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/b0769b3fb7554593a849a8c1d5804f81-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2924.86 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.900099
Cbc0038I Pass   1: suminf.    0.27661 (1) obj. 3025.23 iterations 10
Cbc0038I Solution found of 3467.72
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 22 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 3467.72 to 3030.26 (0.01 seconds)
Cbc0038I Round again with cutoff of 3019.72
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.31309 (1) obj. 2947.84 iterations 5
Cbc0038I Pass   3: suminf.    0.41931 (2) obj. 3019.72 iterations 10
Cbc0038I Pass   4: suminf.    0.88652 (3) obj. 2948.37 iterations 13
Cbc0038I Pass   5: suminf.    1.28370 (3) obj. 3019.72 iterations 11
Cbc0038I Pass   6: suminf.    0.02946 (1) obj. 3019.72 iterations 7
Cbc0038I Pass   7: suminf.    0.11464 (1) obj. 2989.25 iterations 4
Cbc0038I Pass   8: suminf.    0.84495 (3) obj. 2983.51 iterations 10
Cbc0038I Pass   9: suminf.    0.38410 (3) obj. 3019.72 iterations 5
Cbc0038I Pass  10: suminf.    1.19104 (3) obj. 3019.72 iterations 12
Cbc0038I Pass  11: suminf.    1.19104 (3) obj. 3019.72 iterations 0
Cbc0038I Pass  12: suminf.    1.05991 (3) obj. 3019.72 iterations 6
Cbc0038I Pass  13: suminf.    0.64729 (3) obj. 3019.72 iterations 6
Cbc0038I Pass  14: suminf.    1.17670 (5) obj. 3019.72 iterations 6
Cbc0038I Pass  15: suminf.    0.64729 (3) obj. 3019.72 iterations 7
Cbc0038I Pass  16: suminf.    1.19104 (3) obj. 3019.72 iterations 11
Cbc0038I Pass  17: suminf.    1.19104 (3) obj. 3019.72 iterations 0
Cbc0038I Pass  18: suminf.    1.05991 (3) obj. 3019.72 iterations 6
Cbc0038I Pass  19: suminf.    0.60844 (5) obj. 3019.72 iterations 9
Cbc0038I Pass  20: suminf.    0.46221 (3) obj. 3019.72 iterations 8
Cbc0038I Pass  21: suminf.    0.03904 (1) obj. 2962.18 iterations 7
Cbc0038I Solution found of 2976.15
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 18 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2965.89
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  22: suminf.    0.42542 (1) obj. 2930.15 iterations 2
Cbc0038I Pass  23: suminf.    0.28562 (2) obj. 2965.89 iterations 10
Cbc0038I Pass  24: suminf.    0.44160 (3) obj. 2925.07 iterations 11
Cbc0038I Pass  25: suminf.    0.66423 (3) obj. 2965.89 iterations 9
Cbc0038I Pass  26: suminf.    0.47224 (3) obj. 2965.89 iterations 8
Cbc0038I Pass  27: suminf.    0.60317 (2) obj. 2965.89 iterations 10
Cbc0038I Pass  28: suminf.    0.60317 (2) obj. 2965.89 iterations 3
Cbc0038I Pass  29: suminf.    0.53149 (3) obj. 2947.28 iterations 10
Cbc0038I Pass  30: suminf.    0.75668 (3) obj. 2965.89 iterations 14
Cbc0038I Pass  31: suminf.    0.49458 (2) obj. 2962.81 iterations 7
Cbc0038I Pass  32: suminf.    0.50754 (2) obj. 2965.89 iterations 9
Cbc0038I Pass  33: suminf.    0.49458 (2) obj. 2962.81 iterations 8
Cbc0038I Pass  34: suminf.    0.49458 (2) obj. 2962.81 iterations 0
Cbc0038I Pass  35: suminf.    0.53149 (3) obj. 2947.28 iterations 3
Cbc0038I Pass  36: suminf.    0.47224 (3) obj. 2965.89 iterations 4
Cbc0038I Pass  37: suminf.    0.60317 (2) obj. 2965.89 iterations 10
Cbc0038I Pass  38: suminf.    0.60317 (2) obj. 2965.89 iterations 3
Cbc0038I Pass  39: suminf.    0.53149 (3) obj. 2947.28 iterations 10
Cbc0038I Pass  40: suminf.    0.44004 (3) obj. 2925.29 iterations 2
Cbc0038I Pass  41: suminf.    0.42542 (1) obj. 2930.15 iterations 4
Cbc0038I Pass  42: suminf.    0.28562 (2) obj. 2965.89 iterations 7
Cbc0038I Pass  43: suminf.    0.44160 (3) obj. 2925.07 iterations 10
Cbc0038I Pass  44: suminf.    0.38390 (3) obj. 2965.89 iterations 12
Cbc0038I Pass  45: suminf.    0.38187 (2) obj. 2965.89 iterations 2
Cbc0038I Pass  46: suminf.    0.53149 (3) obj. 2947.28 iterations 11
Cbc0038I Pass  47: suminf.    0.47224 (3) obj. 2965.89 iterations 4
Cbc0038I Pass  48: suminf.    0.60317 (2) obj. 2965.89 iterations 10
Cbc0038I Pass  49: suminf.    0.60317 (2) obj. 2965.89 iterations 3
Cbc0038I Pass  50: suminf.    0.38187 (2) obj. 2965.89 iterations 1
Cbc0038I Pass  51: suminf.    0.38187 (2) obj. 2965.89 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 19 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2976.15 - took 0.01 seconds
Cbc0012I Integer solution of 2976.1465 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 2 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 2924.8577 to 2924.8577 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 2976.14651528202, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Cuts at root node changed objective from 2924.86 to 2924.86
Probing was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2976.14651528
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

initial land use distribution [1, 2, 0, 2, 2, 1, 0, 1, 2, 0, 2, 0, 1, 0, 2, 2, 2, 2, 2, 1, 0, 0, 2, 1, 1]
Optimized Land Use with benefits restriction: [2, 0, 0, 2, 0, 0, 1, 0, 1, 2, 2, 0, 2, 2, 1, 1, 2, 0, 2, 2, 0, 0, 2, 1, 2]
Initial total costs: 4806.947652308448
Optimized total costs: 2976.1465152818173
Initial total benefit1/ES1: 77.6736924673601
Optimized total benefit1/ES1: 78.50995730413185
Initial total Benefit2/ES2: 127.0697755001891
Optimized total benefit2/ES2: 127.43817336419961
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/5193c18bbffe47bc943bc69325522ac0-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/5193c18bbffe47bc943bc69325522ac0-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3097.94 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.999696
Cbc0038I Pass   1: suminf.    0.42296 (1) obj. 3475.39 iterations 14
Cbc0038I Solution found of 3661.08
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 3604.77
Cbc0038I Pass   2: suminf.    0.42296 (1) obj. 3475.39 iterations 0
Cbc0038I Pass   3: suminf.    0.12827 (1) obj. 3604.77 iterations 9
Cbc0038I Pass   4: suminf.    1.10972 (3) obj. 3604.77 iterations 13
Cbc0038I Pass   5: suminf.    0.44638 (3) obj. 3604.77 iterations 6
Cbc0038I Pass   6: suminf.    0.53046 (3) obj. 3604.77 iterations 13
Cbc0038I Pass   7: suminf.    0.53046 (3) obj. 3604.77 iterations 0
Cbc0038I Pass   8: suminf.    0.39927 (1) obj. 3604.77 iterations 10
Cbc0038I Pass   9: suminf.    0.13129 (1) obj. 3409.14 iterations 20
Cbc0038I Pass  10: suminf.    0.49166 (1) obj. 3604.77 iterations 7
Cbc0038I Pass  11: suminf.    0.54324 (4) obj. 3604.77 iterations 11
Cbc0038I Pass  12: suminf.    0.49394 (4) obj. 3604.77 iterations 3
Cbc0038I Pass  13: suminf.    0.34585 (3) obj. 3604.77 iterations 16
Cbc0038I Pass  14: suminf.    0.34585 (3) obj. 3604.77 iterations 0
Cbc0038I Pass  15: suminf.    0.13129 (1) obj. 3409.14 iterations 9
Cbc0038I Pass  16: suminf.    0.13129 (1) obj. 3409.14 iterations 0
Cbc0038I Pass  17: suminf.    0.49166 (1) obj. 3604.77 iterations 5
Cbc0038I Pass  18: suminf.    1.05590 (3) obj. 3604.77 iterations 24
Cbc0038I Pass  19: suminf.    0.94853 (3) obj. 3604.77 iterations 5
Cbc0038I Pass  20: suminf.    0.06378 (3) obj. 3604.77 iterations 10
Cbc0038I Pass  21: suminf.    0.03124 (3) obj. 3604.77 iterations 3
Cbc0038I Pass  22: suminf.    1.24212 (3) obj. 3604.77 iterations 11
Cbc0038I Pass  23: suminf.    0.15109 (1) obj. 3437.87 iterations 15
Cbc0038I Pass  24: suminf.    0.47277 (1) obj. 3604.77 iterations 3
Cbc0038I Pass  25: suminf.    0.51535 (3) obj. 3604.77 iterations 12
Cbc0038I Pass  26: suminf.    0.29301 (2) obj. 3604.77 iterations 4
Cbc0038I Pass  27: suminf.    0.69402 (3) obj. 3478.22 iterations 17
Cbc0038I Pass  28: suminf.    0.41666 (1) obj. 3521.5 iterations 10
Cbc0038I Pass  29: suminf.    0.36728 (1) obj. 3604.77 iterations 3
Cbc0038I Pass  30: suminf.    0.92744 (3) obj. 3604.77 iterations 9
Cbc0038I Solution found of 3600.23
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 9 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 9 rows 25 columns
Cbc0038I Mini branch and bound improved solution from 3600.23 to 3356.82 (0.03 seconds)
Cbc0038I Round again with cutoff of 3305.05
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.69663 (3) obj. 3305.05 iterations 4
Cbc0038I Pass  32: suminf.    1.34646 (3) obj. 3305.05 iterations 11
Cbc0038I Pass  33: suminf.    0.75813 (3) obj. 3305.05 iterations 3
Cbc0038I Pass  34: suminf.    0.53961 (2) obj. 3305.05 iterations 6
Cbc0038I Pass  35: suminf.    0.22391 (2) obj. 3272.83 iterations 9
Cbc0038I Pass  36: suminf.    0.95142 (3) obj. 3305.05 iterations 9
Cbc0038I Pass  37: suminf.    1.50531 (4) obj. 3305.05 iterations 14
Cbc0038I Pass  38: suminf.    0.70705 (3) obj. 3305.05 iterations 10
Cbc0038I Pass  39: suminf.    0.92734 (3) obj. 3305.05 iterations 7
Cbc0038I Pass  40: suminf.    0.90707 (3) obj. 3305.05 iterations 8
Cbc0038I Pass  41: suminf.    0.58519 (3) obj. 3305.05 iterations 4
Cbc0038I Pass  42: suminf.    1.36989 (3) obj. 3305.05 iterations 9
Cbc0038I Pass  43: suminf.    1.08388 (3) obj. 3305.05 iterations 9
Cbc0038I Pass  44: suminf.    1.22772 (3) obj. 3305.05 iterations 2
Cbc0038I Pass  45: suminf.    1.30454 (4) obj. 3305.05 iterations 3
Cbc0038I Pass  46: suminf.    1.61287 (4) obj. 3305.05 iterations 9
Cbc0038I Pass  47: suminf.    1.08467 (4) obj. 3305.05 iterations 2
Cbc0038I Pass  48: suminf.    1.08467 (4) obj. 3305.05 iterations 2
Cbc0038I Pass  49: suminf.    0.17948 (1) obj. 3254.33 iterations 14
Cbc0038I Pass  50: suminf.    0.27725 (1) obj. 3305.05 iterations 7
Cbc0038I Pass  51: suminf.    1.21425 (4) obj. 3305.05 iterations 11
Cbc0038I Pass  52: suminf.    0.37376 (3) obj. 3305.05 iterations 8
Cbc0038I Pass  53: suminf.    0.30769 (1) obj. 3305.05 iterations 2
Cbc0038I Pass  54: suminf.    0.36239 (1) obj. 3287.12 iterations 7
Cbc0038I Pass  55: suminf.    1.99343 (5) obj. 3305.05 iterations 4
Cbc0038I Pass  56: suminf.    1.19082 (3) obj. 3305.05 iterations 5
Cbc0038I Pass  57: suminf.    0.45237 (3) obj. 3305.05 iterations 5
Cbc0038I Pass  58: suminf.    0.77375 (3) obj. 3305.05 iterations 9
Cbc0038I Pass  59: suminf.    0.52856 (2) obj. 3305.05 iterations 12
Cbc0038I Pass  60: suminf.    0.33892 (3) obj. 3305.05 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 14 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 8 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 3356.82 to 3231.85 (0.05 seconds)
Cbc0038I Round again with cutoff of 3191.67
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.81924 (2) obj. 3130.41 iterations 2
Cbc0038I Pass  61: suminf.    1.02890 (3) obj. 3191.67 iterations 15
Cbc0038I Pass  62: suminf.    1.12463 (3) obj. 3191.67 iterations 6
Cbc0038I Pass  63: suminf.    0.79551 (3) obj. 3191.67 iterations 3
Cbc0038I Pass  64: suminf.    1.23404 (4) obj. 3191.67 iterations 7
Cbc0038I Pass  65: suminf.    0.39091 (2) obj. 3191.67 iterations 6
Cbc0038I Pass  66: suminf.    0.15576 (1) obj. 3173.6 iterations 7
Cbc0038I Pass  67: suminf.    0.15576 (1) obj. 3173.6 iterations 1
Cbc0038I Pass  68: suminf.    0.15576 (1) obj. 3173.6 iterations 1
Cbc0038I Pass  69: suminf.    1.37142 (5) obj. 3191.67 iterations 17
Cbc0038I Pass  70: suminf.    0.14894 (3) obj. 3191.67 iterations 9
Cbc0038I Pass  71: suminf.    0.81396 (3) obj. 3191.67 iterations 5
Cbc0038I Pass  72: suminf.    0.67490 (3) obj. 3191.67 iterations 6
Cbc0038I Pass  73: suminf.    0.78777 (3) obj. 3191.67 iterations 2
Cbc0038I Pass  74: suminf.    0.67881 (4) obj. 3191.67 iterations 3
Cbc0038I Pass  75: suminf.    0.75741 (3) obj. 3191.67 iterations 4
Cbc0038I Pass  76: suminf.    0.64240 (3) obj. 3191.67 iterations 7
Cbc0038I Pass  77: suminf.    0.47435 (3) obj. 3191.67 iterations 5
Cbc0038I Pass  78: suminf.    1.27325 (4) obj. 3191.67 iterations 7
Cbc0038I Pass  79: suminf.    0.64240 (3) obj. 3191.67 iterations 4
Cbc0038I Pass  80: suminf.    0.47435 (3) obj. 3191.67 iterations 6
Cbc0038I Pass  81: suminf.    0.93843 (4) obj. 3191.67 iterations 3
Cbc0038I Pass  82: suminf.    0.81854 (4) obj. 3191.67 iterations 5
Cbc0038I Pass  83: suminf.    0.71701 (3) obj. 3191.67 iterations 7
Cbc0038I Pass  84: suminf.    0.75264 (3) obj. 3191.67 iterations 2
Cbc0038I Pass  85: suminf.    1.17717 (4) obj. 3191.67 iterations 9
Cbc0038I Pass  86: suminf.    0.15576 (1) obj. 3173.6 iterations 12
Cbc0038I Pass  87: suminf.    0.39091 (2) obj. 3191.67 iterations 4
Cbc0038I Pass  88: suminf.    0.46291 (3) obj. 3131.17 iterations 8
Cbc0038I Pass  89: suminf.    1.68470 (5) obj. 3191.67 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 7 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of 3231.85 - took 0.05 seconds
Cbc0012I Integer solution of 3231.846 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 5 columns
Cbc0031I 8 added rows had average density of 25.125
Cbc0013I At root node, 8 cuts changed objective from 3097.9361 to 3195.1272 in 19 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 38 row cuts average 32.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 76 row cuts average 24.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3231.846 best solution, best possible 3195.1272 (0.08 seconds)
Cbc0001I Search completed - best objective 3231.8460388932, took 477 iterations and 30 nodes (0.13 seconds)
Cbc0032I Strong branching done 326 times (1210 iterations), fathomed 6 nodes and fixed 3 variables
Cbc0035I Maximum depth 10, 105 variables fixed on reduced cost
Cuts at root node changed objective from 3097.94 to 3195.13
Probing was tried 56 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 51 times and created 34 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Knapsack was tried 51 times and created 69 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Clique was tried 19 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 51 times and created 169 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 19 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 51 times and created 203 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                3231.84603889
Enumerated nodes:               30
Total iterations:               477
Time (CPU seconds):             0.13
Time (Wallclock seconds):       0.13

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.13

initial land use distribution [0, 0, 1, 2, 1, 1, 2, 1, 2, 2, 2, 0, 1, 1, 1, 1, 1, 2, 2, 2, 0, 2, 2, 0, 1]
Optimized Land Use with benefits restriction: [0, 2, 1, 1, 1, 0, 2, 1, 0, 0, 0, 2, 1, 0, 1, 1, 1, 0, 2, 0, 1, 2, 2, 1, 0]
Initial total costs: 5995.901270067733
Optimized total costs: 3231.84603889317
Initial total benefit1/ES1: 118.37234026642386
Optimized total benefit1/ES1: 118.44321246150844
Initial total Benefit2/ES2: 91.16285337661117
Optimized total benefit2/ES2: 91.95586102692063
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/b3d21b93c04843bba9ab2c19633a504c-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/b3d21b93c04843bba9ab2c19633a504c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2577.94 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.74771
Cbc0038I Pass   1: suminf.    0.12952 (1) obj. 2737.71 iterations 3
Cbc0038I Solution found of 2786.03
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 24 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2765.22
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.12952 (1) obj. 2737.71 iterations 0
Cbc0038I Pass   3: suminf.    0.04531 (1) obj. 2765.22 iterations 4
Cbc0038I Pass   4: suminf.    0.37897 (1) obj. 2611.99 iterations 1
Cbc0038I Pass   5: suminf.    0.84340 (3) obj. 2765.22 iterations 10
Cbc0038I Pass   6: suminf.    0.84340 (3) obj. 2765.22 iterations 2
Cbc0038I Pass   7: suminf.    0.78441 (3) obj. 2605.18 iterations 4
Cbc0038I Pass   8: suminf.    0.40294 (1) obj. 2764.94 iterations 1
Cbc0038I Pass   9: suminf.    0.48958 (2) obj. 2765.22 iterations 4
Cbc0038I Pass  10: suminf.    0.57221 (3) obj. 2765.22 iterations 11
Cbc0038I Pass  11: suminf.    0.28155 (2) obj. 2760.85 iterations 10
Cbc0038I Pass  12: suminf.    0.35452 (3) obj. 2765.22 iterations 7
Cbc0038I Pass  13: suminf.    0.44880 (3) obj. 2765.22 iterations 6
Cbc0038I Pass  14: suminf.    0.42253 (2) obj. 2765.22 iterations 3
Cbc0038I Pass  15: suminf.    0.70679 (3) obj. 2765.22 iterations 6
Cbc0038I Pass  16: suminf.    1.21117 (3) obj. 2765.22 iterations 4
Cbc0038I Pass  17: suminf.    0.65267 (4) obj. 2765.22 iterations 13
Cbc0038I Pass  18: suminf.    0.52726 (3) obj. 2765.22 iterations 4
Cbc0038I Pass  19: suminf.    0.63274 (3) obj. 2765.22 iterations 2
Cbc0038I Pass  20: suminf.    1.24705 (4) obj. 2765.22 iterations 16
Cbc0038I Pass  21: suminf.    1.03563 (4) obj. 2765.22 iterations 5
Cbc0038I Pass  22: suminf.    1.25842 (3) obj. 2765.22 iterations 5
Cbc0038I Pass  23: suminf.    0.79883 (3) obj. 2765.22 iterations 4
Cbc0038I Pass  24: suminf.    0.95682 (3) obj. 2765.22 iterations 3
Cbc0038I Pass  25: suminf.    0.69305 (2) obj. 2720.26 iterations 3
Cbc0038I Pass  26: suminf.    0.52603 (3) obj. 2765.22 iterations 2
Cbc0038I Pass  27: suminf.    0.98178 (3) obj. 2765.22 iterations 5
Cbc0038I Pass  28: suminf.    0.57420 (3) obj. 2765.22 iterations 3
Cbc0038I Pass  29: suminf.    0.49498 (4) obj. 2765.22 iterations 13
Cbc0038I Pass  30: suminf.    0.27726 (3) obj. 2765.22 iterations 5
Cbc0038I Pass  31: suminf.    0.30562 (3) obj. 2765.22 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 11 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 7 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 2786.03 to 2746.66 (0.02 seconds)
Cbc0038I Round again with cutoff of 2712.92
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.30498 (3) obj. 2712.92 iterations 2
Cbc0038I Pass  32: suminf.    0.15920 (1) obj. 2712.92 iterations 5
Cbc0038I Pass  33: suminf.    0.37897 (1) obj. 2611.99 iterations 1
Cbc0038I Pass  34: suminf.    0.77651 (3) obj. 2712.92 iterations 7
Cbc0038I Pass  35: suminf.    0.77651 (3) obj. 2712.92 iterations 1
Cbc0038I Pass  36: suminf.    0.19543 (3) obj. 2660.2 iterations 6
Cbc0038I Pass  37: suminf.    0.06754 (1) obj. 2654.55 iterations 5
Cbc0038I Pass  38: suminf.    2.01844 (5) obj. 2712.92 iterations 8
Cbc0038I Pass  39: suminf.    0.68736 (3) obj. 2712.92 iterations 4
Cbc0038I Pass  40: suminf.    0.47825 (3) obj. 2712.92 iterations 4
Cbc0038I Pass  41: suminf.    0.61738 (3) obj. 2712.92 iterations 1
Cbc0038I Pass  42: suminf.    0.75216 (3) obj. 2712.92 iterations 5
Cbc0038I Pass  43: suminf.    1.75851 (5) obj. 2712.92 iterations 8
Cbc0038I Pass  44: suminf.    1.05649 (4) obj. 2712.92 iterations 1
Cbc0038I Pass  45: suminf.    0.79593 (4) obj. 2712.92 iterations 2
Cbc0038I Pass  46: suminf.    0.20484 (2) obj. 2712.92 iterations 11
Cbc0038I Pass  47: suminf.    0.20484 (2) obj. 2712.92 iterations 0
Cbc0038I Pass  48: suminf.    1.04072 (3) obj. 2712.92 iterations 3
Cbc0038I Pass  49: suminf.    0.39191 (3) obj. 2712.92 iterations 6
Cbc0038I Pass  50: suminf.    0.11666 (1) obj. 2694.31 iterations 5
Cbc0038I Pass  51: suminf.    0.15719 (1) obj. 2712.92 iterations 1
Cbc0038I Pass  52: suminf.    0.37784 (3) obj. 2712.92 iterations 6
Cbc0038I Pass  53: suminf.    0.37784 (3) obj. 2712.92 iterations 1
Cbc0038I Pass  54: suminf.    0.62358 (3) obj. 2712.92 iterations 5
Cbc0038I Pass  55: suminf.    0.82570 (3) obj. 2712.92 iterations 8
Cbc0038I Pass  56: suminf.    0.82570 (3) obj. 2712.92 iterations 1
Cbc0038I Pass  57: suminf.    0.54393 (3) obj. 2712.92 iterations 7
Cbc0038I Pass  58: suminf.    0.46105 (3) obj. 2712.92 iterations 3
Cbc0038I Pass  59: suminf.    0.89055 (3) obj. 2712.92 iterations 5
Cbc0038I Pass  60: suminf.    0.31838 (4) obj. 2712.92 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 13 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 2746.66 - took 0.02 seconds
Cbc0012I Integer solution of 2746.6647 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 5 columns
Cbc0031I 7 added rows had average density of 28.857143
Cbc0013I At root node, 7 cuts changed objective from 2577.9445 to 2677.3161 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 34 row cuts average 35.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 75 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2746.6647 best solution, best possible 2677.3161 (0.04 seconds)
Cbc0001I Search completed - best objective 2746.664669369301, took 955 iterations and 30 nodes (0.20 seconds)
Cbc0032I Strong branching done 512 times (2217 iterations), fathomed 6 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 149 variables fixed on reduced cost
Cuts at root node changed objective from 2577.94 to 2677.32
Probing was tried 152 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Gomory was tried 8 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 145 times and created 200 cuts of which 0 were active after adding rounds of cuts (0.062 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 145 times and created 571 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 145 times and created 320 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2746.66466937
Enumerated nodes:               30
Total iterations:               955
Time (CPU seconds):             0.19
Time (Wallclock seconds):       0.20

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.20

initial land use distribution [2, 1, 0, 2, 2, 2, 0, 2, 0, 2, 0, 0, 2, 2, 2, 1, 0, 1, 2, 2, 2, 2, 0, 1, 0]
Optimized Land Use with benefits restriction: [0, 1, 2, 1, 0, 0, 2, 0, 0, 1, 2, 0, 0, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 0, 2]
Initial total costs: 5544.511213451977
Optimized total costs: 2746.6646693692796
Initial total benefit1/ES1: 61.77461879311578
Optimized total benefit1/ES1: 63.6974684429219
Initial total Benefit2/ES2: 103.19224424213344
Optimized total benefit2/ES2: 105.3506137391743
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/edce91012240444fa165fda774a1b914-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/edce91012240444fa165fda774a1b914-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1852.39 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.737305
Cbc0038I Pass   1: suminf.    0.35084 (1) obj. 2012.61 iterations 4
Cbc0038I Solution found of 2380.48
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 2380.48 to 2096.96 (0.01 seconds)
Cbc0038I Round again with cutoff of 2072.5
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.33619 (1) obj. 1908.99 iterations 2
Cbc0038I Pass   3: suminf.    0.07922 (1) obj. 2072.5 iterations 3
Cbc0038I Pass   4: suminf.    0.26839 (1) obj. 2014.1 iterations 1
Cbc0038I Pass   5: suminf.    1.19502 (5) obj. 2072.5 iterations 12
Cbc0038I Pass   6: suminf.    0.60420 (5) obj. 2072.5 iterations 8
Cbc0038I Pass   7: suminf.    0.56120 (2) obj. 2072.5 iterations 4
Cbc0038I Pass   8: suminf.    1.05030 (3) obj. 2072.5 iterations 9
Cbc0038I Pass   9: suminf.    1.05030 (3) obj. 2072.5 iterations 0
Cbc0038I Pass  10: suminf.    1.32031 (3) obj. 2012.56 iterations 3
Cbc0038I Pass  11: suminf.    0.38772 (1) obj. 2004.21 iterations 2
Cbc0038I Pass  12: suminf.    0.13391 (1) obj. 2072.5 iterations 2
Cbc0038I Pass  13: suminf.    0.22375 (1) obj. 2044.76 iterations 1
Cbc0038I Pass  14: suminf.    0.90718 (4) obj. 2072.5 iterations 13
Cbc0038I Pass  15: suminf.    0.36955 (2) obj. 2072.5 iterations 10
Cbc0038I Pass  16: suminf.    0.31602 (2) obj. 2072.5 iterations 5
Cbc0038I Pass  17: suminf.    0.29492 (1) obj. 2072.5 iterations 1
Cbc0038I Pass  18: suminf.    0.30168 (1) obj. 2069.95 iterations 4
Cbc0038I Pass  19: suminf.    0.52099 (4) obj. 2072.5 iterations 10
Cbc0038I Pass  20: suminf.    0.20702 (1) obj. 2064.87 iterations 4
Cbc0038I Pass  21: suminf.    0.37570 (2) obj. 2072.5 iterations 4
Cbc0038I Pass  22: suminf.    0.21622 (1) obj. 2067.79 iterations 3
Cbc0038I Pass  23: suminf.    1.48013 (5) obj. 2072.5 iterations 6
Cbc0038I Pass  24: suminf.    0.83164 (5) obj. 2072.5 iterations 2
Cbc0038I Pass  25: suminf.    0.40918 (3) obj. 2072.5 iterations 7
Cbc0038I Pass  26: suminf.    0.40918 (3) obj. 2072.5 iterations 0
Cbc0038I Pass  27: suminf.    1.07803 (3) obj. 2072.5 iterations 4
Cbc0038I Pass  28: suminf.    0.56817 (2) obj. 2072.5 iterations 2
Cbc0038I Pass  29: suminf.    0.43611 (2) obj. 2020.48 iterations 1
Cbc0038I Pass  30: suminf.    0.62192 (3) obj. 2072.5 iterations 2
Cbc0038I Pass  31: suminf.    0.62192 (3) obj. 2072.5 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 13 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2096.96 - took 0.01 seconds
Cbc0012I Integer solution of 2096.9587 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0031I 10 added rows had average density of 37.8
Cbc0013I At root node, 10 cuts changed objective from 1852.3942 to 1970.9152 in 31 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 123 row cuts average 38.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 128 row cuts average 35.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 83 row cuts average 34.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2096.9587 best solution, best possible 1970.9152 (0.08 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 8 columns
Cbc0016I Integer solution of 2083.0126 found by strong branching after 825 iterations and 45 nodes (0.15 seconds)
Cbc0038I Full problem 37 rows 75 columns, reduced to 11 rows 36 columns
Cbc0044I Reduced cost fixing - 11 rows, 36 columns - restarting search
Cbc0012I Integer solution of 2083.0126 found by Previous solution after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 11 rows 36 columns, reduced to 2 rows 5 columns
Cbc0031I 10 added rows had average density of 32
Cbc0013I At root node, 10 cuts changed objective from 1852.3942 to 1971.929 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 249 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 60 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 505 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 162 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.345 seconds - new frequency is -100
Cbc0014I Cut generator 9 (Stored from first) - 161 row cuts average 29.3 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 2083.0126 best solution, best possible 1971.929 (0.70 seconds)
Cbc0012I Integer solution of 2077.5502 found by DiveCoefficient after 1520 iterations and 11 nodes (0.76 seconds)
Cbc0016I Integer solution of 2075.9317 found by strong branching after 1788 iterations and 20 nodes (0.79 seconds)
Cbc0012I Integer solution of 2042.6385 found by DiveCoefficient after 1979 iterations and 32 nodes (0.81 seconds)
Cbc0001I Search completed - best objective 2042.63845597599, took 2403 iterations and 44 nodes (0.84 seconds)
Cbc0032I Strong branching done 436 times (1782 iterations), fathomed 6 nodes and fixed 11 variables
Cbc0035I Maximum depth 10, 153 variables fixed on reduced cost
Cbc0038I Probing was tried 259 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Cbc0038I Gomory was tried 250 times and created 346 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Cbc0038I Knapsack was tried 250 times and created 457 cuts of which 0 were active after adding rounds of cuts (0.109 seconds)
Cbc0038I Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I MixedIntegerRounding2 was tried 250 times and created 1113 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 250 times and created 350 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Cbc0038I ZeroHalf was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.345 seconds)
Cbc0038I Stored from first was tried 250 times and created 240 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of 2042.6385 found by Reduced search after 3251 iterations and 94 nodes (0.85 seconds)
Cbc0001I Search completed - best objective 2042.63845597599, took 3251 iterations and 94 nodes (0.85 seconds)
Cbc0032I Strong branching done 548 times (1922 iterations), fathomed 6 nodes and fixed 6 variables
Cbc0035I Maximum depth 14, 174 variables fixed on reduced cost
Cuts at root node changed objective from 1852.39 to 1970.92
Probing was tried 82 times and created 31 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Gomory was tried 78 times and created 132 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 78 times and created 157 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
Clique was tried 31 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 78 times and created 311 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
FlowCover was tried 31 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 78 times and created 175 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2042.63845598
Enumerated nodes:               94
Total iterations:               3251
Time (CPU seconds):             0.82
Time (Wallclock seconds):       0.85

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.82   (Wallclock seconds):       0.85

initial land use distribution [0, 2, 1, 0, 2, 0, 1, 0, 1, 0, 1, 0, 2, 0, 1, 1, 2, 1, 0, 1, 1, 2, 1, 0, 1]
Optimized Land Use with benefits restriction: [0, 1, 0, 0, 1, 0, 0, 2, 2, 1, 0, 1, 0, 0, 2, 0, 0, 0, 1, 2, 0, 2, 1, 0, 1]
Initial total costs: 5224.467003278808
Optimized total costs: 2042.63845597607
Initial total benefit1/ES1: 79.25278557420206
Optimized total benefit1/ES1: 81.24431458472073
Initial total Benefit2/ES2: 57.17314038453455
Optimized total benefit2/ES2: 57.17344643865299
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/d4edf1f36dcf45adb8de30cdd1e4940e-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/d4edf1f36dcf45adb8de30cdd1e4940e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1564.36 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.35599
Cbc0038I Pass   1: suminf.    0.37889 (1) obj. 1690.34 iterations 5
Cbc0038I Solution found of 1814.55
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 24 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 1789.53
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.37889 (1) obj. 1690.34 iterations 0
Cbc0038I Pass   3: suminf.    0.07491 (1) obj. 1789.53 iterations 3
Cbc0038I Pass   4: suminf.    0.49664 (1) obj. 1648.68 iterations 1
Cbc0038I Pass   5: suminf.    0.13309 (1) obj. 1789.53 iterations 11
Cbc0038I Pass   6: suminf.    0.13309 (1) obj. 1789.53 iterations 2
Cbc0038I Pass   7: suminf.    0.48372 (1) obj. 1672.43 iterations 1
Cbc0038I Pass   8: suminf.    0.48775 (2) obj. 1789.53 iterations 11
Cbc0038I Pass   9: suminf.    0.43247 (1) obj. 1789.53 iterations 4
Cbc0038I Pass  10: suminf.    0.48643 (1) obj. 1771.51 iterations 1
Cbc0038I Pass  11: suminf.    0.99489 (4) obj. 1789.53 iterations 11
Cbc0038I Pass  12: suminf.    0.52060 (2) obj. 1766.93 iterations 6
Cbc0038I Pass  13: suminf.    0.53305 (3) obj. 1789.53 iterations 6
Cbc0038I Pass  14: suminf.    0.41035 (2) obj. 1789.53 iterations 2
Cbc0038I Pass  15: suminf.    0.77407 (2) obj. 1789.53 iterations 3
Cbc0038I Pass  16: suminf.    0.57555 (2) obj. 1723.31 iterations 3
Cbc0038I Pass  17: suminf.    0.77407 (2) obj. 1789.53 iterations 1
Cbc0038I Pass  18: suminf.    0.99235 (4) obj. 1789.53 iterations 13
Cbc0038I Pass  19: suminf.    0.99235 (4) obj. 1789.53 iterations 1
Cbc0038I Solution found of 1671.17
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 1649.8
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 3
Cbc0038I Pass  20: suminf.    0.78187 (3) obj. 1649.8 iterations 3
Cbc0038I Pass  21: suminf.    0.50221 (2) obj. 1649.8 iterations 5
Cbc0038I Pass  22: suminf.    0.49329 (1) obj. 1649.8 iterations 1
Cbc0038I Pass  23: suminf.    0.49664 (1) obj. 1648.68 iterations 1
Cbc0038I Pass  24: suminf.    0.78487 (3) obj. 1649.8 iterations 10
Cbc0038I Pass  25: suminf.    0.35945 (1) obj. 1635.93 iterations 6
Cbc0038I Pass  26: suminf.    0.31808 (1) obj. 1649.8 iterations 1
Cbc0038I Pass  27: suminf.    0.45457 (4) obj. 1649.8 iterations 9
Cbc0038I Pass  28: suminf.    0.31808 (1) obj. 1649.8 iterations 10
Cbc0038I Pass  29: suminf.    0.44809 (4) obj. 1649.8 iterations 8
Cbc0038I Pass  30: suminf.    0.44809 (4) obj. 1649.8 iterations 0
Cbc0038I Pass  31: suminf.    0.78187 (3) obj. 1649.8 iterations 4
Cbc0038I Pass  32: suminf.    0.50221 (2) obj. 1649.8 iterations 5
Cbc0038I Pass  33: suminf.    0.49329 (1) obj. 1649.8 iterations 1
Cbc0038I Pass  34: suminf.    0.49664 (1) obj. 1648.68 iterations 1
Cbc0038I Pass  35: suminf.    0.84398 (3) obj. 1649.8 iterations 8
Cbc0038I Pass  36: suminf.    0.84398 (3) obj. 1649.8 iterations 0
Cbc0038I Pass  37: suminf.    0.82621 (2) obj. 1596.23 iterations 5
Cbc0038I Pass  38: suminf.    0.65508 (3) obj. 1649.8 iterations 6
Cbc0038I Pass  39: suminf.    0.50221 (2) obj. 1649.8 iterations 6
Cbc0038I Pass  40: suminf.    0.49329 (1) obj. 1649.8 iterations 1
Cbc0038I Pass  41: suminf.    0.49664 (1) obj. 1648.68 iterations 1
Cbc0038I Pass  42: suminf.    1.12080 (3) obj. 1564.36 iterations 5
Cbc0038I Pass  43: suminf.    0.78187 (3) obj. 1649.8 iterations 5
Cbc0038I Pass  44: suminf.    0.85983 (3) obj. 1649.8 iterations 5
Cbc0038I Pass  45: suminf.    0.27015 (1) obj. 1633.55 iterations 6
Cbc0038I Pass  46: suminf.    0.44456 (2) obj. 1649.8 iterations 3
Cbc0038I Pass  47: suminf.    0.94279 (3) obj. 1649.8 iterations 7
Cbc0038I Pass  48: suminf.    0.66002 (3) obj. 1649.8 iterations 4
Cbc0038I Pass  49: suminf.    1.12080 (3) obj. 1564.36 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 1671.17 - took 0.01 seconds
Cbc0012I Integer solution of 1671.1669 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 5 columns
Cbc0031I 8 added rows had average density of 19.5
Cbc0013I At root node, 8 cuts changed objective from 1564.3554 to 1663.97 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 40 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 123 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective 1671.16688510716, took 102 iterations and 0 nodes (0.04 seconds)
Cbc0032I Strong branching done 26 times (119 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 32 variables fixed on reduced cost
Cuts at root node changed objective from 1564.36 to 1683.57
Probing was tried 11 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 11 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 11 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 11 times and created 40 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 11 times and created 123 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1671.16688511
Enumerated nodes:               0
Total iterations:               102
Time (CPU seconds):             0.03
Time (Wallclock seconds):       0.04

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

initial land use distribution [2, 0, 2, 2, 0, 1, 1, 0, 1, 2, 2, 1, 2, 0, 1, 1, 2, 0, 2, 0, 0, 0, 1, 2, 0]
Optimized Land Use with benefits restriction: [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 2, 0, 1, 0, 2, 2, 2, 2, 1, 2]
Initial total costs: 5764.447868109597
Optimized total costs: 1671.1668851071151
Initial total benefit1/ES1: 86.1763216417763
Optimized total benefit1/ES1: 86.24733450482321
Initial total Benefit2/ES2: 99.33127029813635
Optimized total benefit2/ES2: 99.75790829615887
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/5220be91fdea474188d6f7bc4443429e-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/5220be91fdea474188d6f7bc4443429e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1472.89 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.10409
Cbc0038I Pass   1: suminf.    0.41074 (1) obj. 1646.77 iterations 8
Cbc0038I Solution found of 1880.01
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 1880.01 to 1782.6 (0.01 seconds)
Cbc0038I Round again with cutoff of 1751.63
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.41074 (1) obj. 1646.77 iterations 0
Cbc0038I Pass   3: suminf.    0.32435 (1) obj. 1751.63 iterations 3
Cbc0038I Pass   4: suminf.    1.40051 (4) obj. 1751.63 iterations 12
Cbc0038I Pass   5: suminf.    0.30059 (1) obj. 1665.47 iterations 2
Cbc0038I Solution found of 1743.82
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 21 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 1689.64
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 3
Cbc0038I Pass   6: suminf.    0.41074 (1) obj. 1646.77 iterations 0
Cbc0038I Pass   7: suminf.    0.48097 (1) obj. 1689.64 iterations 3
Cbc0038I Pass   8: suminf.    0.47976 (3) obj. 1689.64 iterations 11
Cbc0038I Pass   9: suminf.    0.47976 (3) obj. 1689.64 iterations 1
Cbc0038I Pass  10: suminf.    1.10495 (3) obj. 1651.31 iterations 8
Cbc0038I Pass  11: suminf.    0.65205 (3) obj. 1689.64 iterations 9
Cbc0038I Pass  12: suminf.    1.23503 (3) obj. 1689.64 iterations 7
Cbc0038I Pass  13: suminf.    0.41074 (1) obj. 1646.77 iterations 7
Cbc0038I Pass  14: suminf.    0.48097 (1) obj. 1689.64 iterations 4
Cbc0038I Pass  15: suminf.    2.11334 (5) obj. 1689.64 iterations 13
Cbc0038I Pass  16: suminf.    0.44271 (1) obj. 1672.39 iterations 3
Cbc0038I Pass  17: suminf.    0.39913 (1) obj. 1689.64 iterations 3
Cbc0038I Pass  18: suminf.    0.88774 (3) obj. 1689.64 iterations 7
Cbc0038I Pass  19: suminf.    0.02935 (1) obj. 1673.25 iterations 5
Cbc0038I Pass  20: suminf.    0.07074 (1) obj. 1689.64 iterations 3
Cbc0038I Pass  21: suminf.    1.27142 (4) obj. 1689.64 iterations 7
Cbc0038I Pass  22: suminf.    0.29902 (1) obj. 1681.1 iterations 4
Cbc0038I Pass  23: suminf.    0.26088 (1) obj. 1689.64 iterations 3
Cbc0038I Pass  24: suminf.    0.26262 (1) obj. 1689.17 iterations 3
Cbc0038I Pass  25: suminf.    0.46364 (3) obj. 1689.64 iterations 8
Cbc0038I Pass  26: suminf.    0.45727 (3) obj. 1689.64 iterations 3
Cbc0038I Pass  27: suminf.    0.41491 (2) obj. 1689.64 iterations 7
Cbc0038I Pass  28: suminf.    0.41257 (3) obj. 1689.64 iterations 1
Cbc0038I Pass  29: suminf.    1.04491 (3) obj. 1689.64 iterations 3
Cbc0038I Pass  30: suminf.    0.17408 (1) obj. 1651.69 iterations 7
Cbc0038I Pass  31: suminf.    0.27836 (1) obj. 1689.64 iterations 3
Cbc0038I Pass  32: suminf.    1.38527 (3) obj. 1689.64 iterations 15
Cbc0038I Pass  33: suminf.    1.38527 (3) obj. 1689.64 iterations 0
Cbc0038I Pass  34: suminf.    0.74462 (3) obj. 1662.89 iterations 9
Cbc0038I Pass  35: suminf.    0.48724 (3) obj. 1689.64 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 13 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 1743.82 to 1647.05 (0.02 seconds)
Cbc0038I Round again with cutoff of 1594.81
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 4
Cbc0038I Pass  35: suminf.    0.59476 (3) obj. 1594.81 iterations 4
Cbc0038I Pass  36: suminf.    1.26767 (3) obj. 1594.81 iterations 6
Cbc0038I Pass  37: suminf.    0.64442 (3) obj. 1594.81 iterations 5
Cbc0038I Pass  38: suminf.    1.08693 (3) obj. 1594.81 iterations 4
Cbc0038I Pass  39: suminf.    1.00661 (3) obj. 1594.81 iterations 6
Cbc0038I Pass  40: suminf.    1.00661 (3) obj. 1594.81 iterations 1
Cbc0038I Pass  41: suminf.    1.13104 (4) obj. 1594.81 iterations 5
Cbc0038I Pass  42: suminf.    0.90038 (3) obj. 1594.81 iterations 1
Cbc0038I Pass  43: suminf.    0.90139 (2) obj. 1594.81 iterations 3
Cbc0038I Pass  44: suminf.    0.72189 (2) obj. 1548.74 iterations 2
Cbc0038I Pass  45: suminf.    0.90139 (2) obj. 1594.81 iterations 3
Cbc0038I Pass  46: suminf.    1.35617 (3) obj. 1564.05 iterations 7
Cbc0038I Pass  47: suminf.    1.11555 (3) obj. 1594.81 iterations 5
Cbc0038I Pass  48: suminf.    0.51368 (3) obj. 1594.81 iterations 5
Cbc0038I Pass  49: suminf.    0.46956 (2) obj. 1594.81 iterations 3
Cbc0038I Pass  50: suminf.    0.77584 (3) obj. 1594.81 iterations 3
Cbc0038I Pass  51: suminf.    1.07095 (4) obj. 1594.81 iterations 8
Cbc0038I Pass  52: suminf.    0.43208 (2) obj. 1583.58 iterations 5
Cbc0038I Pass  53: suminf.    0.47296 (2) obj. 1594.81 iterations 4
Cbc0038I Pass  54: suminf.    0.51975 (3) obj. 1594.81 iterations 4
Cbc0038I Pass  55: suminf.    0.37612 (3) obj. 1594.81 iterations 10
Cbc0038I Pass  56: suminf.    0.37612 (3) obj. 1594.81 iterations 3
Cbc0038I Pass  57: suminf.    0.41479 (3) obj. 1594.81 iterations 8
Cbc0038I Pass  58: suminf.    0.41479 (3) obj. 1594.81 iterations 0
Cbc0038I Pass  59: suminf.    0.92659 (3) obj. 1594.81 iterations 7
Cbc0038I Pass  60: suminf.    0.92659 (3) obj. 1594.81 iterations 0
Cbc0038I Pass  61: suminf.    0.45023 (3) obj. 1594.81 iterations 9
Cbc0038I Pass  62: suminf.    0.34409 (3) obj. 1594.81 iterations 6
Cbc0038I Pass  63: suminf.    0.57440 (3) obj. 1594.81 iterations 4
Cbc0038I Pass  64: suminf.    0.34409 (3) obj. 1594.81 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 13 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 1647.05 to 1553.57 (0.03 seconds)
Cbc0038I Round again with cutoff of 1529.36
Cbc0038I Reduced cost fixing fixed 38 variables on major pass 5
Cbc0038I Pass  64: suminf.    0.86661 (2) obj. 1481.23 iterations 1
Cbc0038I Pass  65: suminf.    0.87413 (3) obj. 1529.36 iterations 9
Cbc0038I Pass  66: suminf.    0.95999 (3) obj. 1529.36 iterations 4
Cbc0038I Pass  67: suminf.    0.93007 (3) obj. 1529.36 iterations 6
Cbc0038I Pass  68: suminf.    0.93007 (3) obj. 1529.36 iterations 2
Cbc0038I Pass  69: suminf.    0.99607 (2) obj. 1498.42 iterations 4
Cbc0038I Pass  70: suminf.    0.89024 (3) obj. 1529.36 iterations 3
Cbc0038I Pass  71: suminf.    1.07167 (4) obj. 1529.36 iterations 3
Cbc0038I Pass  72: suminf.    0.72151 (3) obj. 1529.36 iterations 3
Cbc0038I Pass  73: suminf.    1.02104 (3) obj. 1472.89 iterations 8
Cbc0038I Pass  74: suminf.    0.86661 (2) obj. 1481.23 iterations 2
Cbc0038I Pass  75: suminf.    0.87413 (3) obj. 1529.36 iterations 8
Cbc0038I Pass  76: suminf.    0.95999 (3) obj. 1529.36 iterations 4
Cbc0038I Pass  77: suminf.    1.13587 (3) obj. 1529.36 iterations 1
Cbc0038I Pass  78: suminf.    1.24570 (3) obj. 1529.36 iterations 4
Cbc0038I Pass  79: suminf.    0.88036 (3) obj. 1529.36 iterations 3
Cbc0038I Pass  80: suminf.    0.88036 (3) obj. 1529.36 iterations 1
Cbc0038I Pass  81: suminf.    1.25324 (3) obj. 1508.03 iterations 7
Cbc0038I Pass  82: suminf.    1.13587 (3) obj. 1529.36 iterations 4
Cbc0038I Pass  83: suminf.    1.24570 (3) obj. 1529.36 iterations 4
Cbc0038I Pass  84: suminf.    0.88036 (3) obj. 1529.36 iterations 3
Cbc0038I Pass  85: suminf.    0.88036 (3) obj. 1529.36 iterations 1
Cbc0038I Pass  86: suminf.    1.25324 (3) obj. 1508.03 iterations 7
Cbc0038I Pass  87: suminf.    1.13587 (3) obj. 1529.36 iterations 4
Cbc0038I Pass  88: suminf.    1.24570 (3) obj. 1529.36 iterations 4
Cbc0038I Pass  89: suminf.    0.88036 (3) obj. 1529.36 iterations 3
Cbc0038I Pass  90: suminf.    0.88036 (3) obj. 1529.36 iterations 1
Cbc0038I Pass  91: suminf.    1.25324 (3) obj. 1508.03 iterations 7
Cbc0038I Pass  92: suminf.    1.13587 (3) obj. 1529.36 iterations 4
Cbc0038I Pass  93: suminf.    1.24570 (3) obj. 1529.36 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 20 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 1553.57 - took 0.03 seconds
Cbc0012I Integer solution of 1553.5678 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 2 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 1472.8905 to 1472.8905 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 1553.56783776291, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 36 variables fixed on reduced cost
Cuts at root node changed objective from 1472.89 to 1472.89
Probing was tried 1 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1553.56783776
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.03
Time (Wallclock seconds):       0.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

initial land use distribution [0, 0, 2, 0, 0, 1, 0, 1, 2, 1, 0, 2, 0, 0, 1, 2, 0, 1, 2, 2, 2, 2, 0, 0, 1]
Optimized Land Use with benefits restriction: [0, 0, 0, 0, 1, 0, 2, 0, 2, 0, 2, 2, 2, 0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0]
Initial total costs: 3932.0903668623982
Optimized total costs: 1553.5678377629822
Initial total benefit1/ES1: 76.45421173468637
Optimized total benefit1/ES1: 76.49162103218656
Initial total Benefit2/ES2: 87.84101236094861
Optimized total benefit2/ES2: 88.64066328435916
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/6cd4b145a42f4148bbd57c1a20c2a682-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/6cd4b145a42f4148bbd57c1a20c2a682-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3153.44 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.587329
Cbc0038I Pass   1: suminf.    0.28715 (1) obj. 3156.46 iterations 4
Cbc0038I Solution found of 3473.8
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 24 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 3441.77
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.28715 (1) obj. 3156.46 iterations 0
Cbc0038I Pass   3: suminf.    0.07196 (1) obj. 3441.77 iterations 3
Cbc0038I Pass   4: suminf.    1.35048 (5) obj. 3441.77 iterations 11
Cbc0038I Pass   5: suminf.    0.23648 (3) obj. 3441.77 iterations 10
Cbc0038I Pass   6: suminf.    0.06908 (1) obj. 3441.77 iterations 10
Cbc0038I Pass   7: suminf.    0.45279 (1) obj. 3270.95 iterations 1
Cbc0038I Pass   8: suminf.    0.35272 (3) obj. 3441.77 iterations 14
Cbc0038I Pass   9: suminf.    0.06367 (1) obj. 3422.71 iterations 3
Cbc0038I Pass  10: suminf.    0.49520 (1) obj. 3441.77 iterations 6
Cbc0038I Solution found of 3220.85
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 19 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 3220.85 to 3212.93 (0.01 seconds)
Cbc0038I Round again with cutoff of 3201.03
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  11: suminf.    0.28715 (1) obj. 3156.46 iterations 0
Cbc0038I Pass  12: suminf.    0.38728 (1) obj. 3201.03 iterations 1
Cbc0038I Pass  13: suminf.    0.61757 (4) obj. 3201.03 iterations 10
Cbc0038I Pass  14: suminf.    0.02673 (1) obj. 3201.03 iterations 7
Cbc0038I Pass  15: suminf.    0.06312 (1) obj. 3184.83 iterations 1
Cbc0038I Pass  16: suminf.    1.07912 (4) obj. 3201.03 iterations 6
Cbc0038I Pass  17: suminf.    1.07912 (4) obj. 3201.03 iterations 0
Cbc0038I Pass  18: suminf.    0.88967 (3) obj. 3201.03 iterations 3
Cbc0038I Pass  19: suminf.    0.28715 (1) obj. 3156.46 iterations 3
Cbc0038I Pass  20: suminf.    0.38728 (1) obj. 3201.03 iterations 1
Cbc0038I Pass  21: suminf.    0.88143 (4) obj. 3201.03 iterations 6
Cbc0038I Pass  22: suminf.    0.49076 (2) obj. 3201.03 iterations 3
Cbc0038I Pass  23: suminf.    0.28715 (1) obj. 3156.46 iterations 2
Cbc0038I Pass  24: suminf.    0.12090 (3) obj. 3201.03 iterations 7
Cbc0038I Pass  25: suminf.    0.04452 (1) obj. 3201.03 iterations 5
Cbc0038I Pass  26: suminf.    0.10008 (1) obj. 3176.3 iterations 1
Cbc0038I Pass  27: suminf.    0.38728 (1) obj. 3201.03 iterations 3
Cbc0038I Pass  28: suminf.    0.28715 (1) obj. 3156.46 iterations 2
Cbc0038I Pass  29: suminf.    0.38728 (1) obj. 3201.03 iterations 1
Cbc0038I Pass  30: suminf.    0.83549 (3) obj. 3201.03 iterations 2
Cbc0038I Pass  31: suminf.    0.49076 (2) obj. 3201.03 iterations 3
Cbc0038I Pass  32: suminf.    0.28715 (1) obj. 3156.46 iterations 2
Cbc0038I Pass  33: suminf.    1.07912 (4) obj. 3201.03 iterations 6
Cbc0038I Pass  34: suminf.    1.07912 (4) obj. 3201.03 iterations 0
Cbc0038I Pass  35: suminf.    0.88967 (3) obj. 3201.03 iterations 4
Cbc0038I Pass  36: suminf.    0.28715 (1) obj. 3156.46 iterations 3
Cbc0038I Pass  37: suminf.    0.38728 (1) obj. 3201.03 iterations 1
Cbc0038I Pass  38: suminf.    0.02673 (1) obj. 3201.03 iterations 2
Cbc0038I Pass  39: suminf.    0.02673 (1) obj. 3201.03 iterations 1
Cbc0038I Pass  40: suminf.    0.06312 (1) obj. 3184.83 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 17 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 3212.93 - took 0.01 seconds
Cbc0012I Integer solution of 3212.9325 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0031I 9 added rows had average density of 18.222222
Cbc0013I At root node, 9 cuts changed objective from 3153.4401 to 3204.5248 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 29 row cuts average 28.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 88 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3212.9325 best solution, best possible 3204.5248 (0.03 seconds)
Cbc0001I Search completed - best objective 3212.93249605873, took 186 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 38 times (219 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 41 variables fixed on reduced cost
Cuts at root node changed objective from 3153.44 to 3204.52
Probing was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 22 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 22 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 22 times and created 76 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 22 times and created 248 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                3212.93249606
Enumerated nodes:               2
Total iterations:               186
Time (CPU seconds):             0.05
Time (Wallclock seconds):       0.05

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

initial land use distribution [1, 0, 2, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 0, 1, 1, 0, 1, 2]
Optimized Land Use with benefits restriction: [1, 2, 2, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 2, 1, 0, 1, 1, 1, 2, 1, 2, 1, 1]
Initial total costs: 5109.326616369682
Optimized total costs: 3212.932496058652
Initial total benefit1/ES1: 137.08006770801873
Optimized total benefit1/ES1: 137.78966261342134
Initial total Benefit2/ES2: 78.56538931015615
Optimized total benefit2/ES2: 78.95711373953591
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/98bde97f54c940a199341ec6aa73d303-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/98bde97f54c940a199341ec6aa73d303-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1823.74 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.904619
Cbc0038I Pass   1: suminf.    0.39287 (1) obj. 1910.46 iterations 4
Cbc0038I Solution found of 2175.9
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 2175.9 to 2044.02 (0.01 seconds)
Cbc0038I Round again with cutoff of 2021.99
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.39287 (1) obj. 1910.46 iterations 0
Cbc0038I Pass   3: suminf.    0.35203 (1) obj. 2021.99 iterations 1
Cbc0038I Pass   4: suminf.    1.04103 (3) obj. 2021.99 iterations 9
Cbc0038I Pass   5: suminf.    1.04103 (3) obj. 2021.99 iterations 0
Cbc0038I Pass   6: suminf.    0.46649 (1) obj. 2021.99 iterations 5
Cbc0038I Pass   7: suminf.    0.18472 (1) obj. 1898.8 iterations 1
Cbc0038I Pass   8: suminf.    0.93964 (3) obj. 2021.99 iterations 12
Cbc0038I Pass   9: suminf.    0.34164 (1) obj. 1990 iterations 7
Cbc0038I Pass  10: suminf.    0.54014 (2) obj. 2021.99 iterations 4
Cbc0038I Pass  11: suminf.    1.21106 (3) obj. 2021.99 iterations 6
Cbc0038I Pass  12: suminf.    0.59299 (2) obj. 2021.99 iterations 4
Cbc0038I Pass  13: suminf.    0.59299 (2) obj. 2021.99 iterations 0
Cbc0038I Pass  14: suminf.    1.02663 (3) obj. 2021.99 iterations 11
Cbc0038I Pass  15: suminf.    0.76128 (3) obj. 2021.99 iterations 3
Cbc0038I Pass  16: suminf.    0.43602 (1) obj. 1967.55 iterations 4
Cbc0038I Pass  17: suminf.    0.26819 (1) obj. 2021.99 iterations 2
Cbc0038I Pass  18: suminf.    0.41631 (3) obj. 2021.99 iterations 10
Cbc0038I Pass  19: suminf.    0.41631 (3) obj. 2021.99 iterations 0
Cbc0038I Pass  20: suminf.    0.45172 (2) obj. 2021.99 iterations 7
Cbc0038I Pass  21: suminf.    0.45069 (3) obj. 2021.99 iterations 3
Cbc0038I Pass  22: suminf.    0.56251 (3) obj. 2021.99 iterations 7
Cbc0038I Pass  23: suminf.    0.54623 (4) obj. 2021.99 iterations 7
Cbc0038I Pass  24: suminf.    0.30877 (1) obj. 1997.54 iterations 3
Cbc0038I Pass  25: suminf.    0.55192 (2) obj. 2021.99 iterations 3
Cbc0038I Pass  26: suminf.    1.59873 (4) obj. 2021.99 iterations 14
Cbc0038I Pass  27: suminf.    0.65056 (3) obj. 2021.99 iterations 2
Cbc0038I Pass  28: suminf.    0.56337 (2) obj. 2021.99 iterations 3
Cbc0038I Pass  29: suminf.    0.50792 (3) obj. 2021.99 iterations 7
Cbc0038I Pass  30: suminf.    0.43213 (2) obj. 2021.99 iterations 4
Cbc0038I Pass  31: suminf.    0.37606 (1) obj. 2008.22 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 10 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 2044.02 to 1932.36 (0.02 seconds)
Cbc0038I Round again with cutoff of 1910.63
Cbc0038I Reduced cost fixing fixed 33 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.41224 (1) obj. 1872.41 iterations 4
Cbc0038I Pass  32: suminf.    0.46992 (1) obj. 1910.63 iterations 1
Cbc0038I Pass  33: suminf.    0.20165 (1) obj. 1898.65 iterations 4
Cbc0038I Pass  34: suminf.    0.28546 (1) obj. 1910.63 iterations 2
Cbc0038I Pass  35: suminf.    0.19383 (1) obj. 1880.91 iterations 1
Cbc0038I Pass  36: suminf.    0.43686 (1) obj. 1910.63 iterations 3
Cbc0038I Pass  37: suminf.    0.68275 (3) obj. 1889.51 iterations 11
Cbc0038I Pass  38: suminf.    0.54546 (2) obj. 1910.63 iterations 4
Cbc0038I Pass  39: suminf.    0.72481 (2) obj. 1910.63 iterations 4
Cbc0038I Pass  40: suminf.    0.55064 (2) obj. 1910.63 iterations 2
Cbc0038I Pass  41: suminf.    0.86571 (2) obj. 1862.13 iterations 3
Cbc0038I Pass  42: suminf.    0.55064 (2) obj. 1910.63 iterations 4
Cbc0038I Pass  43: suminf.    0.53506 (2) obj. 1910.63 iterations 5
Cbc0038I Pass  44: suminf.    0.52756 (2) obj. 1910.63 iterations 2
Cbc0038I Pass  45: suminf.    0.56919 (2) obj. 1898.87 iterations 1
Cbc0038I Pass  46: suminf.    0.47994 (2) obj. 1905.81 iterations 7
Cbc0038I Pass  47: suminf.    0.45647 (2) obj. 1910.63 iterations 1
Cbc0038I Pass  48: suminf.    1.11180 (3) obj. 1910.63 iterations 3
Cbc0038I Pass  49: suminf.    0.54830 (3) obj. 1910.63 iterations 6
Cbc0038I Pass  50: suminf.    0.70473 (3) obj. 1910.63 iterations 3
Cbc0038I Pass  51: suminf.    0.33630 (2) obj. 1910.63 iterations 4
Cbc0038I Pass  52: suminf.    0.46495 (2) obj. 1889.86 iterations 2
Cbc0038I Pass  53: suminf.    0.39146 (2) obj. 1910.63 iterations 1
Cbc0038I Pass  54: suminf.    0.74928 (3) obj. 1910.63 iterations 4
Cbc0038I Pass  55: suminf.    0.26638 (2) obj. 1910.63 iterations 4
Cbc0038I Pass  56: suminf.    0.36974 (2) obj. 1897.18 iterations 2
Cbc0038I Pass  57: suminf.    0.32215 (2) obj. 1910.63 iterations 1
Cbc0038I Pass  58: suminf.    1.34965 (3) obj. 1910.63 iterations 7
Cbc0038I Pass  59: suminf.    1.34965 (3) obj. 1910.63 iterations 1
Cbc0038I Pass  60: suminf.    0.45711 (3) obj. 1910.63 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 14 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 1932.36 - took 0.02 seconds
Cbc0012I Integer solution of 1932.3562 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 5 columns
Cbc0031I 10 added rows had average density of 36.6
Cbc0013I At root node, 10 cuts changed objective from 1823.7437 to 1890.4258 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 29 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 56 row cuts average 33.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 129 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1932.3562 best solution, best possible 1890.4258 (0.05 seconds)
Cbc0001I Search completed - best objective 1932.356197965287, took 853 iterations and 22 nodes (0.18 seconds)
Cbc0032I Strong branching done 366 times (1489 iterations), fathomed 9 nodes and fixed 5 variables
Cbc0035I Maximum depth 4, 61 variables fixed on reduced cost
Cuts at root node changed objective from 1823.74 to 1890.43
Probing was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 152 times and created 223 cuts of which 0 were active after adding rounds of cuts (0.063 seconds)
Clique was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 152 times and created 585 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
FlowCover was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 152 times and created 449 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1932.35619797
Enumerated nodes:               22
Total iterations:               853
Time (CPU seconds):             0.17
Time (Wallclock seconds):       0.18

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.18

initial land use distribution [0, 2, 2, 0, 2, 1, 2, 0, 1, 0, 2, 1, 2, 1, 0, 1, 1, 0, 2, 2, 2, 1, 0, 1, 2]
Optimized Land Use with benefits restriction: [0, 0, 2, 1, 0, 2, 0, 2, 0, 1, 1, 1, 0, 1, 2, 0, 0, 0, 2, 1, 2, 1, 2, 2, 0]
Initial total costs: 4456.95144464193
Optimized total costs: 1932.3561979650904
Initial total benefit1/ES1: 73.1264391386459
Optimized total benefit1/ES1: 76.89951755625239
Initial total Benefit2/ES2: 96.67857205912671
Optimized total benefit2/ES2: 96.89160138825002
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/ffaf112f02ec438da6975b465d78df86-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/ffaf112f02ec438da6975b465d78df86-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1643.72 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.958444
Cbc0038I Pass   1: suminf.    0.42771 (1) obj. 1812.42 iterations 4
Cbc0038I Solution found of 2074.93
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 2074.93 to 1771.82 (0.01 seconds)
Cbc0038I Round again with cutoff of 1759.01
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.57652 (3) obj. 1759.01 iterations 2
Cbc0038I Pass   3: suminf.    1.25912 (3) obj. 1759.01 iterations 3
Cbc0038I Pass   4: suminf.    0.78259 (3) obj. 1759.01 iterations 2
Cbc0038I Pass   5: suminf.    1.08621 (3) obj. 1759.01 iterations 3
Cbc0038I Pass   6: suminf.    0.96700 (3) obj. 1759.01 iterations 6
Cbc0038I Pass   7: suminf.    0.96700 (3) obj. 1759.01 iterations 1
Cbc0038I Pass   8: suminf.    1.21208 (3) obj. 1759.01 iterations 3
Cbc0038I Pass   9: suminf.    1.35624 (4) obj. 1759.01 iterations 4
Cbc0038I Pass  10: suminf.    1.35624 (4) obj. 1759.01 iterations 0
Cbc0038I Pass  11: suminf.    0.78259 (3) obj. 1759.01 iterations 6
Cbc0038I Pass  12: suminf.    1.08621 (3) obj. 1759.01 iterations 3
Cbc0038I Pass  13: suminf.    0.57652 (3) obj. 1759.01 iterations 2
Cbc0038I Pass  14: suminf.    1.25912 (3) obj. 1759.01 iterations 3
Cbc0038I Pass  15: suminf.    0.63240 (3) obj. 1759.01 iterations 15
Cbc0038I Pass  16: suminf.    0.59707 (2) obj. 1759.01 iterations 5
Cbc0038I Pass  17: suminf.    0.91923 (3) obj. 1759.01 iterations 7
Cbc0038I Pass  18: suminf.    0.94150 (3) obj. 1759.01 iterations 3
Cbc0038I Pass  19: suminf.    0.79878 (3) obj. 1759.01 iterations 4
Cbc0038I Pass  20: suminf.    1.11264 (3) obj. 1759.01 iterations 3
Cbc0038I Pass  21: suminf.    0.84361 (3) obj. 1759.01 iterations 6
Cbc0038I Pass  22: suminf.    0.29226 (2) obj. 1701.96 iterations 2
Cbc0038I Pass  23: suminf.    0.48249 (2) obj. 1759.01 iterations 4
Cbc0038I Pass  24: suminf.    0.09220 (2) obj. 1753.34 iterations 6
Cbc0038I Pass  25: suminf.    0.09220 (2) obj. 1753.34 iterations 0
Cbc0038I Pass  26: suminf.    0.54151 (3) obj. 1759.01 iterations 6
Cbc0038I Pass  27: suminf.    0.09220 (2) obj. 1753.34 iterations 5
Cbc0038I Pass  28: suminf.    1.54891 (4) obj. 1759.01 iterations 7
Cbc0038I Pass  29: suminf.    1.54891 (4) obj. 1759.01 iterations 1
Cbc0038I Pass  30: suminf.    1.09112 (3) obj. 1759.01 iterations 4
Cbc0038I Pass  31: suminf.    0.23756 (2) obj. 1684.27 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 11 columns
Cbc0038I Mini branch and bound improved solution from 1771.82 to 1770.93 (0.01 seconds)
Cbc0038I Round again with cutoff of 1735.96
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.91528 (3) obj. 1643.72 iterations 2
Cbc0038I Pass  32: suminf.    1.21499 (3) obj. 1735.96 iterations 6
Cbc0038I Pass  33: suminf.    0.37840 (3) obj. 1735.96 iterations 3
Cbc0038I Pass  34: suminf.    0.20662 (2) obj. 1735.96 iterations 2
Cbc0038I Pass  35: suminf.    1.21499 (3) obj. 1735.96 iterations 3
Cbc0038I Pass  36: suminf.    0.23760 (3) obj. 1735.96 iterations 2
Cbc0038I Pass  37: suminf.    0.14713 (3) obj. 1735.96 iterations 2
Cbc0038I Pass  38: suminf.    0.60182 (3) obj. 1735.96 iterations 3
Cbc0038I Pass  39: suminf.    0.33401 (4) obj. 1735.96 iterations 7
Cbc0038I Pass  40: suminf.    0.26986 (2) obj. 1735.96 iterations 4
Cbc0038I Pass  41: suminf.    0.33621 (3) obj. 1735.96 iterations 3
Cbc0038I Pass  42: suminf.    0.48095 (4) obj. 1735.96 iterations 7
Cbc0038I Pass  43: suminf.    0.28558 (3) obj. 1735.96 iterations 3
Cbc0038I Pass  44: suminf.    1.29606 (4) obj. 1735.96 iterations 8
Cbc0038I Pass  45: suminf.    1.29606 (4) obj. 1735.96 iterations 2
Cbc0038I Pass  46: suminf.    0.99291 (3) obj. 1678.67 iterations 6
Cbc0038I Pass  47: suminf.    0.99291 (3) obj. 1678.67 iterations 0
Cbc0038I Pass  48: suminf.    0.92936 (3) obj. 1735.96 iterations 5
Cbc0038I Pass  49: suminf.    0.26204 (3) obj. 1735.96 iterations 4
Cbc0038I Pass  50: suminf.    0.90595 (3) obj. 1735.96 iterations 4
Cbc0038I Pass  51: suminf.    0.41412 (2) obj. 1686.42 iterations 5
Cbc0038I Pass  52: suminf.    0.41337 (2) obj. 1735.96 iterations 6
Cbc0038I Pass  53: suminf.    0.41337 (2) obj. 1735.96 iterations 1
Cbc0038I Pass  54: suminf.    0.74478 (4) obj. 1735.96 iterations 6
Cbc0038I Pass  55: suminf.    0.66846 (3) obj. 1735.96 iterations 7
Cbc0038I Pass  56: suminf.    0.53243 (2) obj. 1731.89 iterations 6
Cbc0038I Pass  57: suminf.    0.54823 (2) obj. 1735.96 iterations 4
Cbc0038I Pass  58: suminf.    0.74648 (3) obj. 1735.96 iterations 7
Cbc0038I Pass  59: suminf.    0.53243 (2) obj. 1731.89 iterations 8
Cbc0038I Pass  60: suminf.    0.54823 (2) obj. 1735.96 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 1770.93 - took 0.02 seconds
Cbc0012I Integer solution of 1770.9305 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 4 columns
Cbc0031I 8 added rows had average density of 19.5
Cbc0013I At root node, 8 cuts changed objective from 1643.7225 to 1707.5985 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 29 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 49 row cuts average 24.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 101 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1770.9305 best solution, best possible 1707.5985 (0.04 seconds)
Cbc0001I Search completed - best objective 1770.93045346562, took 346 iterations and 10 nodes (0.08 seconds)
Cbc0032I Strong branching done 112 times (414 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 50 variables fixed on reduced cost
Cuts at root node changed objective from 1643.72 to 1707.6
Probing was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 54 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Knapsack was tried 54 times and created 125 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Clique was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 54 times and created 209 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 54 times and created 296 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1770.93045347
Enumerated nodes:               10
Total iterations:               346
Time (CPU seconds):             0.07
Time (Wallclock seconds):       0.08

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

initial land use distribution [2, 0, 1, 0, 1, 1, 2, 0, 0, 2, 1, 2, 1, 2, 0, 2, 2, 0, 1, 2, 1, 2, 2, 0, 0]
Optimized Land Use with benefits restriction: [0, 1, 0, 2, 2, 2, 0, 1, 2, 0, 1, 2, 0, 2, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 2]
Initial total costs: 6041.934155101598
Optimized total costs: 1770.9304534656758
Initial total benefit1/ES1: 63.13206195400727
Optimized total benefit1/ES1: 68.44291635473641
Initial total Benefit2/ES2: 75.42704468723633
Optimized total benefit2/ES2: 75.54092522138477
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/701e9142b1894663954af8657ab4daa1-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/701e9142b1894663954af8657ab4daa1-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2750.02 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.37905
Cbc0038I Pass   1: suminf.    0.26679 (1) obj. 2938.02 iterations 16
Cbc0038I Solution found of 3263.45
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 3263.45 to 3010.41 (0.01 seconds)
Cbc0038I Round again with cutoff of 2984.37
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.26679 (1) obj. 2938.02 iterations 0
Cbc0038I Pass   3: suminf.    0.37123 (1) obj. 2984.37 iterations 4
Cbc0038I Pass   4: suminf.    0.89299 (3) obj. 2984.37 iterations 13
Cbc0038I Pass   5: suminf.    0.42248 (2) obj. 2984.37 iterations 9
Cbc0038I Pass   6: suminf.    0.18680 (1) obj. 2984.37 iterations 6
Cbc0038I Pass   7: suminf.    0.18680 (1) obj. 2984.37 iterations 0
Cbc0038I Pass   8: suminf.    0.20777 (1) obj. 2976.72 iterations 3
Cbc0038I Pass   9: suminf.    0.89649 (3) obj. 2984.37 iterations 15
Cbc0038I Pass  10: suminf.    0.88162 (3) obj. 2984.37 iterations 6
Cbc0038I Pass  11: suminf.    1.31778 (3) obj. 2984.37 iterations 7
Cbc0038I Pass  12: suminf.    0.57472 (3) obj. 2984.37 iterations 5
Cbc0038I Pass  13: suminf.    1.17953 (3) obj. 2984.37 iterations 4
Cbc0038I Pass  14: suminf.    0.56952 (5) obj. 2984.37 iterations 11
Cbc0038I Solution found of 2965.9
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 2965.9 to 2832.5 (0.01 seconds)
Cbc0038I Round again with cutoff of 2816
Cbc0038I Reduced cost fixing fixed 28 variables on major pass 3
Cbc0038I Pass  15: suminf.    0.70887 (3) obj. 2816 iterations 6
Cbc0038I Pass  16: suminf.    0.84611 (3) obj. 2816 iterations 7
Cbc0038I Pass  17: suminf.    0.73409 (2) obj. 2816 iterations 3
Cbc0038I Pass  18: suminf.    0.92501 (2) obj. 2816 iterations 2
Cbc0038I Pass  19: suminf.    0.85191 (2) obj. 2789.32 iterations 1
Cbc0038I Pass  20: suminf.    0.73409 (2) obj. 2816 iterations 2
Cbc0038I Pass  21: suminf.    0.99786 (3) obj. 2816 iterations 9
Cbc0038I Pass  22: suminf.    0.97386 (4) obj. 2816 iterations 12
Cbc0038I Pass  23: suminf.    0.99786 (3) obj. 2816 iterations 9
Cbc0038I Pass  24: suminf.    0.27245 (3) obj. 2816 iterations 4
Cbc0038I Pass  25: suminf.    0.12661 (1) obj. 2816 iterations 7
Cbc0038I Pass  26: suminf.    0.15321 (2) obj. 2808.22 iterations 4
Cbc0038I Pass  27: suminf.    0.42377 (4) obj. 2816 iterations 9
Cbc0038I Pass  28: suminf.    1.75006 (4) obj. 2816 iterations 8
Cbc0038I Pass  29: suminf.    1.40898 (4) obj. 2816 iterations 8
Cbc0038I Pass  30: suminf.    0.65609 (2) obj. 2816 iterations 7
Cbc0038I Pass  31: suminf.    0.56240 (2) obj. 2816 iterations 2
Cbc0038I Pass  32: suminf.    0.65609 (2) obj. 2816 iterations 2
Cbc0038I Pass  33: suminf.    0.56240 (2) obj. 2816 iterations 4
Cbc0038I Pass  34: suminf.    1.15297 (5) obj. 2816 iterations 8
Cbc0038I Pass  35: suminf.    0.76300 (3) obj. 2816 iterations 6
Cbc0038I Pass  36: suminf.    0.82129 (3) obj. 2816 iterations 4
Cbc0038I Pass  37: suminf.    0.85635 (3) obj. 2801.1 iterations 12
Cbc0038I Pass  38: suminf.    0.60090 (3) obj. 2816 iterations 5
Cbc0038I Pass  39: suminf.    1.35324 (5) obj. 2816 iterations 8
Cbc0038I Pass  40: suminf.    0.97386 (4) obj. 2816 iterations 5
Cbc0038I Pass  41: suminf.    0.99786 (3) obj. 2816 iterations 7
Cbc0038I Pass  42: suminf.    0.97386 (4) obj. 2816 iterations 11
Cbc0038I Pass  43: suminf.    1.21872 (4) obj. 2816 iterations 9
Cbc0038I Pass  44: suminf.    1.10794 (3) obj. 2816 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 8 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2832.5 - took 0.02 seconds
Cbc0012I Integer solution of 2832.4985 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 2 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 14.333333
Cbc0013I At root node, 7 cuts changed objective from 2750.0225 to 2832.4985 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 11.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 6 row cuts average 48.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 40 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective 2832.498455632679, took 30 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 37 variables fixed on reduced cost
Cuts at root node changed objective from 2750.02 to 2832.5
Probing was tried 4 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 40 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2832.49845563
Enumerated nodes:               0
Total iterations:               30
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

initial land use distribution [2, 2, 2, 1, 0, 1, 1, 2, 2, 2, 0, 1, 0, 2, 0, 1, 0, 1, 1, 1, 2, 1, 1, 2, 0]
Optimized Land Use with benefits restriction: [0, 2, 1, 1, 0, 1, 2, 0, 2, 2, 0, 2, 1, 1, 2, 0, 1, 0, 2, 2, 0, 1, 0, 2, 1]
Initial total costs: 5152.173262256708
Optimized total costs: 2832.4984556326363
Initial total benefit1/ES1: 103.80801678893825
Optimized total benefit1/ES1: 104.1002417212465
Initial total Benefit2/ES2: 98.51761431414718
Optimized total benefit2/ES2: 100.92259386243818
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/a37cc3f52be44f9ebb42c79545ce2b3c-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/a37cc3f52be44f9ebb42c79545ce2b3c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2712.95 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.61781 (2) obj. 2712.95 iterations 3
Cbc0038I Pass   2: suminf.    0.10091 (2) obj. 2947.28 iterations 2
Cbc0038I Pass   3: suminf.    0.06484 (1) obj. 2982.36 iterations 9
Cbc0038I Solution found of 3294.51
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 3236.35
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    0.61781 (2) obj. 2712.95 iterations 0
Cbc0038I Pass   5: suminf.    0.10091 (2) obj. 2947.28 iterations 3
Cbc0038I Pass   6: suminf.    0.06484 (1) obj. 2982.36 iterations 10
Cbc0038I Pass   7: suminf.    0.11090 (1) obj. 3236.35 iterations 11
Cbc0038I Pass   8: suminf.    0.33852 (1) obj. 2947.62 iterations 1
Cbc0038I Pass   9: suminf.    0.43010 (2) obj. 3236.35 iterations 10
Cbc0038I Pass  10: suminf.    0.20541 (2) obj. 3236.35 iterations 7
Cbc0038I Pass  11: suminf.    0.36339 (1) obj. 3236.35 iterations 5
Cbc0038I Pass  12: suminf.    0.18594 (1) obj. 3047.61 iterations 3
Cbc0038I Pass  13: suminf.    0.62395 (3) obj. 3236.35 iterations 18
Cbc0038I Pass  14: suminf.    0.51760 (2) obj. 3236.35 iterations 11
Cbc0038I Solution found of 3230.04
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 3230.04 to 2969.02 (0.01 seconds)
Cbc0038I Round again with cutoff of 2917.81
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 3
Cbc0038I Pass  15: suminf.    0.61781 (2) obj. 2712.95 iterations 0
Cbc0038I Pass  16: suminf.    0.32237 (2) obj. 2917.81 iterations 3
Cbc0038I Pass  17: suminf.    0.18103 (2) obj. 2917.81 iterations 2
Cbc0038I Pass  18: suminf.    0.43120 (1) obj. 2831.97 iterations 6
Cbc0038I Pass  19: suminf.    0.22795 (1) obj. 2917.81 iterations 4
Cbc0038I Pass  20: suminf.    0.31954 (1) obj. 2879.45 iterations 2
Cbc0038I Pass  21: suminf.    1.26600 (4) obj. 2917.81 iterations 13
Cbc0038I Pass  22: suminf.    0.26763 (2) obj. 2917.81 iterations 3
Cbc0038I Pass  23: suminf.    0.26763 (2) obj. 2917.81 iterations 0
Cbc0038I Pass  24: suminf.    1.21703 (3) obj. 2903.91 iterations 3
Cbc0038I Pass  25: suminf.    1.46878 (4) obj. 2917.81 iterations 8
Cbc0038I Pass  26: suminf.    0.36455 (1) obj. 2913.81 iterations 5
Cbc0038I Pass  27: suminf.    1.11907 (3) obj. 2917.81 iterations 7
Cbc0038I Pass  28: suminf.    0.47727 (2) obj. 2917.81 iterations 6
Cbc0038I Pass  29: suminf.    0.97864 (3) obj. 2917.81 iterations 3
Cbc0038I Pass  30: suminf.    0.55221 (2) obj. 2886.34 iterations 3
Cbc0038I Pass  31: suminf.    0.73787 (2) obj. 2917.81 iterations 1
Cbc0038I Pass  32: suminf.    0.55221 (2) obj. 2886.34 iterations 1
Cbc0038I Pass  33: suminf.    0.76389 (3) obj. 2917.81 iterations 3
Cbc0038I Pass  34: suminf.    0.55221 (2) obj. 2886.34 iterations 3
Cbc0038I Pass  35: suminf.    0.62486 (3) obj. 2904.42 iterations 3
Cbc0038I Pass  36: suminf.    0.48765 (4) obj. 2917.81 iterations 3
Cbc0038I Pass  37: suminf.    0.70745 (3) obj. 2917.81 iterations 7
Cbc0038I Pass  38: suminf.    0.70745 (3) obj. 2917.81 iterations 0
Cbc0038I Pass  39: suminf.    0.18598 (2) obj. 2917.81 iterations 5
Cbc0038I Pass  40: suminf.    0.14486 (1) obj. 2892.59 iterations 2
Cbc0038I Pass  41: suminf.    0.59365 (2) obj. 2917.81 iterations 2
Cbc0038I Pass  42: suminf.    0.40387 (3) obj. 2917.81 iterations 3
Cbc0038I Pass  43: suminf.    0.39852 (4) obj. 2917.81 iterations 3
Cbc0038I Pass  44: suminf.    0.37920 (1) obj. 2915.53 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 12 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 2969.02 to 2869.99 (0.02 seconds)
Cbc0038I Round again with cutoff of 2822.88
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 4
Cbc0038I Pass  44: suminf.    0.61781 (2) obj. 2712.95 iterations 0
Cbc0038I Pass  45: suminf.    0.96438 (2) obj. 2822.88 iterations 3
Cbc0038I Pass  46: suminf.    0.46369 (3) obj. 2822.88 iterations 5
Cbc0038I Pass  47: suminf.    0.19855 (2) obj. 2822.88 iterations 5
Cbc0038I Pass  48: suminf.    0.15193 (1) obj. 2794.29 iterations 2
Cbc0038I Pass  49: suminf.    0.59920 (2) obj. 2822.88 iterations 3
Cbc0038I Pass  50: suminf.    0.58910 (3) obj. 2822.88 iterations 3
Cbc0038I Pass  51: suminf.    0.55930 (4) obj. 2822.88 iterations 3
Cbc0038I Pass  52: suminf.    0.46369 (3) obj. 2822.88 iterations 3
Cbc0038I Pass  53: suminf.    0.19855 (2) obj. 2822.88 iterations 5
Cbc0038I Pass  54: suminf.    0.15193 (1) obj. 2794.29 iterations 2
Cbc0038I Pass  55: suminf.    0.59920 (2) obj. 2822.88 iterations 2
Cbc0038I Pass  56: suminf.    0.58910 (3) obj. 2822.88 iterations 3
Cbc0038I Pass  57: suminf.    0.55930 (4) obj. 2822.88 iterations 3
Cbc0038I Pass  58: suminf.    0.46369 (3) obj. 2822.88 iterations 3
Cbc0038I Pass  59: suminf.    0.19855 (2) obj. 2822.88 iterations 5
Cbc0038I Pass  60: suminf.    0.15193 (1) obj. 2794.29 iterations 2
Cbc0038I Pass  61: suminf.    0.59920 (2) obj. 2822.88 iterations 2
Cbc0038I Pass  62: suminf.    0.58910 (3) obj. 2822.88 iterations 3
Cbc0038I Pass  63: suminf.    0.55930 (4) obj. 2822.88 iterations 3
Cbc0038I Pass  64: suminf.    0.46369 (3) obj. 2822.88 iterations 3
Cbc0038I Pass  65: suminf.    0.19855 (2) obj. 2822.88 iterations 5
Cbc0038I Pass  66: suminf.    0.15193 (1) obj. 2794.29 iterations 2
Cbc0038I Pass  67: suminf.    0.59920 (2) obj. 2822.88 iterations 2
Cbc0038I Pass  68: suminf.    0.58910 (3) obj. 2822.88 iterations 3
Cbc0038I Pass  69: suminf.    0.55930 (4) obj. 2822.88 iterations 3
Cbc0038I Pass  70: suminf.    0.46369 (3) obj. 2822.88 iterations 3
Cbc0038I Pass  71: suminf.    0.19855 (2) obj. 2822.88 iterations 5
Cbc0038I Pass  72: suminf.    0.15193 (1) obj. 2794.29 iterations 2
Cbc0038I Pass  73: suminf.    0.59920 (2) obj. 2822.88 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 22 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2869.99 - took 0.02 seconds
Cbc0012I Integer solution of 2869.9882 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 3 columns
Cbc0031I 8 added rows had average density of 23.125
Cbc0013I At root node, 8 cuts changed objective from 2712.9465 to 2834.6802 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 41 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 94 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2869.9882 best solution, best possible 2835.26 (0.04 seconds)
Cbc0016I Integer solution of 2851.0058 found by strong branching after 177 iterations and 2 nodes (0.05 seconds)
Cbc0001I Search completed - best objective 2851.005849301266, took 177 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 30 times (92 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 43 variables fixed on reduced cost
Cuts at root node changed objective from 2712.95 to 2835.26
Probing was tried 15 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 29 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 29 times and created 56 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Clique was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 29 times and created 85 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 29 times and created 254 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2851.00584930
Enumerated nodes:               2
Total iterations:               177
Time (CPU seconds):             0.05
Time (Wallclock seconds):       0.05

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

initial land use distribution [1, 0, 0, 1, 2, 0, 0, 2, 0, 0, 2, 2, 2, 2, 0, 2, 2, 0, 2, 2, 2, 1, 2, 2, 2]
Optimized Land Use with benefits restriction: [0, 1, 0, 2, 2, 0, 2, 0, 2, 2, 2, 2, 0, 0, 2, 0, 2, 1, 2, 0, 0, 1, 2, 0, 0]
Initial total costs: 4725.654017342831
Optimized total costs: 2851.0058493012248
Initial total benefit1/ES1: 52.47701098150294
Optimized total benefit1/ES1: 57.69781926655253
Initial total Benefit2/ES2: 118.40448367975495
Optimized total benefit2/ES2: 118.97872525956709
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/d55367464272464fb1a3e25ff4d37f62-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/d55367464272464fb1a3e25ff4d37f62-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2923.84 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.01501
Cbc0038I Pass   1: suminf.    0.42886 (1) obj. 3052.98 iterations 9
Cbc0038I Solution found of 3369.64
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 3369.64 to 3161.63 (0.01 seconds)
Cbc0038I Round again with cutoff of 3137.85
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.42886 (1) obj. 3052.98 iterations 0
Cbc0038I Pass   3: suminf.    0.41806 (1) obj. 3137.85 iterations 5
Cbc0038I Pass   4: suminf.    0.52295 (3) obj. 3137.85 iterations 7
Cbc0038I Pass   5: suminf.    0.52295 (3) obj. 3137.85 iterations 1
Cbc0038I Pass   6: suminf.    0.66843 (3) obj. 2960.33 iterations 11
Cbc0038I Pass   7: suminf.    0.58159 (4) obj. 3137.85 iterations 15
Cbc0038I Pass   8: suminf.    0.26820 (2) obj. 3110.18 iterations 7
Cbc0038I Pass   9: suminf.    0.33467 (2) obj. 3137.85 iterations 6
Cbc0038I Pass  10: suminf.    1.15242 (5) obj. 3137.85 iterations 15
Cbc0038I Pass  11: suminf.    1.04158 (4) obj. 3137.85 iterations 8
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 3034.1 iterations 13
Cbc0038I Solution found of 3034.1
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 17 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 3012.05
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 3
Cbc0038I Pass  13: suminf.    0.48665 (2) obj. 3012.05 iterations 4
Cbc0038I Pass  14: suminf.    0.35687 (2) obj. 3012.05 iterations 7
Cbc0038I Pass  15: suminf.    0.35687 (2) obj. 3012.05 iterations 0
Cbc0038I Pass  16: suminf.    1.06944 (3) obj. 2952.95 iterations 12
Cbc0038I Pass  17: suminf.    0.42393 (3) obj. 3012.05 iterations 16
Cbc0038I Pass  18: suminf.    0.42393 (3) obj. 3012.05 iterations 0
Cbc0038I Pass  19: suminf.    0.48665 (2) obj. 3012.05 iterations 10
Cbc0038I Pass  20: suminf.    0.35687 (2) obj. 3012.05 iterations 6
Cbc0038I Pass  21: suminf.    0.35687 (2) obj. 3012.05 iterations 0
Cbc0038I Pass  22: suminf.    1.06944 (3) obj. 2952.95 iterations 12
Cbc0038I Pass  23: suminf.    0.53503 (2) obj. 3012.05 iterations 9
Cbc0038I Pass  24: suminf.    1.13845 (3) obj. 3012.05 iterations 13
Cbc0038I Pass  25: suminf.    1.13845 (3) obj. 3012.05 iterations 4
Cbc0038I Pass  26: suminf.    1.04390 (3) obj. 3012.05 iterations 5
Cbc0038I Pass  27: suminf.    0.49968 (3) obj. 3012.05 iterations 4
Cbc0038I Pass  28: suminf.    1.10962 (3) obj. 3012.05 iterations 7
Cbc0038I Pass  29: suminf.    1.10962 (3) obj. 3012.05 iterations 0
Cbc0038I Pass  30: suminf.    0.49968 (3) obj. 3012.05 iterations 7
Cbc0038I Pass  31: suminf.    1.25287 (5) obj. 3012.05 iterations 14
Cbc0038I Pass  32: suminf.    1.20052 (5) obj. 3012.05 iterations 2
Cbc0038I Pass  33: suminf.    0.31176 (2) obj. 2949.76 iterations 6
Cbc0038I Pass  34: suminf.    0.06243 (2) obj. 3012.05 iterations 2
Cbc0038I Pass  35: suminf.    0.50347 (2) obj. 3012.05 iterations 6
Cbc0038I Pass  36: suminf.    0.50347 (2) obj. 3012.05 iterations 0
Cbc0038I Pass  37: suminf.    0.75968 (3) obj. 3012.05 iterations 11
Cbc0038I Pass  38: suminf.    0.66603 (3) obj. 3012.05 iterations 1
Cbc0038I Pass  39: suminf.    0.22640 (3) obj. 2949.75 iterations 12
Cbc0038I Pass  40: suminf.    0.09372 (1) obj. 2959.78 iterations 7
Cbc0038I Pass  41: suminf.    0.20496 (1) obj. 3012.05 iterations 3
Cbc0038I Pass  42: suminf.    1.35577 (4) obj. 3012.05 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 17 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 3034.1 - took 0.02 seconds
Cbc0012I Integer solution of 3034.1011 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 5 columns
Cbc0031I 6 added rows had average density of 16.166667
Cbc0013I At root node, 6 cuts changed objective from 2923.8376 to 2975.1213 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 33 row cuts average 33.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 109 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3034.1011 best solution, best possible 2975.1213 (0.04 seconds)
Cbc0001I Search completed - best objective 3034.10111172505, took 318 iterations and 14 nodes (0.07 seconds)
Cbc0032I Strong branching done 166 times (635 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 47 variables fixed on reduced cost
Cuts at root node changed objective from 2923.84 to 2975.12
Probing was tried 49 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 43 times and created 96 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 43 times and created 168 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 43 times and created 313 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                3034.10111173
Enumerated nodes:               14
Total iterations:               318
Time (CPU seconds):             0.07
Time (Wallclock seconds):       0.07

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

initial land use distribution [0, 1, 1, 1, 2, 2, 0, 1, 2, 1, 2, 0, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 1, 1, 1]
Optimized Land Use with benefits restriction: [2, 0, 1, 2, 1, 2, 2, 2, 2, 1, 1, 0, 0, 1, 2, 1, 0, 1, 2, 0, 0, 0, 0, 0, 1]
Initial total costs: 5575.448387269915
Optimized total costs: 3034.101111725141
Initial total benefit1/ES1: 98.41260893368086
Optimized total benefit1/ES1: 98.49454724649874
Initial total Benefit2/ES2: 91.74357239572875
Optimized total benefit2/ES2: 93.8200491495683
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/16f10771a8304ef5aea3c7cd2334c1f5-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/16f10771a8304ef5aea3c7cd2334c1f5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2117.74 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.19801
Cbc0038I Solution found of 2215.82
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 24 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2206.01
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03604 (1) obj. 2206.01 iterations 8
Cbc0038I Pass   2: suminf.    0.14616 (1) obj. 2176.04 iterations 2
Cbc0038I Pass   3: suminf.    0.54358 (2) obj. 2206.01 iterations 7
Cbc0038I Pass   4: suminf.    0.54358 (2) obj. 2206.01 iterations 2
Cbc0038I Pass   5: suminf.    0.86300 (3) obj. 2206.01 iterations 9
Cbc0038I Pass   6: suminf.    1.29347 (3) obj. 2206.01 iterations 8
Cbc0038I Pass   7: suminf.    0.69172 (2) obj. 2206.01 iterations 8
Cbc0038I Pass   8: suminf.    0.38302 (1) obj. 2136.61 iterations 1
Cbc0038I Pass   9: suminf.    0.44522 (1) obj. 2206.01 iterations 5
Cbc0038I Pass  10: suminf.    0.48547 (2) obj. 2206.01 iterations 6
Cbc0038I Pass  11: suminf.    0.48547 (2) obj. 2206.01 iterations 0
Cbc0038I Pass  12: suminf.    0.86300 (3) obj. 2206.01 iterations 10
Cbc0038I Pass  13: suminf.    1.29347 (3) obj. 2206.01 iterations 7
Cbc0038I Pass  14: suminf.    0.69172 (2) obj. 2206.01 iterations 7
Cbc0038I Pass  15: suminf.    0.38302 (1) obj. 2136.61 iterations 1
Cbc0038I Pass  16: suminf.    0.44522 (1) obj. 2206.01 iterations 5
Cbc0038I Pass  17: suminf.    0.30359 (1) obj. 2206.01 iterations 7
Cbc0038I Pass  18: suminf.    0.30359 (1) obj. 2206.01 iterations 2
Cbc0038I Pass  19: suminf.    0.37784 (1) obj. 2141.02 iterations 5
Cbc0038I Pass  20: suminf.    0.47134 (1) obj. 2206.01 iterations 4
Cbc0038I Pass  21: suminf.    0.47134 (1) obj. 2206.01 iterations 1
Cbc0038I Pass  22: suminf.    0.47134 (1) obj. 2206.01 iterations 1
Cbc0038I Pass  23: suminf.    0.54039 (2) obj. 2206.01 iterations 5
Cbc0038I Pass  24: suminf.    0.49499 (1) obj. 2206.01 iterations 3
Cbc0038I Pass  25: suminf.    0.36292 (1) obj. 2190.75 iterations 6
Cbc0038I Pass  26: suminf.    0.40068 (1) obj. 2206.01 iterations 5
Cbc0038I Pass  27: suminf.    0.49499 (1) obj. 2206.01 iterations 1
Cbc0038I Pass  28: suminf.    0.54039 (2) obj. 2206.01 iterations 3
Cbc0038I Pass  29: suminf.    0.61870 (3) obj. 2164.18 iterations 9
Cbc0038I Pass  30: suminf.    1.37943 (4) obj. 2206.01 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 18 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 2215.82 to 2212.21 (0.01 seconds)
Cbc0038I Round again with cutoff of 2188.36
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.10090 (1) obj. 2188.36 iterations 0
Cbc0038I Pass  31: suminf.    0.14616 (1) obj. 2176.04 iterations 2
Cbc0038I Pass  32: suminf.    0.21735 (2) obj. 2188.36 iterations 6
Cbc0038I Pass  33: suminf.    0.19052 (2) obj. 2188.36 iterations 3
Cbc0038I Pass  34: suminf.    0.10090 (1) obj. 2188.36 iterations 3
Cbc0038I Pass  35: suminf.    0.10090 (1) obj. 2188.36 iterations 2
Cbc0038I Pass  36: suminf.    0.20833 (2) obj. 2188.36 iterations 7
Cbc0038I Pass  37: suminf.    0.65228 (3) obj. 2188.36 iterations 10
Cbc0038I Pass  38: suminf.    0.65228 (3) obj. 2188.36 iterations 1
Cbc0038I Pass  39: suminf.    0.38302 (1) obj. 2136.61 iterations 9
Cbc0038I Pass  40: suminf.    0.48891 (1) obj. 2188.36 iterations 5
Cbc0038I Pass  41: suminf.    1.74715 (4) obj. 2188.36 iterations 8
Cbc0038I Pass  42: suminf.    0.48891 (1) obj. 2188.36 iterations 7
Cbc0038I Pass  43: suminf.    0.57893 (2) obj. 2188.36 iterations 3
Cbc0038I Pass  44: suminf.    0.43634 (2) obj. 2188.36 iterations 1
Cbc0038I Pass  45: suminf.    0.36861 (1) obj. 2188.36 iterations 3
Cbc0038I Pass  46: suminf.    0.87653 (3) obj. 2188.36 iterations 3
Cbc0038I Pass  47: suminf.    0.87653 (3) obj. 2188.36 iterations 4
Cbc0038I Pass  48: suminf.    0.38302 (1) obj. 2136.61 iterations 8
Cbc0038I Pass  49: suminf.    0.36861 (1) obj. 2188.36 iterations 6
Cbc0038I Pass  50: suminf.    0.38302 (1) obj. 2136.61 iterations 7
Cbc0038I Pass  51: suminf.    0.38302 (1) obj. 2136.61 iterations 1
Cbc0038I Pass  52: suminf.    0.48891 (1) obj. 2188.36 iterations 5
Cbc0038I Pass  53: suminf.    0.07504 (2) obj. 2188.36 iterations 6
Cbc0038I Pass  54: suminf.    0.07504 (2) obj. 2188.36 iterations 1
Cbc0038I Pass  55: suminf.    0.53909 (2) obj. 2188.36 iterations 8
Cbc0038I Pass  56: suminf.    1.35063 (3) obj. 2188.36 iterations 8
Cbc0038I Pass  57: suminf.    0.98998 (3) obj. 2188.36 iterations 5
Cbc0038I Pass  58: suminf.    1.34714 (3) obj. 2188.36 iterations 7
Cbc0038I Pass  59: suminf.    0.61320 (2) obj. 2188.36 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2212.21 - took 0.01 seconds
Cbc0012I Integer solution of 2212.2054 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 3 columns
Cbc0031I 7 added rows had average density of 15.714286
Cbc0013I At root node, 7 cuts changed objective from 2117.7373 to 2208.5105 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 43 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 52 row cuts average 24.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 84 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective 2212.205370568257, took 115 iterations and 0 nodes (0.04 seconds)
Cbc0032I Strong branching done 10 times (33 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 35 variables fixed on reduced cost
Cuts at root node changed objective from 2117.74 to 2319.97
Probing was tried 15 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 15 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 15 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 15 times and created 52 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 15 times and created 84 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2212.20537057
Enumerated nodes:               0
Total iterations:               115
Time (CPU seconds):             0.04
Time (Wallclock seconds):       0.04

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

initial land use distribution [1, 0, 2, 0, 0, 1, 2, 2, 1, 0, 2, 1, 0, 1, 0, 1, 1, 2, 2, 0, 1, 1, 0, 0, 1]
Optimized Land Use with benefits restriction: [2, 0, 2, 2, 0, 0, 2, 0, 1, 1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 2, 1, 1, 2, 0, 0]
Initial total costs: 4480.202453049501
Optimized total costs: 2212.2053705682915
Initial total benefit1/ES1: 109.62425962530094
Optimized total benefit1/ES1: 110.1583501744293
Initial total Benefit2/ES2: 88.10676713609422
Optimized total benefit2/ES2: 90.02247253753254
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/9882125936fb42fa83f37cfdf53b5244-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/9882125936fb42fa83f37cfdf53b5244-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1743.07 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.23496
Cbc0038I Pass   1: suminf.    0.44151 (1) obj. 1941.17 iterations 5
Cbc0038I Solution found of 2149.84
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2109.16
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.44151 (1) obj. 1941.17 iterations 0
Cbc0038I Pass   3: suminf.    0.08607 (1) obj. 2109.16 iterations 3
Cbc0038I Pass   4: suminf.    1.23868 (5) obj. 2109.16 iterations 14
Cbc0038I Pass   5: suminf.    0.75083 (3) obj. 2109.16 iterations 4
Cbc0038I Pass   6: suminf.    0.74731 (3) obj. 2109.16 iterations 5
Cbc0038I Pass   7: suminf.    1.05350 (3) obj. 2109.16 iterations 6
Cbc0038I Pass   8: suminf.    0.56805 (2) obj. 2109.16 iterations 2
Cbc0038I Pass   9: suminf.    0.72555 (2) obj. 2109.16 iterations 3
Cbc0038I Pass  10: suminf.    0.57251 (5) obj. 2109.16 iterations 11
Cbc0038I Pass  11: suminf.    0.57251 (5) obj. 2109.16 iterations 2
Cbc0038I Pass  12: suminf.    0.14338 (1) obj. 2109.16 iterations 9
Cbc0038I Pass  13: suminf.    0.19456 (1) obj. 2086.91 iterations 1
Cbc0038I Pass  14: suminf.    1.22043 (5) obj. 2109.16 iterations 16
Cbc0038I Pass  15: suminf.    0.92417 (4) obj. 2109.16 iterations 3
Cbc0038I Pass  16: suminf.    0.18496 (2) obj. 2109.16 iterations 6
Cbc0038I Pass  17: suminf.    0.18496 (2) obj. 2109.16 iterations 0
Cbc0038I Pass  18: suminf.    0.61235 (3) obj. 1935.61 iterations 5
Cbc0038I Pass  19: suminf.    0.29210 (1) obj. 1924.97 iterations 2
Cbc0038I Pass  20: suminf.    0.15137 (2) obj. 2109.16 iterations 5
Cbc0038I Pass  21: suminf.    0.72905 (3) obj. 2109.16 iterations 8
Cbc0038I Pass  22: suminf.    0.46943 (2) obj. 2109.16 iterations 3
Cbc0038I Pass  23: suminf.    0.69146 (3) obj. 2075.67 iterations 7
Cbc0038I Pass  24: suminf.    0.32279 (2) obj. 2040.2 iterations 1
Cbc0038I Pass  25: suminf.    0.46943 (2) obj. 2109.16 iterations 6
Cbc0038I Pass  26: suminf.    0.90304 (4) obj. 2109.16 iterations 8
Cbc0038I Pass  27: suminf.    0.70455 (4) obj. 2109.16 iterations 3
Cbc0038I Pass  28: suminf.    1.34223 (3) obj. 2109.16 iterations 6
Cbc0038I Pass  29: suminf.    0.26811 (1) obj. 1987.42 iterations 6
Cbc0038I Pass  30: suminf.    0.34498 (2) obj. 2109.16 iterations 5
Cbc0038I Pass  31: suminf.    0.51639 (3) obj. 1961.15 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 13 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 7 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 2149.84 to 2037.27 (0.02 seconds)
Cbc0038I Round again with cutoff of 1978.43
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.44151 (1) obj. 1941.17 iterations 0
Cbc0038I Pass  32: suminf.    0.36268 (1) obj. 1978.43 iterations 3
Cbc0038I Pass  33: suminf.    0.76383 (4) obj. 1978.43 iterations 6
Cbc0038I Pass  34: suminf.    0.66725 (3) obj. 1978.43 iterations 2
Cbc0038I Pass  35: suminf.    0.29057 (2) obj. 1978.43 iterations 6
Cbc0038I Pass  36: suminf.    0.29057 (2) obj. 1978.43 iterations 1
Cbc0038I Pass  37: suminf.    1.26562 (3) obj. 1976.5 iterations 3
Cbc0038I Pass  38: suminf.    1.26131 (3) obj. 1978.43 iterations 3
Cbc0038I Pass  39: suminf.    1.27182 (3) obj. 1978.43 iterations 4
Cbc0038I Pass  40: suminf.    0.78050 (4) obj. 1978.43 iterations 10
Cbc0038I Pass  41: suminf.    0.74618 (4) obj. 1978.43 iterations 3
Cbc0038I Pass  42: suminf.    0.28200 (2) obj. 1978.43 iterations 5
Cbc0038I Pass  43: suminf.    0.28200 (2) obj. 1978.43 iterations 0
Cbc0038I Pass  44: suminf.    0.12196 (2) obj. 1978.43 iterations 8
Cbc0038I Pass  45: suminf.    0.54906 (3) obj. 1978.43 iterations 4
Cbc0038I Pass  46: suminf.    0.36951 (3) obj. 1978.43 iterations 4
Cbc0038I Pass  47: suminf.    0.32694 (3) obj. 1978.43 iterations 2
Cbc0038I Pass  48: suminf.    0.12196 (2) obj. 1978.43 iterations 6
Cbc0038I Pass  49: suminf.    1.27949 (4) obj. 1978.43 iterations 10
Cbc0038I Pass  50: suminf.    0.44544 (3) obj. 1978.43 iterations 5
Cbc0038I Pass  51: suminf.    0.49211 (3) obj. 1978.43 iterations 4
Cbc0038I Pass  52: suminf.    0.47078 (4) obj. 1978.43 iterations 9
Cbc0038I Pass  53: suminf.    0.39171 (3) obj. 1978.43 iterations 5
Cbc0038I Pass  54: suminf.    0.51889 (2) obj. 1978.43 iterations 3
Cbc0038I Pass  55: suminf.    0.65239 (4) obj. 1978.43 iterations 8
Cbc0038I Pass  56: suminf.    0.26428 (3) obj. 1978.43 iterations 5
Cbc0038I Pass  57: suminf.    0.68228 (3) obj. 1978.43 iterations 6
Cbc0038I Pass  58: suminf.    0.68228 (3) obj. 1978.43 iterations 0
Cbc0038I Pass  59: suminf.    0.68480 (3) obj. 1978.43 iterations 3
Cbc0038I Pass  60: suminf.    0.66681 (3) obj. 1978.43 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 7 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 2037.27 to 2013.01 (0.03 seconds)
Cbc0038I Round again with cutoff of 1907.82
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.60114 (3) obj. 1907.82 iterations 1
Cbc0038I Pass  61: suminf.    1.20853 (3) obj. 1907.82 iterations 6
Cbc0038I Pass  62: suminf.    0.88972 (3) obj. 1907.82 iterations 7
Cbc0038I Pass  63: suminf.    0.88972 (3) obj. 1907.82 iterations 1
Cbc0038I Pass  64: suminf.    0.97277 (4) obj. 1907.82 iterations 5
Cbc0038I Pass  65: suminf.    0.44890 (3) obj. 1907.82 iterations 4
Cbc0038I Pass  66: suminf.    0.81737 (3) obj. 1907.82 iterations 9
Cbc0038I Pass  67: suminf.    0.36898 (2) obj. 1907.82 iterations 3
Cbc0038I Pass  68: suminf.    0.70716 (2) obj. 1907.82 iterations 2
Cbc0038I Pass  69: suminf.    0.50827 (2) obj. 1823.88 iterations 2
Cbc0038I Pass  70: suminf.    0.36898 (2) obj. 1907.82 iterations 2
Cbc0038I Pass  71: suminf.    0.60417 (3) obj. 1907.82 iterations 8
Cbc0038I Pass  72: suminf.    0.05714 (2) obj. 1907.82 iterations 7
Cbc0038I Pass  73: suminf.    0.69354 (2) obj. 1907.82 iterations 2
Cbc0038I Pass  74: suminf.    0.84732 (3) obj. 1907.82 iterations 8
Cbc0038I Pass  75: suminf.    0.84732 (3) obj. 1907.82 iterations 0
Cbc0038I Pass  76: suminf.    0.69354 (2) obj. 1907.82 iterations 4
Cbc0038I Pass  77: suminf.    0.67016 (4) obj. 1907.82 iterations 9
Cbc0038I Pass  78: suminf.    0.25328 (2) obj. 1881.09 iterations 15
Cbc0038I Pass  79: suminf.    0.45874 (3) obj. 1907.82 iterations 3
Cbc0038I Pass  80: suminf.    0.36898 (2) obj. 1907.82 iterations 1
Cbc0038I Pass  81: suminf.    0.70716 (2) obj. 1907.82 iterations 2
Cbc0038I Pass  82: suminf.    0.50827 (2) obj. 1823.88 iterations 2
Cbc0038I Pass  83: suminf.    0.36898 (2) obj. 1907.82 iterations 2
Cbc0038I Pass  84: suminf.    1.51127 (4) obj. 1907.82 iterations 6
Cbc0038I Pass  85: suminf.    0.52749 (2) obj. 1907.82 iterations 5
Cbc0038I Pass  86: suminf.    0.37161 (2) obj. 1827.44 iterations 3
Cbc0038I Pass  87: suminf.    0.41456 (3) obj. 1907.82 iterations 3
Cbc0038I Pass  88: suminf.    0.36898 (2) obj. 1907.82 iterations 1
Cbc0038I Pass  89: suminf.    0.70716 (2) obj. 1907.82 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 8 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of 2013.01 - took 0.03 seconds
Cbc0012I Integer solution of 2013.0071 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0012I Integer solution of 2006.2207 found by DiveCoefficient after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 3 columns
Cbc0031I 12 added rows had average density of 35.083333
Cbc0013I At root node, 12 cuts changed objective from 1743.0709 to 1883.6391 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 34.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 50 row cuts average 39.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 72 row cuts average 34.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2006.2207 best solution, best possible 1883.6391 (0.08 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 10 columns
Cbc0012I Integer solution of 1940.6824 found by DiveCoefficient after 787 iterations and 45 nodes (0.17 seconds)
Cbc0001I Search completed - best objective 1940.68239512349, took 1013 iterations and 50 nodes (0.21 seconds)
Cbc0032I Strong branching done 530 times (2700 iterations), fathomed 15 nodes and fixed 15 variables
Cbc0035I Maximum depth 12, 256 variables fixed on reduced cost
Cuts at root node changed objective from 1743.07 to 1883.64
Probing was tried 116 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Gomory was tried 17 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 111 times and created 142 cuts of which 0 were active after adding rounds of cuts (0.051 seconds)
Clique was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 111 times and created 410 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
FlowCover was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 111 times and created 336 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1940.68239512
Enumerated nodes:               50
Total iterations:               1013
Time (CPU seconds):             0.20
Time (Wallclock seconds):       0.21

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.21

initial land use distribution [0, 2, 1, 2, 1, 1, 0, 2, 2, 0, 1, 0, 0, 1, 2, 1, 2, 0, 0, 2, 0, 0, 1, 0, 1]
Optimized Land Use with benefits restriction: [2, 1, 1, 0, 0, 1, 1, 2, 0, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 1]
Initial total costs: 4347.007724179693
Optimized total costs: 1940.6823951234871
Initial total benefit1/ES1: 94.4969733589951
Optimized total benefit1/ES1: 94.95860192920298
Initial total Benefit2/ES2: 68.42882962522233
Optimized total benefit2/ES2: 69.53890188727445
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/1f08febd30f64a52b36ef70926a1955d-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/1f08febd30f64a52b36ef70926a1955d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2365.78 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.650353
Cbc0038I Pass   1: suminf.    0.18358 (1) obj. 2392.62 iterations 7
Cbc0038I Solution found of 2705.21
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 22 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 2705.21 to 2546.78 (0.01 seconds)
Cbc0038I Round again with cutoff of 2528.68
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.18358 (1) obj. 2392.62 iterations 0
Cbc0038I Pass   3: suminf.    0.46105 (1) obj. 2528.68 iterations 1
Cbc0038I Pass   4: suminf.    0.71002 (3) obj. 2528.68 iterations 10
Cbc0038I Pass   5: suminf.    0.65065 (3) obj. 2528.68 iterations 3
Cbc0038I Pass   6: suminf.    0.40680 (1) obj. 2528.68 iterations 6
Cbc0038I Pass   7: suminf.    0.16235 (1) obj. 2435.09 iterations 1
Cbc0038I Pass   8: suminf.    0.92309 (3) obj. 2528.68 iterations 9
Cbc0038I Solution found of 2456.36
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 17 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2438.25
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 3
Cbc0038I Pass   9: suminf.    0.18358 (1) obj. 2392.62 iterations 0
Cbc0038I Pass  10: suminf.    0.30275 (1) obj. 2438.25 iterations 1
Cbc0038I Pass  11: suminf.    0.44957 (3) obj. 2438.25 iterations 11
Cbc0038I Pass  12: suminf.    0.30608 (2) obj. 2438.25 iterations 4
Cbc0038I Pass  13: suminf.    0.45303 (2) obj. 2420.07 iterations 5
Cbc0038I Pass  14: suminf.    0.39434 (2) obj. 2438.25 iterations 3
Cbc0038I Pass  15: suminf.    0.63240 (2) obj. 2438.25 iterations 5
Cbc0038I Pass  16: suminf.    0.16235 (1) obj. 2435.09 iterations 4
Cbc0038I Pass  17: suminf.    0.17060 (1) obj. 2438.25 iterations 1
Cbc0038I Pass  18: suminf.    1.17534 (4) obj. 2438.25 iterations 5
Cbc0038I Pass  19: suminf.    0.93912 (4) obj. 2438.25 iterations 4
Cbc0038I Pass  20: suminf.    0.84173 (4) obj. 2438.25 iterations 3
Cbc0038I Pass  21: suminf.    0.91853 (3) obj. 2438.25 iterations 6
Cbc0038I Pass  22: suminf.    0.39643 (2) obj. 2438.25 iterations 6
Cbc0038I Pass  23: suminf.    0.23208 (2) obj. 2381.27 iterations 2
Cbc0038I Pass  24: suminf.    0.18358 (1) obj. 2392.62 iterations 1
Cbc0038I Pass  25: suminf.    0.30275 (1) obj. 2438.25 iterations 1
Cbc0038I Pass  26: suminf.    0.58011 (2) obj. 2438.25 iterations 2
Cbc0038I Pass  27: suminf.    0.14532 (2) obj. 2438.25 iterations 2
Cbc0038I Pass  28: suminf.    0.14532 (2) obj. 2438.25 iterations 0
Cbc0038I Pass  29: suminf.    0.45303 (2) obj. 2420.07 iterations 4
Cbc0038I Pass  30: suminf.    0.39434 (2) obj. 2438.25 iterations 3
Cbc0038I Pass  31: suminf.    0.63240 (2) obj. 2438.25 iterations 5
Cbc0038I Pass  32: suminf.    0.16235 (1) obj. 2435.09 iterations 4
Cbc0038I Pass  33: suminf.    0.17060 (1) obj. 2438.25 iterations 1
Cbc0038I Pass  34: suminf.    0.67468 (2) obj. 2438.25 iterations 6
Cbc0038I Pass  35: suminf.    0.67468 (2) obj. 2438.25 iterations 1
Cbc0038I Pass  36: suminf.    0.45303 (2) obj. 2420.07 iterations 4
Cbc0038I Pass  37: suminf.    0.39434 (2) obj. 2438.25 iterations 3
Cbc0038I Pass  38: suminf.    0.63240 (2) obj. 2438.25 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 18 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 2456.36 - took 0.01 seconds
Cbc0012I Integer solution of 2456.3624 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 4 columns
Cbc0031I 6 added rows had average density of 26.666667
Cbc0013I At root node, 6 cuts changed objective from 2365.7826 to 2444.9398 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 34 row cuts average 29.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 84 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2456.3624 best solution, best possible 2444.9398 (0.03 seconds)
Cbc0001I Search completed - best objective 2456.36241317535, took 85 iterations and 2 nodes (0.03 seconds)
Cbc0032I Strong branching done 22 times (84 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 41 variables fixed on reduced cost
Cuts at root node changed objective from 2365.78 to 2444.94
Probing was tried 14 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 12 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 12 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 12 times and created 96 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2456.36241318
Enumerated nodes:               2
Total iterations:               85
Time (CPU seconds):             0.03
Time (Wallclock seconds):       0.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

initial land use distribution [0, 2, 0, 1, 0, 2, 0, 1, 1, 0, 2, 2, 0, 2, 2, 0, 0, 1, 2, 0, 2, 2, 1, 1, 0]
Optimized Land Use with benefits restriction: [0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 2, 2, 0, 0, 2, 1, 2, 2, 2, 2, 0, 1, 0, 0, 2]
Initial total costs: 4739.195464287826
Optimized total costs: 2456.3624131753586
Initial total benefit1/ES1: 54.58109133354753
Optimized total benefit1/ES1: 54.67707495975915
Initial total Benefit2/ES2: 86.35773225268962
Optimized total benefit2/ES2: 87.94191765415889
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/db780a5caf35424faed7c49d06856514-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/db780a5caf35424faed7c49d06856514-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2231.39 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.73805
Cbc0038I Pass   1: suminf.    0.35393 (1) obj. 2263.36 iterations 4
Cbc0038I Solution found of 2503.53
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 2503.53 to 2425.16 (0.01 seconds)
Cbc0038I Round again with cutoff of 2405.78
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.35393 (1) obj. 2263.36 iterations 0
Cbc0038I Pass   3: suminf.    0.27080 (1) obj. 2405.78 iterations 5
Cbc0038I Pass   4: suminf.    0.49110 (1) obj. 2326.27 iterations 2
Cbc0038I Pass   5: suminf.    0.99705 (4) obj. 2405.78 iterations 12
Cbc0038I Pass   6: suminf.    0.30606 (3) obj. 2405.78 iterations 7
Cbc0038I Pass   7: suminf.    0.83852 (3) obj. 2405.78 iterations 6
Cbc0038I Pass   8: suminf.    0.02409 (1) obj. 2320.53 iterations 7
Cbc0038I Pass   9: suminf.    0.44299 (1) obj. 2405.78 iterations 4
Cbc0038I Pass  10: suminf.    0.30116 (1) obj. 2354.59 iterations 1
Cbc0038I Pass  11: suminf.    0.09019 (3) obj. 2317.81 iterations 6
Cbc0038I Pass  12: suminf.    1.00215 (4) obj. 2405.78 iterations 5
Cbc0038I Pass  13: suminf.    0.30606 (3) obj. 2405.78 iterations 6
Cbc0038I Pass  14: suminf.    0.83852 (3) obj. 2405.78 iterations 6
Cbc0038I Pass  15: suminf.    0.02409 (1) obj. 2320.53 iterations 7
Cbc0038I Pass  16: suminf.    0.44299 (1) obj. 2405.78 iterations 4
Cbc0038I Pass  17: suminf.    0.30116 (1) obj. 2354.59 iterations 1
Cbc0038I Pass  18: suminf.    0.36589 (4) obj. 2405.78 iterations 9
Cbc0038I Pass  19: suminf.    0.21752 (3) obj. 2405.78 iterations 4
Cbc0038I Pass  20: suminf.    1.08242 (3) obj. 2405.78 iterations 5
Cbc0038I Pass  21: suminf.    0.72346 (4) obj. 2405.78 iterations 5
Cbc0038I Pass  22: suminf.    0.63101 (3) obj. 2405.78 iterations 6
Cbc0038I Pass  23: suminf.    0.16776 (1) obj. 2395.22 iterations 11
Cbc0038I Pass  24: suminf.    0.73091 (3) obj. 2405.78 iterations 8
Cbc0038I Pass  25: suminf.    0.34442 (3) obj. 2405.78 iterations 8
Cbc0038I Pass  26: suminf.    0.33623 (3) obj. 2405.78 iterations 1
Cbc0038I Pass  27: suminf.    0.40284 (2) obj. 2405.78 iterations 5
Cbc0038I Pass  28: suminf.    0.58075 (3) obj. 2405.78 iterations 6
Cbc0038I Pass  29: suminf.    0.37180 (3) obj. 2405.78 iterations 3
Cbc0038I Pass  30: suminf.    0.28837 (3) obj. 2405.78 iterations 3
Cbc0038I Pass  31: suminf.    0.75753 (3) obj. 2405.78 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 15 columns
Cbc0038I Mini branch and bound improved solution from 2425.16 to 2352.8 (0.01 seconds)
Cbc0038I Round again with cutoff of 2328.52
Cbc0038I Reduced cost fixing fixed 28 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.35393 (1) obj. 2263.36 iterations 0
Cbc0038I Pass  32: suminf.    0.48487 (1) obj. 2328.52 iterations 5
Cbc0038I Pass  33: suminf.    0.49110 (1) obj. 2326.27 iterations 2
Cbc0038I Pass  34: suminf.    0.87654 (3) obj. 2326.21 iterations 7
Cbc0038I Pass  35: suminf.    0.84002 (4) obj. 2328.52 iterations 6
Cbc0038I Pass  36: suminf.    0.35393 (1) obj. 2263.36 iterations 7
Cbc0038I Pass  37: suminf.    0.35393 (1) obj. 2263.36 iterations 0
Cbc0038I Pass  38: suminf.    0.48487 (1) obj. 2328.52 iterations 3
Cbc0038I Pass  39: suminf.    0.49110 (1) obj. 2326.27 iterations 1
Cbc0038I Pass  40: suminf.    0.85060 (3) obj. 2328.52 iterations 8
Cbc0038I Pass  41: suminf.    0.51716 (2) obj. 2328.52 iterations 3
Cbc0038I Pass  42: suminf.    0.38326 (3) obj. 2328.52 iterations 5
Cbc0038I Pass  43: suminf.    0.55515 (3) obj. 2328.52 iterations 6
Cbc0038I Pass  44: suminf.    0.38330 (2) obj. 2328.52 iterations 9
Cbc0038I Pass  45: suminf.    0.38330 (2) obj. 2328.52 iterations 2
Cbc0038I Pass  46: suminf.    1.30364 (4) obj. 2328.52 iterations 7
Cbc0038I Pass  47: suminf.    0.69879 (2) obj. 2328.52 iterations 5
Cbc0038I Pass  48: suminf.    0.02750 (1) obj. 2328.52 iterations 5
Cbc0038I Pass  49: suminf.    0.22381 (1) obj. 2257.66 iterations 2
Cbc0038I Pass  50: suminf.    0.22381 (1) obj. 2257.66 iterations 1
Cbc0038I Pass  51: suminf.    0.49264 (3) obj. 2328.52 iterations 7
Cbc0038I Pass  52: suminf.    0.36797 (4) obj. 2328.52 iterations 3
Cbc0038I Pass  53: suminf.    0.23172 (3) obj. 2328.52 iterations 4
Cbc0038I Pass  54: suminf.    0.87300 (3) obj. 2328.52 iterations 8
Cbc0038I Pass  55: suminf.    0.87300 (3) obj. 2328.52 iterations 0
Cbc0038I Pass  56: suminf.    0.50751 (3) obj. 2309.33 iterations 6
Cbc0038I Pass  57: suminf.    0.38552 (2) obj. 2328.52 iterations 7
Cbc0038I Pass  58: suminf.    0.40093 (1) obj. 2322.26 iterations 3
Cbc0038I Pass  59: suminf.    0.63755 (4) obj. 2328.52 iterations 8
Cbc0038I Pass  60: suminf.    0.63755 (4) obj. 2328.52 iterations 2
Cbc0038I Rounding solution of 2338.44 is better than previous of 2352.8

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 2299.38
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.35393 (1) obj. 2263.36 iterations 0
Cbc0038I Pass  61: suminf.    0.55734 (2) obj. 2299.38 iterations 5
Cbc0038I Pass  62: suminf.    0.35393 (1) obj. 2263.36 iterations 3
Cbc0038I Pass  63: suminf.    0.70519 (4) obj. 2299.38 iterations 12
Cbc0038I Pass  64: suminf.    0.70519 (4) obj. 2299.38 iterations 1
Cbc0038I Pass  65: suminf.    0.26428 (3) obj. 2299.38 iterations 5
Cbc0038I Pass  66: suminf.    0.10823 (1) obj. 2299.38 iterations 3
Cbc0038I Pass  67: suminf.    0.22381 (1) obj. 2257.66 iterations 2
Cbc0038I Pass  68: suminf.    0.69880 (3) obj. 2299.38 iterations 7
Cbc0038I Pass  69: suminf.    0.62241 (2) obj. 2299.38 iterations 4
Cbc0038I Pass  70: suminf.    0.27058 (2) obj. 2299.38 iterations 5
Cbc0038I Pass  71: suminf.    0.25920 (1) obj. 2299.38 iterations 2
Cbc0038I Pass  72: suminf.    0.26071 (1) obj. 2298.83 iterations 2
Cbc0038I Pass  73: suminf.    0.27150 (2) obj. 2299.38 iterations 4
Cbc0038I Pass  74: suminf.    0.92648 (3) obj. 2299.38 iterations 15
Cbc0038I Pass  75: suminf.    0.92648 (3) obj. 2299.38 iterations 0
Cbc0038I Pass  76: suminf.    0.53716 (3) obj. 2299.38 iterations 6
Cbc0038I Pass  77: suminf.    0.39443 (1) obj. 2299.38 iterations 1
Cbc0038I Pass  78: suminf.    0.43155 (1) obj. 2285.98 iterations 2
Cbc0038I Pass  79: suminf.    1.04716 (4) obj. 2299.38 iterations 9
Cbc0038I Pass  80: suminf.    0.08064 (1) obj. 2265.07 iterations 6
Cbc0038I Pass  81: suminf.    0.70077 (2) obj. 2299.38 iterations 4
Cbc0038I Pass  82: suminf.    0.70077 (2) obj. 2299.38 iterations 1
Cbc0038I Pass  83: suminf.    0.80627 (4) obj. 2299.38 iterations 6
Cbc0038I Pass  84: suminf.    0.58593 (4) obj. 2299.38 iterations 7
Cbc0038I Pass  85: suminf.    0.79158 (3) obj. 2299.38 iterations 4
Cbc0038I Pass  86: suminf.    0.79158 (3) obj. 2299.38 iterations 1
Cbc0038I Pass  87: suminf.    0.71279 (4) obj. 2299.38 iterations 6
Cbc0038I Pass  88: suminf.    0.50993 (2) obj. 2299.38 iterations 3
Cbc0038I Pass  89: suminf.    0.84978 (4) obj. 2299.38 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 14 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 2338.44 - took 0.02 seconds
Cbc0012I Integer solution of 2338.443 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 2 columns
Cbc0031I 9 added rows had average density of 20.777778
Cbc0013I At root node, 9 cuts changed objective from 2231.3911 to 2296.5536 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 41 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 94 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2338.443 best solution, best possible 2297.0548 (0.05 seconds)
Cbc0016I Integer solution of 2336.0077 found by strong branching after 237 iterations and 2 nodes (0.07 seconds)
Cbc0001I Search completed - best objective 2336.00769259446, took 267 iterations and 4 nodes (0.07 seconds)
Cbc0032I Strong branching done 60 times (301 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 34 variables fixed on reduced cost
Cuts at root node changed objective from 2231.39 to 2297.05
Probing was tried 14 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 36 times and created 80 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Clique was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 36 times and created 143 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 36 times and created 224 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2336.00769259
Enumerated nodes:               4
Total iterations:               267
Time (CPU seconds):             0.07
Time (Wallclock seconds):       0.07

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

initial land use distribution [0, 1, 1, 2, 1, 0, 2, 1, 2, 0, 2, 1, 0, 2, 0, 2, 0, 1, 0, 2, 1, 2, 0, 1, 2]
Optimized Land Use with benefits restriction: [1, 1, 1, 1, 0, 0, 2, 0, 1, 0, 0, 2, 1, 0, 0, 0, 2, 0, 0, 1, 2, 2, 2, 0, 2]
Initial total costs: 4548.297800092775
Optimized total costs: 2336.0076925944
Initial total benefit1/ES1: 70.80369835735095
Optimized total benefit1/ES1: 70.9036905636248
Initial total Benefit2/ES2: 69.05440364733133
Optimized total benefit2/ES2: 69.48812655223176
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/8f4fba398a29405cb26c4f88e45a3132-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/8f4fba398a29405cb26c4f88e45a3132-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1315.34 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.34609
Cbc0038I Pass   1: suminf.    0.39832 (1) obj. 1485.48 iterations 7
Cbc0038I Solution found of 1761.13
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 1761.13 to 1442.29 (0.01 seconds)
Cbc0038I Round again with cutoff of 1429.6
Cbc0038I Reduced cost fixing fixed 23 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.50731 (3) obj. 1429.6 iterations 6
Cbc0038I Pass   3: suminf.    0.45585 (1) obj. 1429.6 iterations 6
Cbc0038I Pass   4: suminf.    0.39916 (2) obj. 1429.6 iterations 5
Cbc0038I Pass   5: suminf.    0.45585 (1) obj. 1429.6 iterations 3
Cbc0038I Pass   6: suminf.    1.58338 (4) obj. 1429.6 iterations 8
Cbc0038I Pass   7: suminf.    0.45860 (2) obj. 1419.83 iterations 5
Cbc0038I Pass   8: suminf.    0.43238 (1) obj. 1429.6 iterations 3
Cbc0038I Pass   9: suminf.    1.09638 (3) obj. 1429.6 iterations 6
Cbc0038I Pass  10: suminf.    0.50619 (2) obj. 1429.6 iterations 2
Cbc0038I Pass  11: suminf.    0.45585 (1) obj. 1429.6 iterations 3
Cbc0038I Pass  12: suminf.    0.39916 (2) obj. 1429.6 iterations 4
Cbc0038I Pass  13: suminf.    0.45585 (1) obj. 1429.6 iterations 3
Cbc0038I Pass  14: suminf.    1.47132 (4) obj. 1429.6 iterations 17
Cbc0038I Pass  15: suminf.    0.35223 (3) obj. 1429.6 iterations 2
Cbc0038I Pass  16: suminf.    0.25974 (3) obj. 1429.6 iterations 6
Cbc0038I Pass  17: suminf.    0.31875 (3) obj. 1429.6 iterations 6
Cbc0038I Pass  18: suminf.    0.89089 (5) obj. 1429.6 iterations 6
Cbc0038I Pass  19: suminf.    0.71912 (3) obj. 1429.6 iterations 8
Cbc0038I Pass  20: suminf.    0.66395 (3) obj. 1429.6 iterations 5
Cbc0038I Pass  21: suminf.    1.22322 (3) obj. 1429.6 iterations 6
Cbc0038I Pass  22: suminf.    0.44154 (1) obj. 1414.25 iterations 2
Cbc0038I Pass  23: suminf.    0.47880 (1) obj. 1429.6 iterations 1
Cbc0038I Pass  24: suminf.    0.66395 (3) obj. 1429.6 iterations 5
Cbc0038I Pass  25: suminf.    0.60844 (3) obj. 1429.6 iterations 4
Cbc0038I Pass  26: suminf.    0.39205 (1) obj. 1413.08 iterations 3
Cbc0038I Pass  27: suminf.    0.43217 (1) obj. 1429.6 iterations 2
Cbc0038I Pass  28: suminf.    0.83044 (2) obj. 1429.6 iterations 2
Cbc0038I Pass  29: suminf.    0.43217 (1) obj. 1429.6 iterations 2
Cbc0038I Pass  30: suminf.    1.28436 (4) obj. 1429.6 iterations 6
Cbc0038I Pass  31: suminf.    0.73038 (3) obj. 1429.6 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 16 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 1442.29 - took 0.01 seconds
Cbc0012I Integer solution of 1442.2928 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0031I 9 added rows had average density of 26.444444
Cbc0013I At root node, 9 cuts changed objective from 1315.3383 to 1417.6952 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 33 row cuts average 31.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 117 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1442.2928 best solution, best possible 1417.6952 (0.03 seconds)
Cbc0012I Integer solution of 1441.0295 found by rounding after 221 iterations and 7 nodes (0.06 seconds)
Cbc0001I Search completed - best objective 1441.029477061188, took 238 iterations and 8 nodes (0.06 seconds)
Cbc0032I Strong branching done 110 times (569 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 52 variables fixed on reduced cost
Cuts at root node changed objective from 1315.34 to 1417.7
Probing was tried 29 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 27 times and created 37 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 27 times and created 108 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 27 times and created 252 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1441.02947706
Enumerated nodes:               8
Total iterations:               238
Time (CPU seconds):             0.06
Time (Wallclock seconds):       0.06

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

initial land use distribution [2, 0, 1, 0, 0, 0, 0, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 1, 1, 1, 2, 1, 0, 1]
Optimized Land Use with benefits restriction: [2, 0, 0, 2, 2, 2, 0, 0, 0, 2, 0, 0, 1, 0, 2, 1, 0, 2, 0, 0, 1, 1, 1, 0, 1]
Initial total costs: 3540.260451710295
Optimized total costs: 1441.029477061133
Initial total benefit1/ES1: 73.41600206854612
Optimized total benefit1/ES1: 73.76230359634135
Initial total Benefit2/ES2: 92.26350932144948
Optimized total benefit2/ES2: 92.32848233184518
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/97ab7401244e421aa37053079568a44b-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/97ab7401244e421aa37053079568a44b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2334.84 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.865444
Cbc0038I Pass   1: suminf.    0.32882 (1) obj. 2426.46 iterations 6
Cbc0038I Solution found of 2796.04
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 24 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2749.92
Cbc0038I Pass   2: suminf.    0.32882 (1) obj. 2426.46 iterations 0
Cbc0038I Pass   3: suminf.    0.08376 (1) obj. 2749.92 iterations 1
Cbc0038I Pass   4: suminf.    0.83113 (3) obj. 2749.92 iterations 12
Cbc0038I Pass   5: suminf.    0.35423 (2) obj. 2664.02 iterations 3
Cbc0038I Pass   6: suminf.    0.54757 (2) obj. 2749.92 iterations 2
Cbc0038I Pass   7: suminf.    0.35423 (2) obj. 2664.02 iterations 2
Cbc0038I Pass   8: suminf.    1.27948 (4) obj. 2749.92 iterations 10
Cbc0038I Pass   9: suminf.    0.89735 (3) obj. 2749.92 iterations 4
Cbc0038I Pass  10: suminf.    0.42641 (3) obj. 2749.92 iterations 6
Cbc0038I Pass  11: suminf.    0.85130 (3) obj. 2630.84 iterations 7
Cbc0038I Pass  12: suminf.    0.18855 (2) obj. 2749.92 iterations 5
Cbc0038I Pass  13: suminf.    1.55056 (5) obj. 2749.92 iterations 11
Cbc0038I Pass  14: suminf.    0.73590 (2) obj. 2749.92 iterations 6
Cbc0038I Pass  15: suminf.    0.09996 (1) obj. 2620.1 iterations 4
Cbc0038I Pass  16: suminf.    0.37564 (1) obj. 2749.92 iterations 3
Cbc0038I Pass  17: suminf.    0.90371 (3) obj. 2749.92 iterations 11
Cbc0038I Pass  18: suminf.    0.90371 (3) obj. 2749.92 iterations 1
Cbc0038I Pass  19: suminf.    0.45545 (1) obj. 2621.74 iterations 4
Cbc0038I Pass  20: suminf.    0.27234 (1) obj. 2749.92 iterations 3
Cbc0038I Pass  21: suminf.    1.05477 (4) obj. 2749.92 iterations 8
Cbc0038I Pass  22: suminf.    0.97387 (4) obj. 2749.92 iterations 1
Cbc0038I Pass  23: suminf.    0.92853 (3) obj. 2749.92 iterations 5
Cbc0038I Solution found of 2679.22
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 9 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 7 rows 22 columns
Cbc0038I Mini branch and bound improved solution from 2679.22 to 2446.93 (0.01 seconds)
Cbc0038I Round again with cutoff of 2424.51
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 3
Cbc0038I Pass  24: suminf.    0.33323 (3) obj. 2424.51 iterations 2
Cbc0038I Pass  25: suminf.    0.76535 (3) obj. 2424.51 iterations 3
Cbc0038I Pass  26: suminf.    0.83227 (3) obj. 2424.51 iterations 3
Cbc0038I Pass  27: suminf.    0.92054 (3) obj. 2424.33 iterations 14
Cbc0038I Pass  28: suminf.    0.51696 (3) obj. 2424.51 iterations 5
Cbc0038I Pass  29: suminf.    1.19879 (3) obj. 2424.51 iterations 6
Cbc0038I Pass  30: suminf.    1.10162 (3) obj. 2424.51 iterations 3
Cbc0038I Pass  31: suminf.    0.99879 (5) obj. 2424.51 iterations 5
Cbc0038I Pass  32: suminf.    0.80328 (3) obj. 2424.51 iterations 3
Cbc0038I Pass  33: suminf.    0.87976 (3) obj. 2424.51 iterations 2
Cbc0038I Pass  34: suminf.    0.57308 (3) obj. 2424.51 iterations 8
Cbc0038I Pass  35: suminf.    0.29575 (3) obj. 2424.51 iterations 4
Cbc0038I Pass  36: suminf.    1.17188 (3) obj. 2424.51 iterations 4
Cbc0038I Pass  37: suminf.    0.88483 (3) obj. 2424.51 iterations 2
Cbc0038I Pass  38: suminf.    1.17188 (3) obj. 2424.51 iterations 2
Cbc0038I Pass  39: suminf.    0.93667 (4) obj. 2424.51 iterations 4
Cbc0038I Pass  40: suminf.    0.93583 (4) obj. 2424.51 iterations 1
Cbc0038I Pass  41: suminf.    0.71116 (3) obj. 2424.51 iterations 5
Cbc0038I Pass  42: suminf.    0.67848 (3) obj. 2424.51 iterations 2
Cbc0038I Pass  43: suminf.    0.18827 (2) obj. 2411.06 iterations 3
Cbc0038I Pass  44: suminf.    0.14943 (2) obj. 2424.51 iterations 3
Cbc0038I Pass  45: suminf.    0.80527 (3) obj. 2424.51 iterations 4
Cbc0038I Pass  46: suminf.    1.12533 (3) obj. 2424.51 iterations 2
Cbc0038I Pass  47: suminf.    0.99676 (3) obj. 2424.51 iterations 1
Cbc0038I Pass  48: suminf.    1.27024 (3) obj. 2424.51 iterations 2
Cbc0038I Pass  49: suminf.    0.38217 (4) obj. 2424.51 iterations 5
Cbc0038I Pass  50: suminf.    0.14607 (2) obj. 2416.08 iterations 4
Cbc0038I Pass  51: suminf.    0.16504 (2) obj. 2424.51 iterations 3
Cbc0038I Pass  52: suminf.    0.28316 (4) obj. 2424.51 iterations 9
Cbc0038I Pass  53: suminf.    0.22748 (3) obj. 2424.51 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 14 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2446.93 - took 0.02 seconds
Cbc0012I Integer solution of 2446.9266 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0031I 6 added rows had average density of 20.5
Cbc0013I At root node, 6 cuts changed objective from 2334.843 to 2408.2223 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 34 row cuts average 32.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 94 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2446.9266 best solution, best possible 2408.2223 (0.04 seconds)
Cbc0001I Search completed - best objective 2446.92662658042, took 504 iterations and 14 nodes (0.09 seconds)
Cbc0032I Strong branching done 184 times (803 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 4, 71 variables fixed on reduced cost
Cuts at root node changed objective from 2334.84 to 2408.22
Probing was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 55 times and created 142 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 55 times and created 269 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 55 times and created 342 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2446.92662658
Enumerated nodes:               14
Total iterations:               504
Time (CPU seconds):             0.09
Time (Wallclock seconds):       0.10

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10

initial land use distribution [0, 1, 1, 0, 1, 2, 2, 1, 2, 2, 2, 1, 0, 0, 0, 0, 2, 2, 1, 2, 2, 2, 0, 1, 0]
Optimized Land Use with benefits restriction: [2, 0, 0, 1, 0, 0, 2, 1, 2, 2, 2, 0, 0, 2, 1, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0]
Initial total costs: 4444.416343202525
Optimized total costs: 2446.9266265802985
Initial total benefit1/ES1: 82.08489417190259
Optimized total benefit1/ES1: 83.95600961910137
Initial total Benefit2/ES2: 85.34634160629264
Optimized total benefit2/ES2: 86.46292933923988
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/88d01a10ca874590aeacc5598738bf9f-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/88d01a10ca874590aeacc5598738bf9f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2454.79 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.05817
Cbc0038I Pass   1: suminf.    0.47940 (2) obj. 2466.39 iterations 5
Cbc0038I Solution found of 3093.24
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 22 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from 3093.24 to 2636.48 (0.01 seconds)
Cbc0038I Round again with cutoff of 2618.31
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.47940 (2) obj. 2466.39 iterations 0
Cbc0038I Pass   3: suminf.    0.04524 (1) obj. 2618.31 iterations 9
Cbc0038I Pass   4: suminf.    0.04524 (1) obj. 2618.31 iterations 0
Cbc0038I Pass   5: suminf.    0.57920 (2) obj. 2479.26 iterations 4
Cbc0038I Pass   6: suminf.    0.04524 (1) obj. 2618.31 iterations 4
Cbc0038I Pass   7: suminf.    1.28148 (4) obj. 2618.31 iterations 13
Cbc0038I Pass   8: suminf.    1.28148 (4) obj. 2618.31 iterations 4
Cbc0038I Pass   9: suminf.    0.72435 (3) obj. 2618.31 iterations 8
Cbc0038I Pass  10: suminf.    0.11022 (1) obj. 2507.46 iterations 2
Cbc0038I Pass  11: suminf.    0.35291 (1) obj. 2618.31 iterations 5
Cbc0038I Pass  12: suminf.    0.67804 (3) obj. 2618.31 iterations 10
Cbc0038I Pass  13: suminf.    0.56443 (2) obj. 2618.31 iterations 3
Cbc0038I Pass  14: suminf.    0.55811 (2) obj. 2618.31 iterations 6
Cbc0038I Pass  15: suminf.    0.49132 (2) obj. 2582.69 iterations 2
Cbc0038I Pass  16: suminf.    0.58601 (2) obj. 2618.31 iterations 4
Cbc0038I Pass  17: suminf.    0.58601 (2) obj. 2618.31 iterations 1
Cbc0038I Pass  18: suminf.    0.55811 (2) obj. 2618.31 iterations 3
Cbc0038I Pass  19: suminf.    1.10527 (3) obj. 2618.31 iterations 10
Cbc0038I Pass  20: suminf.    0.21857 (2) obj. 2618.31 iterations 4
Cbc0038I Pass  21: suminf.    0.38818 (3) obj. 2618.31 iterations 4
Cbc0038I Pass  22: suminf.    1.44349 (4) obj. 2618.31 iterations 10
Cbc0038I Pass  23: suminf.    1.04689 (3) obj. 2618.31 iterations 4
Cbc0038I Pass  24: suminf.    0.93074 (3) obj. 2618.31 iterations 1
Cbc0038I Pass  25: suminf.    0.71725 (3) obj. 2618.31 iterations 1
Cbc0038I Pass  26: suminf.    1.04578 (3) obj. 2618.31 iterations 6
Cbc0038I Pass  27: suminf.    0.93951 (3) obj. 2618.31 iterations 6
Cbc0038I Pass  28: suminf.    0.93532 (3) obj. 2618.31 iterations 8
Cbc0038I Pass  29: suminf.    0.92820 (3) obj. 2618.31 iterations 3
Cbc0038I Pass  30: suminf.    0.60118 (2) obj. 2525.61 iterations 6
Cbc0038I Pass  31: suminf.    0.07864 (3) obj. 2618.31 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 15 columns
Cbc0038I Mini branch and bound improved solution from 2636.48 to 2621.31 (0.01 seconds)
Cbc0038I Round again with cutoff of 2585.61
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.47940 (2) obj. 2466.39 iterations 0
Cbc0038I Pass  32: suminf.    0.19656 (2) obj. 2585.61 iterations 8
Cbc0038I Pass  33: suminf.    0.17839 (2) obj. 2585.61 iterations 2
Cbc0038I Pass  34: suminf.    0.77862 (2) obj. 2585.61 iterations 3
Cbc0038I Pass  35: suminf.    0.57920 (2) obj. 2479.26 iterations 2
Cbc0038I Pass  36: suminf.    0.17839 (2) obj. 2585.61 iterations 4
Cbc0038I Pass  37: suminf.    0.63352 (2) obj. 2585.61 iterations 6
Cbc0038I Pass  38: suminf.    0.08858 (1) obj. 2546.69 iterations 3
Cbc0038I Pass  39: suminf.    0.16637 (1) obj. 2585.61 iterations 1
Cbc0038I Pass  40: suminf.    0.51499 (2) obj. 2585.61 iterations 16
Cbc0038I Pass  41: suminf.    0.51499 (2) obj. 2585.61 iterations 1
Cbc0038I Pass  42: suminf.    0.66672 (2) obj. 2585.61 iterations 3
Cbc0038I Pass  43: suminf.    0.61179 (2) obj. 2564.19 iterations 2
Cbc0038I Pass  44: suminf.    0.72499 (4) obj. 2585.61 iterations 8
Cbc0038I Pass  45: suminf.    0.44091 (2) obj. 2585.61 iterations 4
Cbc0038I Pass  46: suminf.    0.62933 (3) obj. 2585.61 iterations 4
Cbc0038I Pass  47: suminf.    0.85294 (3) obj. 2585.61 iterations 4
Cbc0038I Pass  48: suminf.    0.85294 (3) obj. 2585.61 iterations 1
Cbc0038I Pass  49: suminf.    0.76961 (3) obj. 2585.61 iterations 4
Cbc0038I Pass  50: suminf.    0.52614 (3) obj. 2585.61 iterations 1
Cbc0038I Pass  51: suminf.    1.06116 (3) obj. 2585.61 iterations 7
Cbc0038I Pass  52: suminf.    0.72670 (3) obj. 2585.61 iterations 6
Cbc0038I Pass  53: suminf.    1.05120 (4) obj. 2585.61 iterations 6
Cbc0038I Pass  54: suminf.    0.13520 (3) obj. 2585.61 iterations 7
Cbc0038I Pass  55: suminf.    0.04994 (1) obj. 2570.22 iterations 2
Cbc0038I Pass  56: suminf.    0.08363 (1) obj. 2585.61 iterations 5
Cbc0038I Pass  57: suminf.    0.14099 (3) obj. 2585.61 iterations 9
Cbc0038I Pass  58: suminf.    0.08505 (3) obj. 2585.61 iterations 3
Cbc0038I Pass  59: suminf.    1.02319 (4) obj. 2585.61 iterations 4
Cbc0038I Pass  60: suminf.    0.44593 (4) obj. 2585.61 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 15 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2621.31 - took 0.02 seconds
Cbc0012I Integer solution of 2621.3072 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 3 rows 6 columns
Cbc0031I 9 added rows had average density of 30
Cbc0013I At root node, 9 cuts changed objective from 2454.7936 to 2564.7742 in 30 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 24.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 103 row cuts average 29.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 99 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2621.3072 best solution, best possible 2564.7742 (0.08 seconds)
Cbc0012I Integer solution of 2591.6138 found by DiveCoefficient after 344 iterations and 6 nodes (0.11 seconds)
Cbc0001I Search completed - best objective 2591.61377070392, took 516 iterations and 14 nodes (0.12 seconds)
Cbc0032I Strong branching done 244 times (1033 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 6, 73 variables fixed on reduced cost
Cuts at root node changed objective from 2454.79 to 2564.77
Probing was tried 30 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 62 times and created 83 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 62 times and created 146 cuts of which 0 were active after adding rounds of cuts (0.039 seconds)
Clique was tried 30 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 62 times and created 280 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 30 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 62 times and created 271 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2591.61377070
Enumerated nodes:               14
Total iterations:               516
Time (CPU seconds):             0.12
Time (Wallclock seconds):       0.12

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.13

initial land use distribution [0, 0, 1, 1, 1, 0, 2, 1, 0, 2, 2, 2, 0, 0, 1, 2, 0, 1, 2, 2, 1, 0, 1, 2, 1]
Optimized Land Use with benefits restriction: [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 1, 1, 2, 2, 1, 2, 2, 1, 0, 0, 0, 1, 2, 1]
Initial total costs: 5557.5664264721
Optimized total costs: 2591.6137707039097
Initial total benefit1/ES1: 87.94711431714245
Optimized total benefit1/ES1: 88.45259865417846
Initial total Benefit2/ES2: 99.26177271155537
Optimized total benefit2/ES2: 99.37607529214297
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/585c8d7757ce4039883092eb6b28d481-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/585c8d7757ce4039883092eb6b28d481-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3079.95 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.21176
Cbc0038I Solution found of 3252.49
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 24 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 3235.24
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.04449 (1) obj. 3235.24 iterations 11
Cbc0038I Pass   2: suminf.    0.32998 (1) obj. 3124.52 iterations 6
Cbc0038I Pass   3: suminf.    1.23262 (4) obj. 3235.24 iterations 15
Cbc0038I Pass   4: suminf.    0.43184 (1) obj. 3228.43 iterations 5
Cbc0038I Pass   5: suminf.    0.41685 (1) obj. 3235.24 iterations 5
Cbc0038I Pass   6: suminf.    1.07198 (4) obj. 3235.24 iterations 13
Cbc0038I Pass   7: suminf.    0.86261 (3) obj. 3235.24 iterations 6
Cbc0038I Pass   8: suminf.    1.11264 (3) obj. 3235.24 iterations 8
Cbc0038I Pass   9: suminf.    1.04901 (3) obj. 3235.24 iterations 6
Cbc0038I Pass  10: suminf.    0.83877 (3) obj. 3235.24 iterations 15
Cbc0038I Pass  11: suminf.    0.76315 (3) obj. 3235.24 iterations 5
Cbc0038I Pass  12: suminf.    1.40457 (3) obj. 3235.24 iterations 11
Cbc0038I Pass  13: suminf.    1.03169 (3) obj. 3235.24 iterations 7
Cbc0038I Pass  14: suminf.    0.75123 (4) obj. 3235.24 iterations 5
Cbc0038I Pass  15: suminf.    0.70433 (3) obj. 3235.24 iterations 3
Cbc0038I Pass  16: suminf.    0.88837 (2) obj. 3184.33 iterations 10
Cbc0038I Pass  17: suminf.    0.55736 (3) obj. 3235.24 iterations 6
Cbc0038I Pass  18: suminf.    0.80334 (3) obj. 3235.24 iterations 6
Cbc0038I Pass  19: suminf.    1.22014 (5) obj. 3235.24 iterations 8
Cbc0038I Pass  20: suminf.    0.53075 (4) obj. 3235.24 iterations 10
Cbc0038I Pass  21: suminf.    0.27709 (2) obj. 3235.24 iterations 4
Cbc0038I Pass  22: suminf.    0.58580 (2) obj. 3209.47 iterations 6
Cbc0038I Pass  23: suminf.    0.51019 (2) obj. 3235.24 iterations 5
Cbc0038I Pass  24: suminf.    0.95665 (4) obj. 3235.24 iterations 10
Cbc0038I Pass  25: suminf.    0.33928 (1) obj. 3231.83 iterations 7
Cbc0038I Pass  26: suminf.    0.34679 (1) obj. 3235.24 iterations 3
Cbc0038I Pass  27: suminf.    0.92234 (4) obj. 3235.24 iterations 11
Cbc0038I Pass  28: suminf.    0.24057 (1) obj. 3206.33 iterations 8
Cbc0038I Pass  29: suminf.    0.30421 (1) obj. 3235.24 iterations 2
Cbc0038I Pass  30: suminf.    0.30134 (4) obj. 3235.24 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 12 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 6 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 3252.49 to 3196.82 (0.02 seconds)
Cbc0038I Round again with cutoff of 3173.45
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.20381 (1) obj. 3173.45 iterations 0
Cbc0038I Pass  31: suminf.    0.32998 (1) obj. 3124.52 iterations 5
Cbc0038I Pass  32: suminf.    0.20381 (1) obj. 3173.45 iterations 4
Cbc0038I Pass  33: suminf.    0.76026 (3) obj. 3080.95 iterations 8
Cbc0038I Pass  34: suminf.    0.84655 (4) obj. 3173.45 iterations 13
Cbc0038I Pass  35: suminf.    0.54468 (3) obj. 3173.45 iterations 3
Cbc0038I Pass  36: suminf.    1.34601 (3) obj. 3173.45 iterations 9
Cbc0038I Pass  37: suminf.    0.32655 (1) obj. 3157.5 iterations 10
Cbc0038I Pass  38: suminf.    0.36165 (1) obj. 3173.45 iterations 3
Cbc0038I Pass  39: suminf.    1.09205 (4) obj. 3173.45 iterations 8
Cbc0038I Pass  40: suminf.    1.09205 (4) obj. 3173.45 iterations 2
Cbc0038I Pass  41: suminf.    0.44701 (3) obj. 3173.45 iterations 4
Cbc0038I Pass  42: suminf.    0.24268 (1) obj. 3148.32 iterations 5
Cbc0038I Pass  43: suminf.    0.29801 (1) obj. 3173.45 iterations 3
Cbc0038I Pass  44: suminf.    0.97293 (3) obj. 3173.45 iterations 10
Cbc0038I Pass  45: suminf.    0.39240 (2) obj. 3173.45 iterations 16
Cbc0038I Pass  46: suminf.    0.19788 (3) obj. 3173.45 iterations 7
Cbc0038I Pass  47: suminf.    0.44268 (3) obj. 3173.45 iterations 5
Cbc0038I Pass  48: suminf.    0.45403 (3) obj. 3173.45 iterations 11
Cbc0038I Pass  49: suminf.    0.45403 (3) obj. 3173.45 iterations 1
Cbc0038I Pass  50: suminf.    0.72450 (3) obj. 3173.45 iterations 8
Cbc0038I Pass  51: suminf.    1.27248 (5) obj. 3173.45 iterations 8
Cbc0038I Pass  52: suminf.    0.69283 (2) obj. 3173.45 iterations 6
Cbc0038I Pass  53: suminf.    0.93055 (3) obj. 3173.45 iterations 6
Cbc0038I Pass  54: suminf.    0.83465 (3) obj. 3173.45 iterations 5
Cbc0038I Pass  55: suminf.    0.73833 (3) obj. 3173.45 iterations 2
Cbc0038I Pass  56: suminf.    1.34601 (3) obj. 3173.45 iterations 8
Cbc0038I Pass  57: suminf.    0.32655 (1) obj. 3157.5 iterations 8
Cbc0038I Pass  58: suminf.    0.36165 (1) obj. 3173.45 iterations 2
Cbc0038I Pass  59: suminf.    0.54897 (4) obj. 3173.45 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 13 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 3196.82 - took 0.03 seconds
Cbc0012I Integer solution of 3196.8242 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 4 columns
Cbc0031I 8 added rows had average density of 23
Cbc0013I At root node, 8 cuts changed objective from 3079.9536 to 3145.0451 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 49 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 93 row cuts average 26.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3196.8242 best solution, best possible 3145.0451 (0.06 seconds)
Cbc0012I Integer solution of 3195.3816 found by DiveCoefficient after 217 iterations and 4 nodes (0.09 seconds)
Cbc0012I Integer solution of 3174.2714 found by DiveCoefficient after 494 iterations and 30 nodes (0.12 seconds)
Cbc0001I Search completed - best objective 3174.271375449551, took 721 iterations and 42 nodes (0.15 seconds)
Cbc0032I Strong branching done 528 times (2104 iterations), fathomed 7 nodes and fixed 9 variables
Cbc0035I Maximum depth 10, 104 variables fixed on reduced cost
Cuts at root node changed objective from 3079.95 to 3145.05
Probing was tried 75 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 16 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 68 times and created 122 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
Clique was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 68 times and created 265 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 68 times and created 357 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                3174.27137545
Enumerated nodes:               42
Total iterations:               721
Time (CPU seconds):             0.15
Time (Wallclock seconds):       0.15

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.15

initial land use distribution [1, 2, 0, 1, 2, 1, 1, 1, 0, 1, 0, 0, 2, 1, 2, 1, 1, 2, 2, 2, 1, 0, 0, 2, 2]
Optimized Land Use with benefits restriction: [1, 1, 1, 0, 2, 1, 2, 2, 2, 1, 0, 1, 0, 0, 2, 1, 1, 2, 1, 0, 0, 2, 0, 2, 2]
Initial total costs: 4677.78966473902
Optimized total costs: 3174.2713754495703
Initial total benefit1/ES1: 100.6343711175135
Optimized total benefit1/ES1: 100.98690579495467
Initial total Benefit2/ES2: 104.06096499631649
Optimized total benefit2/ES2: 104.14658602738105
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/5d05a5a33a824245a229623b51482c73-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/5d05a5a33a824245a229623b51482c73-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2453.19 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.370412
Cbc0038I Pass   1: suminf.    0.00346 (1) obj. 2510.2 iterations 10
Cbc0038I Solution found of 2932.01
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 23 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 2884.13
Cbc0038I Pass   2: suminf.    0.00346 (1) obj. 2510.2 iterations 0
Cbc0038I Pass   3: suminf.    0.11203 (1) obj. 2884.13 iterations 6
Cbc0038I Pass   4: suminf.    0.38193 (1) obj. 2768.77 iterations 4
Cbc0038I Pass   5: suminf.    0.81962 (3) obj. 2884.13 iterations 17
Cbc0038I Pass   6: suminf.    0.14675 (2) obj. 2758.48 iterations 6
Cbc0038I Pass   7: suminf.    0.44040 (2) obj. 2884.13 iterations 4
Cbc0038I Pass   8: suminf.    0.47163 (3) obj. 2884.13 iterations 13
Cbc0038I Pass   9: suminf.    0.28671 (2) obj. 2884.13 iterations 4
Cbc0038I Pass  10: suminf.    0.96255 (3) obj. 2884.13 iterations 4
Cbc0038I Pass  11: suminf.    0.17118 (1) obj. 2884.13 iterations 6
Cbc0038I Solution found of 2811.22
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 12 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 4 rows 15 columns
Cbc0038I Mini branch and bound improved solution from 2811.22 to 2545.74 (0.01 seconds)
Cbc0038I Round again with cutoff of 2527.23
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 3
Cbc0038I Pass  12: suminf.    0.00346 (1) obj. 2510.2 iterations 0
Cbc0038I Pass  13: suminf.    0.48575 (2) obj. 2527.23 iterations 4
Cbc0038I Pass  14: suminf.    1.35378 (4) obj. 2527.23 iterations 12
Cbc0038I Pass  15: suminf.    1.31079 (4) obj. 2527.23 iterations 4
Cbc0038I Pass  16: suminf.    1.08199 (3) obj. 2527.23 iterations 4
Cbc0038I Pass  17: suminf.    0.82100 (3) obj. 2527.23 iterations 3
Cbc0038I Pass  18: suminf.    0.59635 (3) obj. 2527.23 iterations 5
Cbc0038I Pass  19: suminf.    0.38442 (2) obj. 2527.23 iterations 3
Cbc0038I Pass  20: suminf.    1.16490 (4) obj. 2527.23 iterations 6
Cbc0038I Pass  21: suminf.    0.43682 (2) obj. 2527.23 iterations 6
Cbc0038I Pass  22: suminf.    1.15275 (4) obj. 2527.23 iterations 13
Cbc0038I Pass  23: suminf.    0.26663 (1) obj. 2481.68 iterations 7
Cbc0038I Pass  24: suminf.    0.04331 (1) obj. 2527.23 iterations 4
Cbc0038I Pass  25: suminf.    0.18183 (1) obj. 2468.02 iterations 3
Cbc0038I Pass  26: suminf.    1.11365 (4) obj. 2527.23 iterations 7
Cbc0038I Pass  27: suminf.    1.11365 (4) obj. 2527.23 iterations 1
Cbc0038I Pass  28: suminf.    0.04331 (1) obj. 2527.23 iterations 8
Cbc0038I Pass  29: suminf.    1.34780 (4) obj. 2527.23 iterations 8
Cbc0038I Pass  30: suminf.    0.84739 (3) obj. 2527.23 iterations 5
Cbc0038I Pass  31: suminf.    1.73295 (4) obj. 2527.23 iterations 7
Cbc0038I Pass  32: suminf.    1.73295 (4) obj. 2527.23 iterations 3
Cbc0038I Pass  33: suminf.    0.04331 (1) obj. 2527.23 iterations 8
Cbc0038I Pass  34: suminf.    0.04331 (1) obj. 2527.23 iterations 0
Cbc0038I Pass  35: suminf.    0.18183 (1) obj. 2468.02 iterations 3
Cbc0038I Pass  36: suminf.    0.85879 (3) obj. 2527.23 iterations 9
Cbc0038I Pass  37: suminf.    0.70383 (2) obj. 2517.5 iterations 5
Cbc0038I Pass  38: suminf.    0.72657 (2) obj. 2527.23 iterations 4
Cbc0038I Pass  39: suminf.    0.70383 (2) obj. 2517.5 iterations 3
Cbc0038I Pass  40: suminf.    0.54607 (4) obj. 2527.23 iterations 5
Cbc0038I Pass  41: suminf.    0.54607 (4) obj. 2527.23 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 13 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 5 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 2545.74 - took 0.01 seconds
Cbc0012I Integer solution of 2545.7413 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0031I 8 added rows had average density of 16.625
Cbc0013I At root node, 8 cuts changed objective from 2453.187 to 2503.3406 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 29 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 29 row cuts average 30.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 106 row cuts average 18.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 2545.7413 best solution, best possible 2503.3406 (0.04 seconds)
Cbc0001I Search completed - best objective 2545.7412923774, took 308 iterations and 8 nodes (0.07 seconds)
Cbc0032I Strong branching done 126 times (597 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 47 variables fixed on reduced cost
Cuts at root node changed objective from 2453.19 to 2503.34
Probing was tried 34 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 31 times and created 35 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 31 times and created 88 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 31 times and created 151 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 31 times and created 341 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2545.74129238
Enumerated nodes:               8
Total iterations:               308
Time (CPU seconds):             0.07
Time (Wallclock seconds):       0.07

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07

initial land use distribution [1, 0, 0, 1, 0, 2, 2, 1, 0, 2, 0, 1, 1, 1, 2, 1, 2, 2, 2, 0, 2, 2, 1, 0, 2]
Optimized Land Use with benefits restriction: [0, 2, 2, 0, 2, 0, 1, 1, 0, 1, 2, 1, 2, 2, 2, 0, 1, 0, 0, 2, 0, 0, 1, 0, 1]
Initial total costs: 4860.820259944348
Optimized total costs: 2545.741292377471
Initial total benefit1/ES1: 86.54674851748014
Optimized total benefit1/ES1: 87.53201520761243
Initial total Benefit2/ES2: 94.60715632660093
Optimized total benefit2/ES2: 96.87358629257491
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /Users/linapalomo/opt/anaconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/osx/64/cbc /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/70335ccdb5c3496eaef0a09bea8fde53-pulp.mps timeMode elapsed branch printingOptions all solution /var/folders/zw/3xgv0hhs2xl3vj2xy0kvh9xh0000gn/T/70335ccdb5c3496eaef0a09bea8fde53-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 408 RHS
At line 436 BOUNDS
At line 512 ENDATA
Problem MODEL has 27 rows, 75 columns and 175 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1282.85 - 0.00 seconds
Cgl0004I processed model has 27 rows, 75 columns (75 integer (75 of which binary)) and 175 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.219753
Cbc0038I Solution found of 1307.66
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 24 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 1305.18
Cbc0038I Reduced cost fixing fixed 43 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.01034 (1) obj. 1305.18 iterations 4
Cbc0038I Pass   2: suminf.    0.09966 (1) obj. 1283.74 iterations 1
Cbc0038I Pass   3: suminf.    0.03495 (1) obj. 1300.5 iterations 4
Cbc0038I Pass   4: suminf.    0.03495 (1) obj. 1300.5 iterations 0
Cbc0038I Pass   5: suminf.    0.03495 (1) obj. 1300.5 iterations 0
Cbc0038I Pass   6: suminf.    0.10519 (2) obj. 1282.87 iterations 2
Cbc0038I Pass   7: suminf.    0.41791 (2) obj. 1305.18 iterations 6
Cbc0038I Pass   8: suminf.    0.30762 (2) obj. 1305.18 iterations 2
Cbc0038I Pass   9: suminf.    0.41791 (2) obj. 1305.18 iterations 2
Cbc0038I Pass  10: suminf.    0.41791 (2) obj. 1305.18 iterations 0
Cbc0038I Pass  11: suminf.    1.46128 (4) obj. 1305.18 iterations 5
Cbc0038I Pass  12: suminf.    1.22329 (4) obj. 1305.18 iterations 2
Cbc0038I Pass  13: suminf.    0.79090 (4) obj. 1305.18 iterations 3
Cbc0038I Pass  14: suminf.    0.79090 (4) obj. 1305.18 iterations 0
Cbc0038I Pass  15: suminf.    0.79090 (4) obj. 1305.18 iterations 0
Cbc0038I Pass  16: suminf.    0.79090 (4) obj. 1305.18 iterations 0
Cbc0038I Pass  17: suminf.    0.79090 (4) obj. 1305.18 iterations 0
Cbc0038I Pass  18: suminf.    0.79090 (4) obj. 1305.18 iterations 0
Cbc0038I Pass  19: suminf.    0.41791 (2) obj. 1305.18 iterations 5
Cbc0038I Pass  20: suminf.    0.30762 (2) obj. 1305.18 iterations 2
Cbc0038I Pass  21: suminf.    0.41791 (2) obj. 1305.18 iterations 2
Cbc0038I Pass  22: suminf.    0.41791 (2) obj. 1305.18 iterations 0
Cbc0038I Pass  23: suminf.    0.41791 (2) obj. 1305.18 iterations 0
Cbc0038I Pass  24: suminf.    0.30762 (2) obj. 1305.18 iterations 3
Cbc0038I Pass  25: suminf.    1.22329 (4) obj. 1305.18 iterations 7
Cbc0038I Pass  26: suminf.    1.22329 (4) obj. 1305.18 iterations 0
Cbc0038I Pass  27: suminf.    0.77374 (3) obj. 1305.18 iterations 3
Cbc0038I Pass  28: suminf.    0.77374 (3) obj. 1305.18 iterations 0
Cbc0038I Pass  29: suminf.    0.51387 (3) obj. 1305.18 iterations 3
Cbc0038I Pass  30: suminf.    0.51184 (3) obj. 1294.71 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 20 continuous
Cbc0038I Full problem 27 rows 75 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 1307.66 - took 0.01 seconds
Cbc0012I Integer solution of 1307.6584 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 27 rows 75 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 1282.8525 to 1282.8525 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 1307.658380721388, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 43 variables fixed on reduced cost
Cuts at root node changed objective from 1282.85 to 1282.85
Probing was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1307.65838072
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

initial land use distribution [1, 0, 0, 1, 2, 2, 1, 1, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0, 1, 2, 1, 0, 2]
Optimized Land Use with benefits restriction: [0, 0, 1, 0, 0, 1, 2, 1, 0, 1, 0, 1, 2, 0, 2, 1, 2, 0, 0, 0, 0, 1, 0, 1, 0]
Initial total costs: 3847.129381529814
Optimized total costs: 1307.6583807213676
Initial total benefit1/ES1: 79.6612191732172
Optimized total benefit1/ES1: 80.00948492418532
Initial total Benefit2/ES2: 55.85769210561409
Optimized total benefit2/ES2: 57.04207540590569
